{"ast":null,"code":"import './style.css';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\n/**\n * Base\n */\n// Canvas\n\nconst canvas = document.querySelector('canvas.webgl'); // Scene\n\nconst scene = new THREE.Scene(); //light\n\nconst lightColor = \"#ffffff\";\nconst intensity = 1;\nconst light = new THREE.DirectionalLight(lightColor, intensity);\nlight.position.set(-1, 2, 4);\nscene.add(light);\n/**\n * Object\n */\n// load font\n\nconst loader = new THREE.FontLoader();\nconst font = loader.load( // resource URL\n'./assets/day1/anthony.json', // onLoad callback\nfunction (font) {\n  const color = 0x0;\n  const mat = new THREE.MeshPhysicalMaterial({\n    color: 0xffffff,\n    emissive: 0x000000,\n    transparent: true,\n    opacity: 1,\n    side: THREE.DoubleSide,\n    roughness: 0,\n    metalness: 0,\n    reflectivity: 0,\n    clearcoat: 1,\n    clearcoatRoughness: 1\n  }); // const mat = new THREE.MeshToonMaterial({\n  //     color: 0xf,\n  // })\n\n  const message = \"50 days of \\nimmersive web\"; // const shapes = font.generateShapes( message, 100 );\n  // const geometry = new THREE.ShapeGeometry( shapes );\n\n  const geometry = new THREE.TextGeometry(message, {\n    font: font,\n    size: 72,\n    height: 8,\n    curveSegments: 1,\n    bevelEnabled: true,\n    bevelThickness: 0.15,\n    bevelSize: 0.3,\n    bevelSegments: 5\n  });\n  geometry.computeBoundingBox();\n  const xMid = -0.5 * (geometry.boundingBox.max.x - geometry.boundingBox.min.x);\n  geometry.translate(xMid, 0, 0); // make shape ( N.B. edge view not visible )\n\n  const text = new THREE.Mesh(geometry, mat);\n  text.position.y = 100;\n  text.position.z = -80;\n  text.rotation.x = -1.3;\n  scene.add(text);\n}, // onProgress callback\nfunction (xhr) {\n  console.log(xhr.loaded / xhr.total * 100 + '% loaded');\n}, // onError callback\nfunction (err) {\n  console.log('An error happened');\n}); // water\n\nscene.background = new THREE.Color(0xffffff);\nscene.fog = new THREE.FogExp2(0xffffff, 0.0009);\nconst worldWidth = 128,\n      worldDepth = 128;\nlet waterGeometry = new THREE.PlaneGeometry(20000, 20000, worldWidth - 1, worldDepth - 1);\nwaterGeometry.rotateX(-Math.PI / 2);\nconst position = waterGeometry.attributes.position;\n\nfor (let i = 0; i < position.count; i++) {\n  const y = 35 * Math.sin(i / 2);\n  position.setY(i, y);\n} // const texture = new THREE.TextureLoader().load('https://live.staticflickr.com/4066/4344198258_e647f9487b_b.jpg');\n\n\nconst texture = new THREE.TextureLoader().load('./assets/day1/texture.jpeg');\ntexture.wrapS = texture.wrapT = THREE.RepeatWrapping;\ntexture.repeat.set(5, 5);\nlet waterMaterial = new THREE.MeshBasicMaterial({\n  color: 0x555555,\n  map: texture\n});\nlet water = new THREE.Mesh(waterGeometry, waterMaterial);\nscene.add(water);\n/**\n * Sizes\n */\n\nconst sizes = {\n  width: window.innerWidth,\n  height: window.innerHeight\n}; // Listen to the resize event\n\nwindow.addEventListener('resize', () => {\n  //update size for resize\n  sizes.width = window.innerWidth;\n  sizes.height = window.innerHeight; //update camera\n\n  camera.aspect = sizes.width / sizes.height;\n  camera.updateProjectionMatrix(); //update renderer\n\n  renderer.setSize(sizes.width, sizes.height); // see https://threejs.org/docs/index.html?q=updat#manual/en/introduction/How-to-update-things\n\n  renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2)); // change pixel ratio to reduce jaggies & limit it into 2(more than 2 becomes extremely slow)\n});\nwindow.addEventListener('dblclick', () => {\n  const fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement; //for safari\n\n  if (!fullscreenElement) {\n    if (canvas.requestFullscreen) {\n      canvas.requestFullscreen(); // doesn't work on Safari\n    } else if (canvas.webkitRequestFullscreen) {\n      canvas.webkitRequestFullscreen(); //for Safari\n    }\n  } else {\n    if (document.exitFullscreen) {\n      document.exitFullscreen(); //not the canvas, it is document    \n    } else if (document.webkitExitFullscreen) {\n      document.webkitExitFullscreen(); //for Safari\n    }\n  }\n});\n/**\n * Camera\n */\n// Base camera\n\nconst camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 1, 10000);\ncamera.position.set(0, 100, 1000);\nscene.add(camera); // Controls\n\nconst controls = new OrbitControls(camera, canvas);\ncontrols.enableDamping = true;\n/**\n * Renderer\n */\n\nconst renderer = new THREE.WebGLRenderer({\n  canvas: canvas\n});\nrenderer.setSize(sizes.width, sizes.height);\n/**\n * Animate\n */\n\nconst clock = new THREE.Clock();\n\nconst tick = () => {\n  const delta = clock.getDelta();\n  const time = clock.getElapsedTime() * 10;\n  const position = waterGeometry.attributes.position;\n\n  for (let i = 0; i < position.count; i++) {\n    const y = 35 * Math.sin(i / 5 + (time + i) / 7);\n    position.setY(i, y);\n  }\n\n  position.needsUpdate = true; // controls.update( delta );\n\n  const elapsedTime = clock.getElapsedTime(); // Update controls\n\n  controls.update(); // Render\n\n  renderer.setClearColor(0xffffff, 1);\n  renderer.render(scene, camera); // Call tick again on the next frame\n\n  window.requestAnimationFrame(tick);\n};\n\ntick();","map":{"version":3,"sources":["/Users/jeeyoonhyun/immersive-web/src/day1/script.js"],"names":["THREE","OrbitControls","canvas","document","querySelector","scene","Scene","lightColor","intensity","light","DirectionalLight","position","set","add","loader","FontLoader","font","load","color","mat","MeshPhysicalMaterial","emissive","transparent","opacity","side","DoubleSide","roughness","metalness","reflectivity","clearcoat","clearcoatRoughness","message","geometry","TextGeometry","size","height","curveSegments","bevelEnabled","bevelThickness","bevelSize","bevelSegments","computeBoundingBox","xMid","boundingBox","max","x","min","translate","text","Mesh","y","z","rotation","xhr","console","log","loaded","total","err","background","Color","fog","FogExp2","worldWidth","worldDepth","waterGeometry","PlaneGeometry","rotateX","Math","PI","attributes","i","count","sin","setY","texture","TextureLoader","wrapS","wrapT","RepeatWrapping","repeat","waterMaterial","MeshBasicMaterial","map","water","sizes","width","window","innerWidth","innerHeight","addEventListener","camera","aspect","updateProjectionMatrix","renderer","setSize","setPixelRatio","devicePixelRatio","fullscreenElement","webkitFullscreenElement","requestFullscreen","webkitRequestFullscreen","exitFullscreen","webkitExitFullscreen","PerspectiveCamera","controls","enableDamping","WebGLRenderer","clock","Clock","tick","delta","getDelta","time","getElapsedTime","needsUpdate","elapsedTime","update","setClearColor","render","requestAnimationFrame"],"mappings":"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","sourcesContent":["import './style.css'\nimport * as THREE from 'three'\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js'\n\n/**\n * Base\n */\n// Canvas\nconst canvas = document.querySelector('canvas.webgl')\n\n// Scene\nconst scene = new THREE.Scene()\n\n//light\nconst lightColor = \"#ffffff\";\nconst intensity = 1;\nconst light = new THREE.DirectionalLight(lightColor, intensity);\nlight.position.set(-1, 2, 4);\nscene.add(light);\n\n\n/**\n * Object\n */\n\n// load font\nconst loader = new THREE.FontLoader();\nconst font = loader.load(\n    // resource URL\n    './assets/day1/anthony.json',\n\n    // onLoad callback\n    function (font) {\n        const color = 0x0;\n\n        const mat = new THREE.MeshPhysicalMaterial({\n            color: 0xffffff,\n            emissive: 0x000000,\n            transparent: true,\n            opacity: 1,\n            side: THREE.DoubleSide,\n            roughness: 0,\n            metalness: 0,\n            reflectivity: 0,\n            clearcoat: 1,\n            clearcoatRoughness: 1,\n        });\n        // const mat = new THREE.MeshToonMaterial({\n        //     color: 0xf,\n        // })\n\n        const message = \"50 days of \\nimmersive web\";\n\n        // const shapes = font.generateShapes( message, 100 );\n        // const geometry = new THREE.ShapeGeometry( shapes );\n\n        const geometry = new THREE.TextGeometry(message, {\n            font: font,\n            size: 72,\n            height: 8,\n            curveSegments: 1,\n            bevelEnabled: true,\n            bevelThickness: 0.15,\n            bevelSize: 0.3,\n            bevelSegments: 5,\n        });\n\n        geometry.computeBoundingBox();\n\n        const xMid = - 0.5 * (geometry.boundingBox.max.x - geometry.boundingBox.min.x);\n\n        geometry.translate(xMid, 0, 0);\n\n        // make shape ( N.B. edge view not visible )\n\n        const text = new THREE.Mesh(geometry, mat);\n        text.position.y = 100;\n        text.position.z = -80;\n        text.rotation.x = -1.3;\n        scene.add(text);\n    },\n\n    // onProgress callback\n    function (xhr) {\n        console.log((xhr.loaded / xhr.total * 100) + '% loaded');\n    },\n\n    // onError callback\n    function (err) {\n        console.log('An error happened');\n    }\n);\n\n// water\nscene.background = new THREE.Color(0xffffff);\nscene.fog = new THREE.FogExp2(0xffffff, 0.0009);\n\nconst worldWidth = 128, worldDepth = 128;\nlet waterGeometry = new THREE.PlaneGeometry(20000, 20000, worldWidth - 1, worldDepth - 1);\nwaterGeometry.rotateX(- Math.PI / 2);\nconst position = waterGeometry.attributes.position;\nfor (let i = 0; i < position.count; i++) {\n\n    const y = 35 * Math.sin(i / 2);\n    position.setY(i, y);\n\n}\n\n// const texture = new THREE.TextureLoader().load('https://live.staticflickr.com/4066/4344198258_e647f9487b_b.jpg');\nconst texture = new THREE.TextureLoader().load('./assets/day1/texture.jpeg');\ntexture.wrapS = texture.wrapT = THREE.RepeatWrapping;\ntexture.repeat.set(5, 5);\n\nlet waterMaterial = new THREE.MeshBasicMaterial({ color: 0x555555, map: texture });\nlet water = new THREE.Mesh(waterGeometry, waterMaterial);\nscene.add(water);\n\n/**\n * Sizes\n */\nconst sizes = {\n    width: window.innerWidth,\n    height: window.innerHeight\n}\n\n// Listen to the resize event\nwindow.addEventListener('resize', () => {\n    //update size for resize\n    sizes.width = window.innerWidth\n    sizes.height = window.innerHeight\n\n    //update camera\n    camera.aspect = sizes.width / sizes.height\n    camera.updateProjectionMatrix();\n\n    //update renderer\n    renderer.setSize(sizes.width, sizes.height) // see https://threejs.org/docs/index.html?q=updat#manual/en/introduction/How-to-update-things\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2)); // change pixel ratio to reduce jaggies & limit it into 2(more than 2 becomes extremely slow)\n})\n\nwindow.addEventListener('dblclick', () => {\n\n    const fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement //for safari\n\n    if (!fullscreenElement) {\n        if (canvas.requestFullscreen) {\n            canvas.requestFullscreen(); // doesn't work on Safari\n        } else if (canvas.webkitRequestFullscreen) {\n            canvas.webkitRequestFullscreen(); //for Safari\n        }\n\n    } else {\n        if (document.exitFullscreen) {\n            document.exitFullscreen(); //not the canvas, it is document    \n        } else if (document.webkitExitFullscreen) {\n            document.webkitExitFullscreen(); //for Safari\n        }\n\n    }\n});\n/**\n * Camera\n */\n// Base camera\nconst camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 1, 10000)\ncamera.position.set(0, 100, 1000);\nscene.add(camera)\n\n\n// Controls\nconst controls = new OrbitControls(camera, canvas)\ncontrols.enableDamping = true\n\n/**\n * Renderer\n */\nconst renderer = new THREE.WebGLRenderer({\n    canvas: canvas\n})\n\nrenderer.setSize(sizes.width, sizes.height)\n\n/**\n * Animate\n */\nconst clock = new THREE.Clock()\n\nconst tick = () => {\n    const delta = clock.getDelta();\n    const time = clock.getElapsedTime() * 10;\n\n    const position = waterGeometry.attributes.position;\n\n    for (let i = 0; i < position.count; i++) {\n\n        const y = 35 * Math.sin(i / 5 + (time + i) / 7);\n        position.setY(i, y);\n\n    }\n    position.needsUpdate = true;\n\n    // controls.update( delta );\n\n    const elapsedTime = clock.getElapsedTime()\n\n    // Update controls\n    controls.update()\n\n    // Render\n    renderer.setClearColor(0xffffff, 1);\n    renderer.render(scene, camera)\n\n    // Call tick again on the next frame\n    window.requestAnimationFrame(tick)\n}\n\ntick()"]},"metadata":{},"sourceType":"module"}