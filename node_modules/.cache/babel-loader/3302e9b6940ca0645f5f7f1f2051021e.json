{"ast":null,"code":"import _classCallCheck from\"/Users/jeeyoonhyun/immersive-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/jeeyoonhyun/immersive-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/jeeyoonhyun/immersive-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/jeeyoonhyun/immersive-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{Link}from'react-router';import'../day2/style.css';import{OrbitControls}from'three/examples/jsm/controls/OrbitControls.js';import{EffectComposer}from'three/examples/jsm/postprocessing/EffectComposer.js';import{RenderPass}from'three/examples/jsm/postprocessing/RenderPass.js';import{UnrealBloomPass}from'three/examples/jsm/postprocessing/UnrealBloomPass.js';import*as THREE from\"three\";// The number of columns change by resizing the window\nimport{jsx as _jsx}from\"react/jsx-runtime\";var Day2=/*#__PURE__*/function(_React$Component){_inherits(Day2,_React$Component);var _super=_createSuper(Day2);function Day2(){_classCallCheck(this,Day2);return _super.apply(this,arguments);}_createClass(Day2,[{key:\"componentDidMount\",value:function componentDidMount(){//    insert three.js code\n/**\n     * Base\n     */ // Canvas\nvar canvas=document.querySelector('canvas.webgl');// Scene\nvar scene=new THREE.Scene();/**\n         * Object\n         */var mesh;var geometry;var group=new THREE.Group();// const geometry = new THREE.TorusKnotGeometry( 1, 0.02, 8, 16 );\nvar material=new THREE.MeshBasicMaterial({color:0xffffff});mesh=new THREE.Mesh(geometry,material);scene.add(mesh);for(var i=0;i<10;i++){geometry=new THREE.TorusKnotGeometry(0.5,0.02,8,16,10+Math.floor(Math.random()*10),10+Math.floor(Math.random()*10));mesh=new THREE.Mesh(geometry,material);mesh.position.set(Math.floor(Math.random()*3),Math.floor(Math.random()*3),Math.floor(Math.random()*3));group.add(mesh);}scene.add(group);group.position.set(0,0,-1);var params={exposure:1,bloomStrength:1.5,bloomThreshold:0.1,bloomRadius:0};/**\n         * Sizes\n         */var sizes={width:window.innerWidth,height:window.innerHeight};/**\n         * Camera\n         */ // Base camera\nvar camera=new THREE.PerspectiveCamera(30,sizes.width/sizes.height,1,50);camera.position.set(1,-3,0);scene.add(camera);camera.lookAt(group);// Controls\nvar controls=new OrbitControls(camera,canvas);controls.enableDamping=true;// lights\nscene.add(new THREE.AmbientLight(0x404040));var pointLight=new THREE.PointLight(0xffffff,1);camera.add(pointLight);/**\n         * Renderer\n         */var renderer=new THREE.WebGLRenderer({canvas:canvas,antialias:true});renderer.toneMapping=THREE.ReinhardToneMapping;renderer.setSize(sizes.width,sizes.height);// RenderPass\nvar renderScene=new RenderPass(scene,camera);var bloomPass=new UnrealBloomPass(new THREE.Vector2(sizes.innerWidth,sizes.innerHeight),1.5,0.4,0.85);bloomPass.threshold=params.bloomThreshold;bloomPass.strength=params.bloomStrength;bloomPass.radius=params.bloomRadius;var composer=new EffectComposer(renderer);composer.addPass(renderScene);composer.addPass(bloomPass);/**\n         * Animate\n         */var clock=new THREE.Clock();var scaleKF=new THREE.VectorKeyframeTrack('.scale',[0,1,2],[1,1,1,2,2,2,1,1,1]);var clip=new THREE.AnimationClip('Action',3,[scaleKF]);// setup the THREE.AnimationMixer\nvar mixer=new THREE.AnimationMixer(mesh);// create a ClipAction and set it to play\nvar clipAction=mixer.clipAction(clip);//resize\n// Listen to the resize event\nwindow.addEventListener('resize',function(){//update size for resize\nsizes.width=window.innerWidth;sizes.height=window.innerHeight;//update camera\ncamera.aspect=sizes.width/sizes.height;camera.updateProjectionMatrix();//update renderer\nrenderer.setSize(sizes.width,sizes.height);// see https://threejs.org/docs/index.html?q=updat#manual/en/introduction/How-to-update-things\nrenderer.setPixelRatio(Math.min(window.devicePixelRatio,2));// change pixel ratio to reduce jaggies & limit it into 2(more than 2 becomes extremely slow)\n});window.addEventListener('dblclick',function(){var fullscreenElement=document.fullscreenElement||document.webkitFullscreenElement;//for safari\nif(!fullscreenElement){if(canvas.requestFullscreen){canvas.requestFullscreen();// doesn't work on Safari\n}else if(canvas.webkitRequestFullscreen){canvas.webkitRequestFullscreen();//for Safari\n}}else{if(document.exitFullscreen){document.exitFullscreen();//not the canvas, it is document    \n}else if(document.webkitExitFullscreen){document.webkitExitFullscreen();//for Safari\n}}});var tick=function tick(){var delta=clock.getDelta();var time=clock.getElapsedTime()*10;params.bloomStrength=5*Math.sin(time);params.needsUpdate=true;group.rotation.x+=0.01;group.rotation.y+=0.01;// Update controls\ncontrols.update();// Render\nrenderer.render(scene,camera);// Call tick again on the next frame\nwindow.requestAnimationFrame(tick);composer.render();clipAction.play();};tick();}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"canvas\",{class:\"webgl\"})});}}]);return Day2;}(React.Component);export default Day2;","map":{"version":3,"sources":["/Users/jeeyoonhyun/immersive-web/src/Pages/Day2.js"],"names":["React","Component","Link","OrbitControls","EffectComposer","RenderPass","UnrealBloomPass","THREE","Day2","canvas","document","querySelector","scene","Scene","mesh","geometry","group","Group","material","MeshBasicMaterial","color","Mesh","add","i","TorusKnotGeometry","Math","floor","random","position","set","params","exposure","bloomStrength","bloomThreshold","bloomRadius","sizes","width","window","innerWidth","height","innerHeight","camera","PerspectiveCamera","lookAt","controls","enableDamping","AmbientLight","pointLight","PointLight","renderer","WebGLRenderer","antialias","toneMapping","ReinhardToneMapping","setSize","renderScene","bloomPass","Vector2","threshold","strength","radius","composer","addPass","clock","Clock","scaleKF","VectorKeyframeTrack","clip","AnimationClip","mixer","AnimationMixer","clipAction","addEventListener","aspect","updateProjectionMatrix","setPixelRatio","min","devicePixelRatio","fullscreenElement","webkitFullscreenElement","requestFullscreen","webkitRequestFullscreen","exitFullscreen","webkitExitFullscreen","tick","delta","getDelta","time","getElapsedTime","sin","needsUpdate","rotation","x","y","update","render","requestAnimationFrame","play"],"mappings":"4kBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,IAAT,KAAqB,cAArB,CACA,MAAO,mBAAP,CACA,OAASC,aAAT,KAA8B,8CAA9B,CACA,OAASC,cAAT,KAA+B,qDAA/B,CACA,OAASC,UAAT,KAA2B,iDAA3B,CACA,OAASC,eAAT,KAAgC,sDAAhC,CACA,MAAO,GAAKC,CAAAA,KAAZ,KAAuB,OAAvB,CAEA;8CACMC,CAAAA,I,0OACF,4BAAoB,CAChB;AACA;AACR;AACA,OAJwB,CAKhB;AACA,GAAMC,CAAAA,MAAM,CAAGC,QAAQ,CAACC,aAAT,CAAuB,cAAvB,CAAf,CAEA;AACA,GAAMC,CAAAA,KAAK,CAAG,GAAIL,CAAAA,KAAK,CAACM,KAAV,EAAd,CAEA;AACR;AACA,WAEQ,GAAIC,CAAAA,IAAJ,CACA,GAAIC,CAAAA,QAAJ,CACA,GAAMC,CAAAA,KAAK,CAAG,GAAIT,CAAAA,KAAK,CAACU,KAAV,EAAd,CACA;AACA,GAAMC,CAAAA,QAAQ,CAAG,GAAIX,CAAAA,KAAK,CAACY,iBAAV,CAA4B,CAAEC,KAAK,CAAE,QAAT,CAA5B,CAAjB,CACAN,IAAI,CAAG,GAAIP,CAAAA,KAAK,CAACc,IAAV,CAAeN,QAAf,CAAyBG,QAAzB,CAAP,CACAN,KAAK,CAACU,GAAN,CAAUR,IAAV,EAEA,IAAK,GAAIS,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG,EAApB,CAAwBA,CAAC,EAAzB,CAA6B,CACzBR,QAAQ,CAAG,GAAIR,CAAAA,KAAK,CAACiB,iBAAV,CAA4B,GAA5B,CAAiC,IAAjC,CAAuC,CAAvC,CAA0C,EAA1C,CAA8C,GAAKC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgB,EAA3B,CAAnD,CAAmF,GAAKF,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgB,EAA3B,CAAxF,CAAX,CACAb,IAAI,CAAG,GAAIP,CAAAA,KAAK,CAACc,IAAV,CAAeN,QAAf,CAAyBG,QAAzB,CAAP,CACAJ,IAAI,CAACc,QAAL,CAAcC,GAAd,CAAkBJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgB,CAA3B,CAAlB,CAAiDF,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgB,CAA3B,CAAjD,CAAgFF,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgB,CAA3B,CAAhF,EACAX,KAAK,CAACM,GAAN,CAAUR,IAAV,EACH,CAEDF,KAAK,CAACU,GAAN,CAAUN,KAAV,EACAA,KAAK,CAACY,QAAN,CAAeC,GAAf,CAAmB,CAAnB,CAAsB,CAAtB,CAAyB,CAAC,CAA1B,EACA,GAAIC,CAAAA,MAAM,CAAG,CACTC,QAAQ,CAAE,CADD,CAETC,aAAa,CAAE,GAFN,CAGTC,cAAc,CAAE,GAHP,CAITC,WAAW,CAAE,CAJJ,CAAb,CAOA;AACR;AACA,WACQ,GAAMC,CAAAA,KAAK,CAAG,CACVC,KAAK,CAAEC,MAAM,CAACC,UADJ,CAEVC,MAAM,CAAEF,MAAM,CAACG,WAFL,CAAd,CAKA;AACR;AACA,WAjDwB,CAkDhB;AACA,GAAMC,CAAAA,MAAM,CAAG,GAAIlC,CAAAA,KAAK,CAACmC,iBAAV,CAA4B,EAA5B,CAAgCP,KAAK,CAACC,KAAN,CAAcD,KAAK,CAACI,MAApD,CAA4D,CAA5D,CAA+D,EAA/D,CAAf,CACAE,MAAM,CAACb,QAAP,CAAgBC,GAAhB,CAAoB,CAApB,CAAuB,CAAC,CAAxB,CAA2B,CAA3B,EACAjB,KAAK,CAACU,GAAN,CAAUmB,MAAV,EACAA,MAAM,CAACE,MAAP,CAAc3B,KAAd,EAEA;AACA,GAAM4B,CAAAA,QAAQ,CAAG,GAAIzC,CAAAA,aAAJ,CAAkBsC,MAAlB,CAA0BhC,MAA1B,CAAjB,CACAmC,QAAQ,CAACC,aAAT,CAAyB,IAAzB,CAEA;AACAjC,KAAK,CAACU,GAAN,CAAU,GAAIf,CAAAA,KAAK,CAACuC,YAAV,CAAuB,QAAvB,CAAV,EACA,GAAMC,CAAAA,UAAU,CAAG,GAAIxC,CAAAA,KAAK,CAACyC,UAAV,CAAqB,QAArB,CAA+B,CAA/B,CAAnB,CACAP,MAAM,CAACnB,GAAP,CAAWyB,UAAX,EAEA;AACR;AACA,WACQ,GAAME,CAAAA,QAAQ,CAAG,GAAI1C,CAAAA,KAAK,CAAC2C,aAAV,CAAwB,CACrCzC,MAAM,CAAEA,MAD6B,CAErC0C,SAAS,CAAE,IAF0B,CAAxB,CAAjB,CAIAF,QAAQ,CAACG,WAAT,CAAuB7C,KAAK,CAAC8C,mBAA7B,CACAJ,QAAQ,CAACK,OAAT,CAAiBnB,KAAK,CAACC,KAAvB,CAA8BD,KAAK,CAACI,MAApC,EAEA;AAEA,GAAMgB,CAAAA,WAAW,CAAG,GAAIlD,CAAAA,UAAJ,CAAeO,KAAf,CAAsB6B,MAAtB,CAApB,CAEA,GAAMe,CAAAA,SAAS,CAAG,GAAIlD,CAAAA,eAAJ,CAAoB,GAAIC,CAAAA,KAAK,CAACkD,OAAV,CAAkBtB,KAAK,CAACG,UAAxB,CAAoCH,KAAK,CAACK,WAA1C,CAApB,CAA4E,GAA5E,CAAiF,GAAjF,CAAsF,IAAtF,CAAlB,CACAgB,SAAS,CAACE,SAAV,CAAsB5B,MAAM,CAACG,cAA7B,CACAuB,SAAS,CAACG,QAAV,CAAqB7B,MAAM,CAACE,aAA5B,CACAwB,SAAS,CAACI,MAAV,CAAmB9B,MAAM,CAACI,WAA1B,CAEA,GAAI2B,CAAAA,QAAQ,CAAG,GAAIzD,CAAAA,cAAJ,CAAmB6C,QAAnB,CAAf,CACAY,QAAQ,CAACC,OAAT,CAAiBP,WAAjB,EACAM,QAAQ,CAACC,OAAT,CAAiBN,SAAjB,EAEA;AACR;AACA,WACQ,GAAMO,CAAAA,KAAK,CAAG,GAAIxD,CAAAA,KAAK,CAACyD,KAAV,EAAd,CACA,GAAMC,CAAAA,OAAO,CAAG,GAAI1D,CAAAA,KAAK,CAAC2D,mBAAV,CAA8B,QAA9B,CAAwC,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAAxC,CAAmD,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAAU,CAAV,CAAa,CAAb,CAAgB,CAAhB,CAAmB,CAAnB,CAAsB,CAAtB,CAAyB,CAAzB,CAAnD,CAAhB,CACA,GAAMC,CAAAA,IAAI,CAAG,GAAI5D,CAAAA,KAAK,CAAC6D,aAAV,CAAwB,QAAxB,CAAkC,CAAlC,CAAqC,CAACH,OAAD,CAArC,CAAb,CAEA;AACA,GAAII,CAAAA,KAAK,CAAG,GAAI9D,CAAAA,KAAK,CAAC+D,cAAV,CAAyBxD,IAAzB,CAAZ,CAEA;AACA,GAAMyD,CAAAA,UAAU,CAAGF,KAAK,CAACE,UAAN,CAAiBJ,IAAjB,CAAnB,CAEA;AACA;AACA9B,MAAM,CAACmC,gBAAP,CAAwB,QAAxB,CAAkC,UAAM,CACpC;AACArC,KAAK,CAACC,KAAN,CAAcC,MAAM,CAACC,UAArB,CACAH,KAAK,CAACI,MAAN,CAAeF,MAAM,CAACG,WAAtB,CAEA;AACAC,MAAM,CAACgC,MAAP,CAAgBtC,KAAK,CAACC,KAAN,CAAcD,KAAK,CAACI,MAApC,CACAE,MAAM,CAACiC,sBAAP,GAEA;AACAzB,QAAQ,CAACK,OAAT,CAAiBnB,KAAK,CAACC,KAAvB,CAA8BD,KAAK,CAACI,MAApC,EAA4C;AAC5CU,QAAQ,CAAC0B,aAAT,CAAuBlD,IAAI,CAACmD,GAAL,CAASvC,MAAM,CAACwC,gBAAhB,CAAkC,CAAlC,CAAvB,EAA8D;AACjE,CAZD,EAcAxC,MAAM,CAACmC,gBAAP,CAAwB,UAAxB,CAAoC,UAAM,CAEtC,GAAMM,CAAAA,iBAAiB,CAAGpE,QAAQ,CAACoE,iBAAT,EAA8BpE,QAAQ,CAACqE,uBAAjE,CAAyF;AAEzF,GAAI,CAACD,iBAAL,CAAwB,CACpB,GAAIrE,MAAM,CAACuE,iBAAX,CAA8B,CAC1BvE,MAAM,CAACuE,iBAAP,GAA4B;AAC/B,CAFD,IAEO,IAAIvE,MAAM,CAACwE,uBAAX,CAAoC,CACvCxE,MAAM,CAACwE,uBAAP,GAAkC;AACrC,CAEJ,CAPD,IAOO,CACH,GAAIvE,QAAQ,CAACwE,cAAb,CAA6B,CACzBxE,QAAQ,CAACwE,cAAT,GAA2B;AAC9B,CAFD,IAEO,IAAIxE,QAAQ,CAACyE,oBAAb,CAAmC,CACtCzE,QAAQ,CAACyE,oBAAT,GAAiC;AACpC,CAEJ,CACJ,CAnBD,EAqBA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAM,CACf,GAAMC,CAAAA,KAAK,CAAGtB,KAAK,CAACuB,QAAN,EAAd,CACA,GAAMC,CAAAA,IAAI,CAAGxB,KAAK,CAACyB,cAAN,GAAyB,EAAtC,CAEA1D,MAAM,CAACE,aAAP,CAAuB,EAAIP,IAAI,CAACgE,GAAL,CAASF,IAAT,CAA3B,CACAzD,MAAM,CAAC4D,WAAP,CAAqB,IAArB,CAEA1E,KAAK,CAAC2E,QAAN,CAAeC,CAAf,EAAoB,IAApB,CACA5E,KAAK,CAAC2E,QAAN,CAAeE,CAAf,EAAoB,IAApB,CAEA;AACAjD,QAAQ,CAACkD,MAAT,GAEA;AACA7C,QAAQ,CAAC8C,MAAT,CAAgBnF,KAAhB,CAAuB6B,MAAvB,EAEA;AACAJ,MAAM,CAAC2D,qBAAP,CAA6BZ,IAA7B,EAEAvB,QAAQ,CAACkC,MAAT,GACAxB,UAAU,CAAC0B,IAAX,GACH,CArBD,CAuBAb,IAAI,GACP,C,sBACD,iBAAS,CACL,mBACI,kCACI,eAAQ,KAAK,CAAC,OAAd,EADJ,EADJ,CAKH,C,kBA1KcpF,KAAK,CAACC,S,EA6KzB,cAAeO,CAAAA,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router';\nimport '../day2/style.css'\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js'\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer.js';\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass.js';\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass.js';\nimport * as THREE from \"three\";\n\n// The number of columns change by resizing the window\nclass Day2 extends React.Component {\n    componentDidMount() {\n        //    insert three.js code\n        /**\n     * Base\n     */\n        // Canvas\n        const canvas = document.querySelector('canvas.webgl')\n\n        // Scene\n        const scene = new THREE.Scene()\n\n        /**\n         * Object\n         */\n\n        let mesh;\n        let geometry;\n        const group = new THREE.Group();\n        // const geometry = new THREE.TorusKnotGeometry( 1, 0.02, 8, 16 );\n        const material = new THREE.MeshBasicMaterial({ color: 0xffffff });\n        mesh = new THREE.Mesh(geometry, material);\n        scene.add(mesh);\n\n        for (let i = 0; i < 10; i++) {\n            geometry = new THREE.TorusKnotGeometry(0.5, 0.02, 8, 16, 10 + Math.floor(Math.random() * 10), 10 + Math.floor(Math.random() * 10));\n            mesh = new THREE.Mesh(geometry, material);\n            mesh.position.set(Math.floor(Math.random() * 3), Math.floor(Math.random() * 3), Math.floor(Math.random() * 3));\n            group.add(mesh);\n        }\n\n        scene.add(group);\n        group.position.set(0, 0, -1);\n        let params = {\n            exposure: 1,\n            bloomStrength: 1.5,\n            bloomThreshold: 0.1,\n            bloomRadius: 0\n        };\n\n        /**\n         * Sizes\n         */\n        const sizes = {\n            width: window.innerWidth,\n            height: window.innerHeight\n        }\n\n        /**\n         * Camera\n         */\n        // Base camera\n        const camera = new THREE.PerspectiveCamera(30, sizes.width / sizes.height, 1, 50)\n        camera.position.set(1, -3, 0);\n        scene.add(camera);\n        camera.lookAt(group);\n\n        // Controls\n        const controls = new OrbitControls(camera, canvas)\n        controls.enableDamping = true\n\n        // lights\n        scene.add(new THREE.AmbientLight(0x404040));\n        const pointLight = new THREE.PointLight(0xffffff, 1);\n        camera.add(pointLight);\n\n        /**\n         * Renderer\n         */\n        const renderer = new THREE.WebGLRenderer({\n            canvas: canvas,\n            antialias: true\n        })\n        renderer.toneMapping = THREE.ReinhardToneMapping;\n        renderer.setSize(sizes.width, sizes.height)\n\n        // RenderPass\n\n        const renderScene = new RenderPass(scene, camera);\n\n        const bloomPass = new UnrealBloomPass(new THREE.Vector2(sizes.innerWidth, sizes.innerHeight), 1.5, 0.4, 0.85);\n        bloomPass.threshold = params.bloomThreshold;\n        bloomPass.strength = params.bloomStrength;\n        bloomPass.radius = params.bloomRadius;\n\n        let composer = new EffectComposer(renderer);\n        composer.addPass(renderScene);\n        composer.addPass(bloomPass);\n\n        /**\n         * Animate\n         */\n        const clock = new THREE.Clock()\n        const scaleKF = new THREE.VectorKeyframeTrack('.scale', [0, 1, 2], [1, 1, 1, 2, 2, 2, 1, 1, 1]);\n        const clip = new THREE.AnimationClip('Action', 3, [scaleKF]);\n\n        // setup the THREE.AnimationMixer\n        let mixer = new THREE.AnimationMixer(mesh);\n\n        // create a ClipAction and set it to play\n        const clipAction = mixer.clipAction(clip);\n\n        //resize\n        // Listen to the resize event\n        window.addEventListener('resize', () => {\n            //update size for resize\n            sizes.width = window.innerWidth\n            sizes.height = window.innerHeight\n\n            //update camera\n            camera.aspect = sizes.width / sizes.height\n            camera.updateProjectionMatrix();\n\n            //update renderer\n            renderer.setSize(sizes.width, sizes.height) // see https://threejs.org/docs/index.html?q=updat#manual/en/introduction/How-to-update-things\n            renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2)); // change pixel ratio to reduce jaggies & limit it into 2(more than 2 becomes extremely slow)\n        })\n\n        window.addEventListener('dblclick', () => {\n\n            const fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement //for safari\n\n            if (!fullscreenElement) {\n                if (canvas.requestFullscreen) {\n                    canvas.requestFullscreen(); // doesn't work on Safari\n                } else if (canvas.webkitRequestFullscreen) {\n                    canvas.webkitRequestFullscreen(); //for Safari\n                }\n\n            } else {\n                if (document.exitFullscreen) {\n                    document.exitFullscreen(); //not the canvas, it is document    \n                } else if (document.webkitExitFullscreen) {\n                    document.webkitExitFullscreen(); //for Safari\n                }\n\n            }\n        });\n\n        const tick = () => {\n            const delta = clock.getDelta();\n            const time = clock.getElapsedTime() * 10;\n\n            params.bloomStrength = 5 * Math.sin(time);\n            params.needsUpdate = true;\n\n            group.rotation.x += 0.01;\n            group.rotation.y += 0.01;\n\n            // Update controls\n            controls.update()\n\n            // Render\n            renderer.render(scene, camera)\n\n            // Call tick again on the next frame\n            window.requestAnimationFrame(tick)\n\n            composer.render();\n            clipAction.play();\n        }\n\n        tick()\n    }\n    render() {\n        return (\n            <div>\n                <canvas class=\"webgl\"></canvas>\n            </div>\n        )\n    }\n}\n\nexport default Day2;"]},"metadata":{},"sourceType":"module"}