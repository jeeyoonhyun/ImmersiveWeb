{"ast":null,"code":"import _classCallCheck from\"/Users/jeeyoonhyun/immersive-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/jeeyoonhyun/immersive-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/jeeyoonhyun/immersive-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/jeeyoonhyun/immersive-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{Link}from'react-router';import{OrbitControls}from'three/examples/jsm/controls/OrbitControls.js';import{DirectionalLight}from'three';import*as THREE from\"three\";import'../day3/style.css';// The number of columns change by resizing the window\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Day3=/*#__PURE__*/function(_React$Component){_inherits(Day3,_React$Component);var _super=_createSuper(Day3);function Day3(){_classCallCheck(this,Day3);return _super.apply(this,arguments);}_createClass(Day3,[{key:\"componentDidMount\",value:function componentDidMount(){//    insert three.js code\n// Params\nvar parameters={meshColor:0x97cdae,lightColor:0xffffff,planeColor:0x313866,deviceAlpha:0,deviceBeta:0,deviceGamma:0};/**\n * Base\n */ // Canvas\nvar canvas=document.querySelector('canvas.webgl');// Scene\nvar scene=new THREE.Scene();scene.background=new THREE.Color(0xf1d3d3);/**\n * Object\n */ // const geometry = new THREE.BoxGeometry(10, 10, 10)\nvar geometry=new THREE.TorusKnotGeometry(5,1.2,64,16,1,2);var material=new THREE.MeshToonMaterial({color:parameters.meshColor});var mesh=new THREE.Mesh(geometry,material);mesh.castShadow=true;mesh.receiveShadow=true;scene.add(mesh);mesh.position.set(0,5,3);// Light\n// const dirLight = new THREE.DirectionalLight( parameters.lightColor, 0.7 );\nvar dirLight=new THREE.DirectionalLight(0xffffff,0.7);dirLight.castShadow=true;// default false\ndirLight.position.set(0,60,5);// adjust dirLight size\ndirLight.shadowCameraLeft=-10;dirLight.shadowCameraRight=10;dirLight.shadowCameraTop=10;dirLight.shadowCameraBottom=-10;scene.add(dirLight);// const helper = new THREE.CameraHelper( dirLight.shadow.camera );\n// scene.add( helper );\nvar ambLight=new THREE.AmbientLight(0xffffff);scene.add(ambLight);/**\n * Sizes\n */var sizes={width:window.innerWidth,height:window.innerHeight};window.addEventListener('resize',function(){// Update sizes\nsizes.width=window.innerWidth;sizes.height=window.innerHeight;// Update camera\ncamera.aspect=sizes.width/sizes.height;camera.updateProjectionMatrix();// Update renderer\nrenderer.setSize(sizes.width,sizes.height);renderer.setPixelRatio(Math.min(window.devicePixelRatio,2));});/**\n * Fullscreen\n */window.addEventListener('dblclick',function(){var fullscreenElement=document.fullscreenElement||document.webkitFullscreenElement;if(!fullscreenElement){if(canvas.requestFullscreen){canvas.requestFullscreen();}else if(canvas.webkitRequestFullscreen){canvas.webkitRequestFullscreen();}}else{if(document.exitFullscreen){document.exitFullscreen();}else if(document.webkitExitFullscreen){document.webkitExitFullscreen();}}});// Plane for receiving shadows\nvar planeGeometry=new THREE.PlaneBufferGeometry(100,100);var planeMaterial=new THREE.MeshToonMaterial({color:parameters.planeColor});// weird box appears in the shadows?? don't know why\n// const planeMaterial = new THREE.MeshToonMaterial({ color: 0x313866, side: THREE.DoubleSide}); \nvar plane=new THREE.Mesh(planeGeometry,planeMaterial);scene.add(plane);plane.rotateX(-2);plane.position.set(0,-20,0);// Shadow on plane\nplane.castShadow=true;plane.receiveShadow=true;/**\n * Camera\n */ // Base camera\nvar camera=new THREE.PerspectiveCamera(75,sizes.width/sizes.height,0.1,100);camera.position.set(0,20,30);camera.lookAt(plane.position);scene.add(camera);// Controls\nvar controls=new OrbitControls(camera,canvas);controls.enableDamping=true;/**\n * Renderer\n */var renderer=new THREE.WebGLRenderer({canvas:canvas});renderer.setSize(sizes.width,sizes.height);renderer.setPixelRatio(Math.min(window.devicePixelRatio,2));// Shadows\nrenderer.shadowMap.enabled=true;renderer.shadowMap.type=THREE.PCFSoftShadowMap;// default THREE.PCFShadowMap\n// axisHelper\n// const axesHelper = new THREE.AxesHelper( 20 );\n// scene.add( axesHelper );\n// dat.gui\n// const gui = new dat.GUI({autoPlace: true});\n// gui.domElement.id = 'gui';\n// let folder = gui.addFolder(`Colors`)\n// gui\n//     .addColor(parameters, 'meshColor')\n//     .onChange(() =>\n//     {\n//         material.color.set(parameters.meshColor)\n//     })\n// gui\n//     .addColor(parameters, 'lightColor')\n//     .onChange(() =>\n//     {\n//         material.color.set(parameters.lightColor)\n//     })\n/**\n * Animate\n */var clock=new THREE.Clock();var getPermisson=function getPermisson(e){e.preventDefault();// Request permission for iOS 13+ devices\nif(DeviceOrientationEvent&&typeof DeviceOrientationEvent.requestPermission===\"function\"){console.log(\"click event received!!\");DeviceOrientationEvent.requestPermission();}};var rotate=function rotate(e){console.log(\"orientation event received!\");var x=e.beta;var y=e.alpha;var z=e.gamma;// Because we don't want to have the device upside down\n// We constrain the x value to the range [-90,90]\nif(y>90){y=90;}if(y<-90){y=-90;}if(z>90){z=90;}if(z<-90){z=-90;}parameters.deviceBeta=x;parameters.deviceAlpha=y;parameters.deviceGamma=z;};// get device orientation when button is clicked\nvar is_running=false;var button=document.getElementById(\"start\");button.onclick=function(e){e.preventDefault();if(is_running){scene.background=new THREE.Color(0xf1d3d3);button.innerText='start detection';// iOS permission\nwindow.removeEventListener(\"click\",getPermisson);window.removeEventListener(\"touchstart\",getPermisson);// device orientation\nwindow.removeEventListener(\"deviceorientation\",rotate,true);is_running=false;}else{scene.background=new THREE.Color(0xF2E7B3);button.innerText='stop detection';// iOS permission\nwindow.addEventListener(\"click\",getPermisson);window.addEventListener(\"touchstart\",getPermisson);// device orientation\nwindow.addEventListener(\"deviceorientation\",rotate,true);is_running=true;}};var tick=function tick(){// window.addEventListener(\"deviceorientation\", rotate, true);\nvar elapsedTime=clock.getElapsedTime();// Update controls\ncontrols.update();// Render\nrenderer.render(scene,camera);// Rotation\nmesh.rotation.x=parameters.deviceBeta*Math.PI/180;mesh.rotation.y=parameters.deviceAlpha*Math.PI/180;mesh.rotation.z=-parameters.deviceGamma*Math.PI/180;// Call tick again on the next frame\nwindow.requestAnimationFrame(tick);};tick();}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"div\",{id:\"container\",children:[/*#__PURE__*/_jsx(\"p\",{id:\"description\",children:\"press button and turn your phone around\"}),/*#__PURE__*/_jsx(\"button\",{id:\"start\",className:\"btn\",href:\"#\",role:\"button\",children:\"start detection\"}),/*#__PURE__*/_jsx(\"canvas\",{className:\"webgl\"})]})});}}]);return Day3;}(React.Component);export default Day3;","map":{"version":3,"sources":["/Users/jeeyoonhyun/immersive-web/src/Pages/Day3.js"],"names":["React","Component","Link","OrbitControls","DirectionalLight","THREE","Day3","parameters","meshColor","lightColor","planeColor","deviceAlpha","deviceBeta","deviceGamma","canvas","document","querySelector","scene","Scene","background","Color","geometry","TorusKnotGeometry","material","MeshToonMaterial","color","mesh","Mesh","castShadow","receiveShadow","add","position","set","dirLight","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","ambLight","AmbientLight","sizes","width","window","innerWidth","height","innerHeight","addEventListener","camera","aspect","updateProjectionMatrix","renderer","setSize","setPixelRatio","Math","min","devicePixelRatio","fullscreenElement","webkitFullscreenElement","requestFullscreen","webkitRequestFullscreen","exitFullscreen","webkitExitFullscreen","planeGeometry","PlaneBufferGeometry","planeMaterial","plane","rotateX","PerspectiveCamera","lookAt","controls","enableDamping","WebGLRenderer","shadowMap","enabled","type","PCFSoftShadowMap","clock","Clock","getPermisson","e","preventDefault","DeviceOrientationEvent","requestPermission","console","log","rotate","x","beta","y","alpha","z","gamma","is_running","button","getElementById","onclick","innerText","removeEventListener","tick","elapsedTime","getElapsedTime","update","render","rotation","PI","requestAnimationFrame"],"mappings":"4kBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,IAAT,KAAqB,cAArB,CACA,OAASC,aAAT,KAA8B,8CAA9B,CACA,OAASC,gBAAT,KAAiC,OAAjC,CACA,MAAO,GAAKC,CAAAA,KAAZ,KAAuB,OAAvB,CACA,MAAO,mBAAP,CAEA;2FACMC,CAAAA,I,0OACF,4BAAoB,CACpB;AACA;AACJ,GAAMC,CAAAA,UAAU,CAAG,CACfC,SAAS,CAAE,QADI,CAEfC,UAAU,CAAE,QAFG,CAGfC,UAAU,CAAE,QAHG,CAIfC,WAAW,CAAC,CAJG,CAKfC,UAAU,CAAC,CALI,CAMfC,WAAW,CAAE,CANE,CAAnB,CASA;AACA;AACA,GAdwB,CAexB;AACA,GAAMC,CAAAA,MAAM,CAAGC,QAAQ,CAACC,aAAT,CAAuB,cAAvB,CAAf,CAEA;AACA,GAAMC,CAAAA,KAAK,CAAG,GAAIZ,CAAAA,KAAK,CAACa,KAAV,EAAd,CACAD,KAAK,CAACE,UAAN,CAAmB,GAAId,CAAAA,KAAK,CAACe,KAAV,CAAiB,QAAjB,CAAnB,CAEA;AACA;AACA,GAxBwB,CAyBxB;AACA,GAAMC,CAAAA,QAAQ,CAAG,GAAIhB,CAAAA,KAAK,CAACiB,iBAAV,CAA6B,CAA7B,CAAgC,GAAhC,CAAqC,EAArC,CAAyC,EAAzC,CAA6C,CAA7C,CAAgD,CAAhD,CAAjB,CACA,GAAMC,CAAAA,QAAQ,CAAG,GAAIlB,CAAAA,KAAK,CAACmB,gBAAV,CAA2B,CAAEC,KAAK,CAAElB,UAAU,CAACC,SAApB,CAA3B,CAAjB,CACA,GAAMkB,CAAAA,IAAI,CAAG,GAAIrB,CAAAA,KAAK,CAACsB,IAAV,CAAeN,QAAf,CAAyBE,QAAzB,CAAb,CACAG,IAAI,CAACE,UAAL,CAAkB,IAAlB,CACAF,IAAI,CAACG,aAAL,CAAqB,IAArB,CACAZ,KAAK,CAACa,GAAN,CAAUJ,IAAV,EACAA,IAAI,CAACK,QAAL,CAAcC,GAAd,CAAkB,CAAlB,CAAoB,CAApB,CAAsB,CAAtB,EAEA;AACA;AACA,GAAMC,CAAAA,QAAQ,CAAG,GAAI5B,CAAAA,KAAK,CAACD,gBAAV,CAA4B,QAA5B,CAAsC,GAAtC,CAAjB,CACA6B,QAAQ,CAACL,UAAT,CAAsB,IAAtB,CAA4B;AAC5BK,QAAQ,CAACF,QAAT,CAAkBC,GAAlB,CAAsB,CAAtB,CAAwB,EAAxB,CAA2B,CAA3B,EAEA;AACAC,QAAQ,CAACC,gBAAT,CAA4B,CAAC,EAA7B,CACAD,QAAQ,CAACE,iBAAT,CAA6B,EAA7B,CACAF,QAAQ,CAACG,eAAT,CAA2B,EAA3B,CACAH,QAAQ,CAACI,kBAAT,CAA8B,CAAC,EAA/B,CAEApB,KAAK,CAACa,GAAN,CAAWG,QAAX,EAEA;AACA;AAIA,GAAMK,CAAAA,QAAQ,CAAG,GAAIjC,CAAAA,KAAK,CAACkC,YAAV,CAAuB,QAAvB,CAAjB,CACAtB,KAAK,CAACa,GAAN,CAAWQ,QAAX,EAGA;AACA;AACA,GACA,GAAME,CAAAA,KAAK,CAAG,CACVC,KAAK,CAAEC,MAAM,CAACC,UADJ,CAEVC,MAAM,CAAEF,MAAM,CAACG,WAFL,CAAd,CAKAH,MAAM,CAACI,gBAAP,CAAwB,QAAxB,CAAkC,UAClC,CACI;AACAN,KAAK,CAACC,KAAN,CAAcC,MAAM,CAACC,UAArB,CACAH,KAAK,CAACI,MAAN,CAAeF,MAAM,CAACG,WAAtB,CAEA;AACAE,MAAM,CAACC,MAAP,CAAgBR,KAAK,CAACC,KAAN,CAAcD,KAAK,CAACI,MAApC,CACAG,MAAM,CAACE,sBAAP,GAEA;AACAC,QAAQ,CAACC,OAAT,CAAiBX,KAAK,CAACC,KAAvB,CAA8BD,KAAK,CAACI,MAApC,EACAM,QAAQ,CAACE,aAAT,CAAuBC,IAAI,CAACC,GAAL,CAASZ,MAAM,CAACa,gBAAhB,CAAkC,CAAlC,CAAvB,EACH,CAbD,EAeA;AACA;AACA,GACAb,MAAM,CAACI,gBAAP,CAAwB,UAAxB,CAAoC,UACpC,CACI,GAAMU,CAAAA,iBAAiB,CAAGzC,QAAQ,CAACyC,iBAAT,EAA8BzC,QAAQ,CAAC0C,uBAAjE,CAEA,GAAG,CAACD,iBAAJ,CACA,CACI,GAAG1C,MAAM,CAAC4C,iBAAV,CACA,CACI5C,MAAM,CAAC4C,iBAAP,GACH,CAHD,IAIK,IAAG5C,MAAM,CAAC6C,uBAAV,CACL,CACI7C,MAAM,CAAC6C,uBAAP,GACH,CACJ,CAVD,IAYA,CACI,GAAG5C,QAAQ,CAAC6C,cAAZ,CACA,CACI7C,QAAQ,CAAC6C,cAAT,GACH,CAHD,IAIK,IAAG7C,QAAQ,CAAC8C,oBAAZ,CACL,CACI9C,QAAQ,CAAC8C,oBAAT,GACH,CACJ,CACJ,CA1BD,EA4BA;AACA,GAAMC,CAAAA,aAAa,CAAG,GAAIzD,CAAAA,KAAK,CAAC0D,mBAAV,CAA8B,GAA9B,CAAmC,GAAnC,CAAtB,CACA,GAAMC,CAAAA,aAAa,CAAG,GAAI3D,CAAAA,KAAK,CAACmB,gBAAV,CAA2B,CAAEC,KAAK,CAAElB,UAAU,CAACG,UAApB,CAA3B,CAAtB,CACA;AACA;AACA,GAAMuD,CAAAA,KAAK,CAAG,GAAI5D,CAAAA,KAAK,CAACsB,IAAV,CAAemC,aAAf,CAA8BE,aAA9B,CAAd,CACA/C,KAAK,CAACa,GAAN,CAAUmC,KAAV,EACAA,KAAK,CAACC,OAAN,CAAc,CAAC,CAAf,EACAD,KAAK,CAAClC,QAAN,CAAeC,GAAf,CAAmB,CAAnB,CAAqB,CAAC,EAAtB,CAAyB,CAAzB,EAEA;AACAiC,KAAK,CAACrC,UAAN,CAAmB,IAAnB,CACAqC,KAAK,CAACpC,aAAN,CAAsB,IAAtB,CAEA;AACA;AACA,GA/HwB,CAgIxB;AACA,GAAMkB,CAAAA,MAAM,CAAG,GAAI1C,CAAAA,KAAK,CAAC8D,iBAAV,CAA4B,EAA5B,CAAgC3B,KAAK,CAACC,KAAN,CAAcD,KAAK,CAACI,MAApD,CAA4D,GAA5D,CAAiE,GAAjE,CAAf,CACAG,MAAM,CAAChB,QAAP,CAAgBC,GAAhB,CAAoB,CAApB,CAAsB,EAAtB,CAAyB,EAAzB,EACAe,MAAM,CAACqB,MAAP,CAAcH,KAAK,CAAClC,QAApB,EACAd,KAAK,CAACa,GAAN,CAAUiB,MAAV,EAEA;AACA,GAAMsB,CAAAA,QAAQ,CAAG,GAAIlE,CAAAA,aAAJ,CAAkB4C,MAAlB,CAA0BjC,MAA1B,CAAjB,CACAuD,QAAQ,CAACC,aAAT,CAAyB,IAAzB,CAEA;AACA;AACA,GACA,GAAMpB,CAAAA,QAAQ,CAAG,GAAI7C,CAAAA,KAAK,CAACkE,aAAV,CAAwB,CACrCzD,MAAM,CAAEA,MAD6B,CAAxB,CAAjB,CAGAoC,QAAQ,CAACC,OAAT,CAAiBX,KAAK,CAACC,KAAvB,CAA8BD,KAAK,CAACI,MAApC,EACAM,QAAQ,CAACE,aAAT,CAAuBC,IAAI,CAACC,GAAL,CAASZ,MAAM,CAACa,gBAAhB,CAAkC,CAAlC,CAAvB,EAEA;AACAL,QAAQ,CAACsB,SAAT,CAAmBC,OAAnB,CAA6B,IAA7B,CACAvB,QAAQ,CAACsB,SAAT,CAAmBE,IAAnB,CAA0BrE,KAAK,CAACsE,gBAAhC,CAAkD;AAElD;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA,GACA,GAAMC,CAAAA,KAAK,CAAG,GAAIvE,CAAAA,KAAK,CAACwE,KAAV,EAAd,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAC,CAAC,CAAI,CACtBA,CAAC,CAACC,cAAF,GACA;AACA,GACIC,sBAAsB,EACtB,MAAOA,CAAAA,sBAAsB,CAACC,iBAA9B,GAAoD,UAFxD,CAGI,CACAC,OAAO,CAACC,GAAR,CAAY,wBAAZ,EACAH,sBAAsB,CAACC,iBAAvB,GACH,CACJ,CAVD,CAYA,GAAMG,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAAN,CAAC,CAAI,CAChBI,OAAO,CAACC,GAAR,CAAY,6BAAZ,EACA,GAAIE,CAAAA,CAAC,CAAGP,CAAC,CAACQ,IAAV,CACA,GAAIC,CAAAA,CAAC,CAAGT,CAAC,CAACU,KAAV,CACA,GAAIC,CAAAA,CAAC,CAAGX,CAAC,CAACY,KAAV,CAEA;AACA;AACA,GAAIH,CAAC,CAAG,EAAR,CAAY,CACRA,CAAC,CAAG,EAAJ,CACH,CACD,GAAIA,CAAC,CAAG,CAAC,EAAT,CAAa,CACTA,CAAC,CAAG,CAAC,EAAL,CACH,CAED,GAAIE,CAAC,CAAG,EAAR,CAAY,CACRA,CAAC,CAAG,EAAJ,CACH,CACD,GAAIA,CAAC,CAAG,CAAC,EAAT,CAAa,CACTA,CAAC,CAAG,CAAC,EAAL,CACH,CAEDnF,UAAU,CAACK,UAAX,CAAwB0E,CAAxB,CACA/E,UAAU,CAACI,WAAX,CAAyB6E,CAAzB,CACAjF,UAAU,CAACM,WAAX,CAAyB6E,CAAzB,CACH,CAzBD,CA2BA;AACA,GAAIE,CAAAA,UAAU,CAAG,KAAjB,CACA,GAAIC,CAAAA,MAAM,CAAG9E,QAAQ,CAAC+E,cAAT,CAAwB,OAAxB,CAAb,CAEAD,MAAM,CAACE,OAAP,CAAiB,SAAShB,CAAT,CAAY,CACzBA,CAAC,CAACC,cAAF,GAEA,GAAIY,UAAJ,CAAe,CACX3E,KAAK,CAACE,UAAN,CAAmB,GAAId,CAAAA,KAAK,CAACe,KAAV,CAAiB,QAAjB,CAAnB,CACAyE,MAAM,CAACG,SAAP,CAAmB,iBAAnB,CACA;AACAtD,MAAM,CAACuD,mBAAP,CAA2B,OAA3B,CAAoCnB,YAApC,EACApC,MAAM,CAACuD,mBAAP,CAA2B,YAA3B,CAAyCnB,YAAzC,EACA;AACApC,MAAM,CAACuD,mBAAP,CAA2B,mBAA3B,CAAgDZ,MAAhD,CAAwD,IAAxD,EACAO,UAAU,CAAG,KAAb,CACD,CATH,IASO,CACH3E,KAAK,CAACE,UAAN,CAAmB,GAAId,CAAAA,KAAK,CAACe,KAAV,CAAiB,QAAjB,CAAnB,CACAyE,MAAM,CAACG,SAAP,CAAmB,gBAAnB,CACA;AACAtD,MAAM,CAACI,gBAAP,CAAwB,OAAxB,CAAiCgC,YAAjC,EACApC,MAAM,CAACI,gBAAP,CAAwB,YAAxB,CAAsCgC,YAAtC,EACA;AACApC,MAAM,CAACI,gBAAP,CAAwB,mBAAxB,CAA6CuC,MAA7C,CAAqD,IAArD,EACAO,UAAU,CAAG,IAAb,CACD,CAEN,CAvBD,CAwBA,GAAMM,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EACb,CACI;AACA,GAAMC,CAAAA,WAAW,CAAGvB,KAAK,CAACwB,cAAN,EAApB,CAEA;AACA/B,QAAQ,CAACgC,MAAT,GAEA;AACAnD,QAAQ,CAACoD,MAAT,CAAgBrF,KAAhB,CAAuB8B,MAAvB,EAEA;AACArB,IAAI,CAAC6E,QAAL,CAAcjB,CAAd,CAAkB/E,UAAU,CAACK,UAAX,CAAwByC,IAAI,CAACmD,EAA7B,CAAkC,GAApD,CACA9E,IAAI,CAAC6E,QAAL,CAAcf,CAAd,CAAkBjF,UAAU,CAACI,WAAX,CAAyB0C,IAAI,CAACmD,EAA9B,CAAmC,GAArD,CACA9E,IAAI,CAAC6E,QAAL,CAAcb,CAAd,CAAkB,CAAEnF,UAAU,CAACM,WAAb,CAA2BwC,IAAI,CAACmD,EAAhC,CAAqC,GAAvD,CAGA;AACA9D,MAAM,CAAC+D,qBAAP,CAA6BP,IAA7B,EACH,CAnBD,CAqBAA,IAAI,GAEC,C,sBACD,iBAAS,CACL,mBACI,kCACI,aAAK,EAAE,CAAG,WAAV,wBACI,UAAG,EAAE,CAAE,aAAP,qDADJ,cAEI,eAAQ,EAAE,CAAC,OAAX,CAAmB,SAAS,CAAC,KAA7B,CAAmC,IAAI,CAAC,GAAxC,CAA4C,IAAI,CAAC,QAAjD,6BAFJ,cAGI,eAAQ,SAAS,CAAC,OAAlB,EAHJ,GADJ,EADJ,CASH,C,kBAxRclG,KAAK,CAACC,S,EA2RzB,cAAeK,CAAAA,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js'\nimport { DirectionalLight } from 'three'\nimport * as THREE from \"three\";\nimport '../day3/style.css'\n\n// The number of columns change by resizing the window\nclass Day3 extends React.Component {\n    componentDidMount() {\n    //    insert three.js code\n    // Params\nconst parameters = {\n    meshColor: 0x97cdae,\n    lightColor: 0xffffff,\n    planeColor: 0x313866,\n    deviceAlpha:0,\n    deviceBeta:0,\n    deviceGamma: 0,\n}\n\n/**\n * Base\n */\n// Canvas\nconst canvas = document.querySelector('canvas.webgl')\n\n// Scene\nconst scene = new THREE.Scene()\nscene.background = new THREE.Color( 0xf1d3d3 );\n\n/**\n * Object\n */\n// const geometry = new THREE.BoxGeometry(10, 10, 10)\nconst geometry = new THREE.TorusKnotGeometry( 5, 1.2, 64, 16, 1, 2 );\nconst material = new THREE.MeshToonMaterial({ color: parameters.meshColor })\nconst mesh = new THREE.Mesh(geometry, material)\nmesh.castShadow = true;\nmesh.receiveShadow = true;\nscene.add(mesh)\nmesh.position.set(0,5,3);\n\n// Light\n// const dirLight = new THREE.DirectionalLight( parameters.lightColor, 0.7 );\nconst dirLight = new THREE.DirectionalLight( 0xffffff, 0.7 );\ndirLight.castShadow = true; // default false\ndirLight.position.set(0,60,5);\n\n// adjust dirLight size\ndirLight.shadowCameraLeft = -10;\ndirLight.shadowCameraRight = 10;\ndirLight.shadowCameraTop = 10;\ndirLight.shadowCameraBottom = -10;\n\nscene.add( dirLight );\n\n// const helper = new THREE.CameraHelper( dirLight.shadow.camera );\n// scene.add( helper );\n\n\n\nconst ambLight = new THREE.AmbientLight(0xffffff);\nscene.add( ambLight );\n\n\n/**\n * Sizes\n */\nconst sizes = {\n    width: window.innerWidth,\n    height: window.innerHeight\n}\n\nwindow.addEventListener('resize', () =>\n{\n    // Update sizes\n    sizes.width = window.innerWidth\n    sizes.height = window.innerHeight\n\n    // Update camera\n    camera.aspect = sizes.width / sizes.height\n    camera.updateProjectionMatrix()\n\n    // Update renderer\n    renderer.setSize(sizes.width, sizes.height)\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2))\n})\n\n/**\n * Fullscreen\n */\nwindow.addEventListener('dblclick', () =>\n{\n    const fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement\n\n    if(!fullscreenElement)\n    {\n        if(canvas.requestFullscreen)\n        {\n            canvas.requestFullscreen()\n        }\n        else if(canvas.webkitRequestFullscreen)\n        {\n            canvas.webkitRequestFullscreen()\n        }\n    }\n    else\n    {\n        if(document.exitFullscreen)\n        {\n            document.exitFullscreen()\n        }\n        else if(document.webkitExitFullscreen)\n        {\n            document.webkitExitFullscreen()\n        }\n    }\n})\n\n// Plane for receiving shadows\nconst planeGeometry = new THREE.PlaneBufferGeometry(100, 100);\nconst planeMaterial = new THREE.MeshToonMaterial({ color: parameters.planeColor});\n// weird box appears in the shadows?? don't know why\n// const planeMaterial = new THREE.MeshToonMaterial({ color: 0x313866, side: THREE.DoubleSide}); \nconst plane = new THREE.Mesh(planeGeometry, planeMaterial);\nscene.add(plane);\nplane.rotateX(-2);\nplane.position.set(0,-20,0);\n\n// Shadow on plane\nplane.castShadow = true;\nplane.receiveShadow = true;\n\n/**\n * Camera\n */\n// Base camera\nconst camera = new THREE.PerspectiveCamera(75, sizes.width / sizes.height, 0.1, 100)\ncamera.position.set(0,20,30);\ncamera.lookAt(plane.position);\nscene.add(camera)\n\n// Controls\nconst controls = new OrbitControls(camera, canvas)\ncontrols.enableDamping = true\n\n/**\n * Renderer\n */\nconst renderer = new THREE.WebGLRenderer({\n    canvas: canvas\n})\nrenderer.setSize(sizes.width, sizes.height)\nrenderer.setPixelRatio(Math.min(window.devicePixelRatio, 2))\n\n// Shadows\nrenderer.shadowMap.enabled = true;\nrenderer.shadowMap.type = THREE.PCFSoftShadowMap; // default THREE.PCFShadowMap\n\n// axisHelper\n// const axesHelper = new THREE.AxesHelper( 20 );\n// scene.add( axesHelper );\n\n// dat.gui\n\n// const gui = new dat.GUI({autoPlace: true});\n// gui.domElement.id = 'gui';\n// let folder = gui.addFolder(`Colors`)\n// gui\n//     .addColor(parameters, 'meshColor')\n//     .onChange(() =>\n//     {\n//         material.color.set(parameters.meshColor)\n//     })\n// gui\n//     .addColor(parameters, 'lightColor')\n//     .onChange(() =>\n//     {\n//         material.color.set(parameters.lightColor)\n//     })\n\n/**\n * Animate\n */\nconst clock = new THREE.Clock()\n\nconst getPermisson = e => {\n    e.preventDefault();\n    // Request permission for iOS 13+ devices\n    if (\n        DeviceOrientationEvent &&\n        typeof DeviceOrientationEvent.requestPermission === \"function\"\n      ) {\n        console.log(\"click event received!!\")\n        DeviceOrientationEvent.requestPermission();\n    }\n}\n\nconst rotate = e => {\n    console.log(\"orientation event received!\")\n    var x = e.beta;\n    var y = e.alpha;\n    var z = e.gamma;\n\n    // Because we don't want to have the device upside down\n    // We constrain the x value to the range [-90,90]\n    if (y > 90) {\n        y = 90;\n    }\n    if (y < -90) {\n        y = -90;\n    }\n\n    if (z > 90) {\n        z = 90;\n    }\n    if (z < -90) {\n        z = -90;\n    }\n\n    parameters.deviceBeta = x;\n    parameters.deviceAlpha = y;\n    parameters.deviceGamma = z;\n}\n\n// get device orientation when button is clicked\nlet is_running = false;\nlet button = document.getElementById(\"start\");\n\nbutton.onclick = function(e) {\n    e.preventDefault();\n\n    if (is_running){\n        scene.background = new THREE.Color( 0xf1d3d3 );\n        button.innerText = 'start detection';\n        // iOS permission\n        window.removeEventListener(\"click\", getPermisson);\n        window.removeEventListener(\"touchstart\", getPermisson);\n        // device orientation\n        window.removeEventListener(\"deviceorientation\", rotate, true);\n        is_running = false;\n      }else{\n        scene.background = new THREE.Color( 0xF2E7B3 );\n        button.innerText = 'stop detection';\n        // iOS permission\n        window.addEventListener(\"click\", getPermisson);\n        window.addEventListener(\"touchstart\", getPermisson);\n        // device orientation\n        window.addEventListener(\"deviceorientation\", rotate, true);\n        is_running = true;\n      }\n\n}\nconst tick = () =>\n{\n    // window.addEventListener(\"deviceorientation\", rotate, true);\n    const elapsedTime = clock.getElapsedTime()\n\n    // Update controls\n    controls.update()\n\n    // Render\n    renderer.render(scene, camera)\n\n    // Rotation\n    mesh.rotation.x = parameters.deviceBeta * Math.PI / 180;\n    mesh.rotation.y = parameters.deviceAlpha * Math.PI / 180;\n    mesh.rotation.z = - parameters.deviceGamma * Math.PI / 180;\n    \n\n    // Call tick again on the next frame\n    window.requestAnimationFrame(tick)\n}\n\ntick()\n\n    }\n    render() {\n        return (\n            <div>\n                <div id = \"container\">\n                    <p id =\"description\">press button and turn your phone around</p>\n                    <button id=\"start\" className=\"btn\" href=\"#\" role=\"button\">start detection</button>\n                    <canvas className=\"webgl\"></canvas>\n                </div>            \n            </div>\n        )\n    }\n}\n\nexport default Day3;"]},"metadata":{},"sourceType":"module"}