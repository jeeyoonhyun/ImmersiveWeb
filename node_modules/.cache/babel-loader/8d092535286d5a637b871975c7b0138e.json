{"ast":null,"code":"var _jsxFileName = \"/Users/jeeyoonhyun/immersive-web/src/Pages/Day2.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router';\nimport '../day2/style.css';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer.js';\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass.js';\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass.js';\nimport * as THREE from \"three\"; // The number of columns change by resizing the window\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Day2 extends React.Component {\n  componentDidMount() {\n    //    insert three.js code\n\n    /**\n    * Base\n    */\n    // Canvas\n    const canvas = document.querySelector('canvas.webgl'); // Scene\n\n    const scene = new THREE.Scene();\n    /**\n     * Object\n     */\n\n    let mesh;\n    let geometry;\n    const group = new THREE.Group(); // const geometry = new THREE.TorusKnotGeometry( 1, 0.02, 8, 16 );\n\n    const material = new THREE.MeshBasicMaterial({\n      color: 0xffffff\n    });\n    mesh = new THREE.Mesh(geometry, material);\n    scene.add(mesh);\n\n    for (let i = 0; i < 10; i++) {\n      geometry = new THREE.TorusKnotGeometry(0.5, 0.02, 8, 16, 10 + Math.floor(Math.random() * 10), 10 + Math.floor(Math.random() * 10));\n      mesh = new THREE.Mesh(geometry, material);\n      mesh.position.set(Math.floor(Math.random() * 3), Math.floor(Math.random() * 3), Math.floor(Math.random() * 3));\n      group.add(mesh);\n    }\n\n    scene.add(group);\n    group.position.set(0, 0, -1);\n    let params = {\n      exposure: 1,\n      bloomStrength: 1.5,\n      bloomThreshold: 0.1,\n      bloomRadius: 0\n    };\n    /**\n     * Sizes\n     */\n\n    const sizes = {\n      width: window.innerWidth,\n      height: window.innerHeight\n    };\n    /**\n     * Camera\n     */\n    // Base camera\n\n    const camera = new THREE.PerspectiveCamera(30, sizes.width / sizes.height, 1, 50);\n    camera.position.set(1, -3, 0);\n    scene.add(camera);\n    camera.lookAt(group); // Controls\n\n    const controls = new OrbitControls(camera, canvas);\n    controls.enableDamping = true; // lights\n\n    scene.add(new THREE.AmbientLight(0x404040));\n    const pointLight = new THREE.PointLight(0xffffff, 1);\n    camera.add(pointLight);\n    /**\n     * Renderer\n     */\n\n    const renderer = new THREE.WebGLRenderer({\n      canvas: canvas,\n      antialias: true\n    });\n    renderer.toneMapping = THREE.ReinhardToneMapping;\n    renderer.setSize(sizes.width, sizes.height); // RenderPass\n\n    const renderScene = new RenderPass(scene, camera);\n    const bloomPass = new UnrealBloomPass(new THREE.Vector2(sizes.innerWidth, sizes.innerHeight), 1.5, 0.4, 0.85);\n    bloomPass.threshold = params.bloomThreshold;\n    bloomPass.strength = params.bloomStrength;\n    bloomPass.radius = params.bloomRadius;\n    let composer = new EffectComposer(renderer);\n    composer.addPass(renderScene);\n    composer.addPass(bloomPass);\n    /**\n     * Animate\n     */\n\n    const clock = new THREE.Clock();\n    const scaleKF = new THREE.VectorKeyframeTrack('.scale', [0, 1, 2], [1, 1, 1, 2, 2, 2, 1, 1, 1]);\n    const clip = new THREE.AnimationClip('Action', 3, [scaleKF]); // setup the THREE.AnimationMixer\n\n    let mixer = new THREE.AnimationMixer(mesh); // create a ClipAction and set it to play\n\n    const clipAction = mixer.clipAction(clip); //resize\n    // Listen to the resize event\n\n    window.addEventListener('resize', () => {\n      //update size for resize\n      sizes.width = window.innerWidth;\n      sizes.height = window.innerHeight; //update camera\n\n      camera.aspect = sizes.width / sizes.height;\n      camera.updateProjectionMatrix(); //update renderer\n\n      renderer.setSize(sizes.width, sizes.height); // see https://threejs.org/docs/index.html?q=updat#manual/en/introduction/How-to-update-things\n\n      renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2)); // change pixel ratio to reduce jaggies & limit it into 2(more than 2 becomes extremely slow)\n    });\n    window.addEventListener('dblclick', () => {\n      const fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement; //for safari\n\n      if (!fullscreenElement) {\n        if (canvas.requestFullscreen) {\n          canvas.requestFullscreen(); // doesn't work on Safari\n        } else if (canvas.webkitRequestFullscreen) {\n          canvas.webkitRequestFullscreen(); //for Safari\n        }\n      } else {\n        if (document.exitFullscreen) {\n          document.exitFullscreen(); //not the canvas, it is document    \n        } else if (document.webkitExitFullscreen) {\n          document.webkitExitFullscreen(); //for Safari\n        }\n      }\n    });\n\n    const tick = () => {\n      const delta = clock.getDelta();\n      const time = clock.getElapsedTime() * 10;\n      params.bloomStrength = 5 * Math.sin(time);\n      params.needsUpdate = true;\n      group.rotation.x += 0.01;\n      group.rotation.y += 0.01; // Update controls\n\n      controls.update(); // Render\n\n      renderer.render(scene, camera); // Call tick again on the next frame\n\n      window.requestAnimationFrame(tick);\n      composer.render();\n      clipAction.play();\n    };\n\n    tick();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        class: \"webgl\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Day2;","map":{"version":3,"sources":["/Users/jeeyoonhyun/immersive-web/src/Pages/Day2.js"],"names":["React","Component","Link","OrbitControls","EffectComposer","RenderPass","UnrealBloomPass","THREE","Day2","componentDidMount","canvas","document","querySelector","scene","Scene","mesh","geometry","group","Group","material","MeshBasicMaterial","color","Mesh","add","i","TorusKnotGeometry","Math","floor","random","position","set","params","exposure","bloomStrength","bloomThreshold","bloomRadius","sizes","width","window","innerWidth","height","innerHeight","camera","PerspectiveCamera","lookAt","controls","enableDamping","AmbientLight","pointLight","PointLight","renderer","WebGLRenderer","antialias","toneMapping","ReinhardToneMapping","setSize","renderScene","bloomPass","Vector2","threshold","strength","radius","composer","addPass","clock","Clock","scaleKF","VectorKeyframeTrack","clip","AnimationClip","mixer","AnimationMixer","clipAction","addEventListener","aspect","updateProjectionMatrix","setPixelRatio","min","devicePixelRatio","fullscreenElement","webkitFullscreenElement","requestFullscreen","webkitRequestFullscreen","exitFullscreen","webkitExitFullscreen","tick","delta","getDelta","time","getElapsedTime","sin","needsUpdate","rotation","x","y","update","render","requestAnimationFrame","play"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router';\nimport '../day2/style.css'\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js'\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer.js';\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass.js';\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass.js';\nimport * as THREE from \"three\";\n\n// The number of columns change by resizing the window\nclass Day2 extends React.Component {\n    componentDidMount() {\n        //    insert three.js code\n        /**\n     * Base\n     */\n        // Canvas\n        const canvas = document.querySelector('canvas.webgl')\n\n        // Scene\n        const scene = new THREE.Scene()\n\n        /**\n         * Object\n         */\n\n        let mesh;\n        let geometry;\n        const group = new THREE.Group();\n        // const geometry = new THREE.TorusKnotGeometry( 1, 0.02, 8, 16 );\n        const material = new THREE.MeshBasicMaterial({ color: 0xffffff });\n        mesh = new THREE.Mesh(geometry, material);\n        scene.add(mesh);\n\n        for (let i = 0; i < 10; i++) {\n            geometry = new THREE.TorusKnotGeometry(0.5, 0.02, 8, 16, 10 + Math.floor(Math.random() * 10), 10 + Math.floor(Math.random() * 10));\n            mesh = new THREE.Mesh(geometry, material);\n            mesh.position.set(Math.floor(Math.random() * 3), Math.floor(Math.random() * 3), Math.floor(Math.random() * 3));\n            group.add(mesh);\n        }\n\n        scene.add(group);\n        group.position.set(0, 0, -1);\n        let params = {\n            exposure: 1,\n            bloomStrength: 1.5,\n            bloomThreshold: 0.1,\n            bloomRadius: 0\n        };\n\n        /**\n         * Sizes\n         */\n        const sizes = {\n            width: window.innerWidth,\n            height: window.innerHeight\n        }\n\n        /**\n         * Camera\n         */\n        // Base camera\n        const camera = new THREE.PerspectiveCamera(30, sizes.width / sizes.height, 1, 50)\n        camera.position.set(1, -3, 0);\n        scene.add(camera);\n        camera.lookAt(group);\n\n        // Controls\n        const controls = new OrbitControls(camera, canvas)\n        controls.enableDamping = true\n\n        // lights\n        scene.add(new THREE.AmbientLight(0x404040));\n        const pointLight = new THREE.PointLight(0xffffff, 1);\n        camera.add(pointLight);\n\n        /**\n         * Renderer\n         */\n        const renderer = new THREE.WebGLRenderer({\n            canvas: canvas,\n            antialias: true\n        })\n        renderer.toneMapping = THREE.ReinhardToneMapping;\n        renderer.setSize(sizes.width, sizes.height)\n\n        // RenderPass\n\n        const renderScene = new RenderPass(scene, camera);\n\n        const bloomPass = new UnrealBloomPass(new THREE.Vector2(sizes.innerWidth, sizes.innerHeight), 1.5, 0.4, 0.85);\n        bloomPass.threshold = params.bloomThreshold;\n        bloomPass.strength = params.bloomStrength;\n        bloomPass.radius = params.bloomRadius;\n\n        let composer = new EffectComposer(renderer);\n        composer.addPass(renderScene);\n        composer.addPass(bloomPass);\n\n        /**\n         * Animate\n         */\n        const clock = new THREE.Clock()\n        const scaleKF = new THREE.VectorKeyframeTrack('.scale', [0, 1, 2], [1, 1, 1, 2, 2, 2, 1, 1, 1]);\n        const clip = new THREE.AnimationClip('Action', 3, [scaleKF]);\n\n        // setup the THREE.AnimationMixer\n        let mixer = new THREE.AnimationMixer(mesh);\n\n        // create a ClipAction and set it to play\n        const clipAction = mixer.clipAction(clip);\n\n        //resize\n        // Listen to the resize event\n        window.addEventListener('resize', () => {\n            //update size for resize\n            sizes.width = window.innerWidth\n            sizes.height = window.innerHeight\n\n            //update camera\n            camera.aspect = sizes.width / sizes.height\n            camera.updateProjectionMatrix();\n\n            //update renderer\n            renderer.setSize(sizes.width, sizes.height) // see https://threejs.org/docs/index.html?q=updat#manual/en/introduction/How-to-update-things\n            renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2)); // change pixel ratio to reduce jaggies & limit it into 2(more than 2 becomes extremely slow)\n        })\n\n        window.addEventListener('dblclick', () => {\n\n            const fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement //for safari\n\n            if (!fullscreenElement) {\n                if (canvas.requestFullscreen) {\n                    canvas.requestFullscreen(); // doesn't work on Safari\n                } else if (canvas.webkitRequestFullscreen) {\n                    canvas.webkitRequestFullscreen(); //for Safari\n                }\n\n            } else {\n                if (document.exitFullscreen) {\n                    document.exitFullscreen(); //not the canvas, it is document    \n                } else if (document.webkitExitFullscreen) {\n                    document.webkitExitFullscreen(); //for Safari\n                }\n\n            }\n        });\n\n        const tick = () => {\n            const delta = clock.getDelta();\n            const time = clock.getElapsedTime() * 10;\n\n            params.bloomStrength = 5 * Math.sin(time);\n            params.needsUpdate = true;\n\n            group.rotation.x += 0.01;\n            group.rotation.y += 0.01;\n\n            // Update controls\n            controls.update()\n\n            // Render\n            renderer.render(scene, camera)\n\n            // Call tick again on the next frame\n            window.requestAnimationFrame(tick)\n\n            composer.render();\n            clipAction.play();\n        }\n\n        tick()\n    }\n    render() {\n        return (\n            <div>\n                <canvas class=\"webgl\"></canvas>\n            </div>\n        )\n    }\n}\n\nexport default Day2;"]},"metadata":{},"sourceType":"module"}