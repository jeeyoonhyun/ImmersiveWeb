{"ast":null,"code":"/**\n * EvEmitter v1.1.0\n * Lil' event emitter\n * MIT License\n */\n\n/* jshint unused: true, undef: true, strict: true */\n(function (global, factory) {\n  // universal module definition\n\n  /* jshint strict: false */\n\n  /* globals define, module, window */\n  if (typeof define == 'function' && define.amd) {\n    // AMD - RequireJS\n    define(factory);\n  } else if (typeof module == 'object' && module.exports) {\n    // CommonJS - Browserify, Webpack\n    module.exports = factory();\n  } else {\n    // Browser globals\n    global.EvEmitter = factory();\n  }\n})(typeof window != 'undefined' ? window : this, function () {\n  \"use strict\";\n\n  function EvEmitter() {}\n\n  var proto = EvEmitter.prototype;\n\n  proto.on = function (eventName, listener) {\n    if (!eventName || !listener) {\n      return;\n    } // set events hash\n\n\n    var events = this._events = this._events || {}; // set listeners array\n\n    var listeners = events[eventName] = events[eventName] || []; // only add once\n\n    if (listeners.indexOf(listener) == -1) {\n      listeners.push(listener);\n    }\n\n    return this;\n  };\n\n  proto.once = function (eventName, listener) {\n    if (!eventName || !listener) {\n      return;\n    } // add event\n\n\n    this.on(eventName, listener); // set once flag\n    // set onceEvents hash\n\n    var onceEvents = this._onceEvents = this._onceEvents || {}; // set onceListeners object\n\n    var onceListeners = onceEvents[eventName] = onceEvents[eventName] || {}; // set flag\n\n    onceListeners[listener] = true;\n    return this;\n  };\n\n  proto.off = function (eventName, listener) {\n    var listeners = this._events && this._events[eventName];\n\n    if (!listeners || !listeners.length) {\n      return;\n    }\n\n    var index = listeners.indexOf(listener);\n\n    if (index != -1) {\n      listeners.splice(index, 1);\n    }\n\n    return this;\n  };\n\n  proto.emitEvent = function (eventName, args) {\n    var listeners = this._events && this._events[eventName];\n\n    if (!listeners || !listeners.length) {\n      return;\n    } // copy over to avoid interference if .off() in listener\n\n\n    listeners = listeners.slice(0);\n    args = args || []; // once stuff\n\n    var onceListeners = this._onceEvents && this._onceEvents[eventName];\n\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      var isOnce = onceListeners && onceListeners[listener];\n\n      if (isOnce) {\n        // remove listener\n        // remove before trigger to prevent recursion\n        this.off(eventName, listener); // unset once flag\n\n        delete onceListeners[listener];\n      } // trigger listener\n\n\n      listener.apply(this, args);\n    }\n\n    return this;\n  };\n\n  proto.allOff = function () {\n    delete this._events;\n    delete this._onceEvents;\n  };\n\n  return EvEmitter;\n});","map":{"version":3,"sources":["/Users/jeeyoonhyun/immersive-web/node_modules/ev-emitter/ev-emitter.js"],"names":["global","factory","define","amd","module","exports","EvEmitter","window","proto","prototype","on","eventName","listener","events","_events","listeners","indexOf","push","once","onceEvents","_onceEvents","onceListeners","off","length","index","splice","emitEvent","args","slice","i","isOnce","apply","allOff"],"mappings":"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","sourcesContent":["/**\n * EvEmitter v1.1.0\n * Lil' event emitter\n * MIT License\n */\n\n/* jshint unused: true, undef: true, strict: true */\n\n( function( global, factory ) {\n  // universal module definition\n  /* jshint strict: false */ /* globals define, module, window */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD - RequireJS\n    define( factory );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS - Browserify, Webpack\n    module.exports = factory();\n  } else {\n    // Browser globals\n    global.EvEmitter = factory();\n  }\n\n}( typeof window != 'undefined' ? window : this, function() {\n\n\"use strict\";\n\nfunction EvEmitter() {}\n\nvar proto = EvEmitter.prototype;\n\nproto.on = function( eventName, listener ) {\n  if ( !eventName || !listener ) {\n    return;\n  }\n  // set events hash\n  var events = this._events = this._events || {};\n  // set listeners array\n  var listeners = events[ eventName ] = events[ eventName ] || [];\n  // only add once\n  if ( listeners.indexOf( listener ) == -1 ) {\n    listeners.push( listener );\n  }\n\n  return this;\n};\n\nproto.once = function( eventName, listener ) {\n  if ( !eventName || !listener ) {\n    return;\n  }\n  // add event\n  this.on( eventName, listener );\n  // set once flag\n  // set onceEvents hash\n  var onceEvents = this._onceEvents = this._onceEvents || {};\n  // set onceListeners object\n  var onceListeners = onceEvents[ eventName ] = onceEvents[ eventName ] || {};\n  // set flag\n  onceListeners[ listener ] = true;\n\n  return this;\n};\n\nproto.off = function( eventName, listener ) {\n  var listeners = this._events && this._events[ eventName ];\n  if ( !listeners || !listeners.length ) {\n    return;\n  }\n  var index = listeners.indexOf( listener );\n  if ( index != -1 ) {\n    listeners.splice( index, 1 );\n  }\n\n  return this;\n};\n\nproto.emitEvent = function( eventName, args ) {\n  var listeners = this._events && this._events[ eventName ];\n  if ( !listeners || !listeners.length ) {\n    return;\n  }\n  // copy over to avoid interference if .off() in listener\n  listeners = listeners.slice(0);\n  args = args || [];\n  // once stuff\n  var onceListeners = this._onceEvents && this._onceEvents[ eventName ];\n\n  for ( var i=0; i < listeners.length; i++ ) {\n    var listener = listeners[i]\n    var isOnce = onceListeners && onceListeners[ listener ];\n    if ( isOnce ) {\n      // remove listener\n      // remove before trigger to prevent recursion\n      this.off( eventName, listener );\n      // unset once flag\n      delete onceListeners[ listener ];\n    }\n    // trigger listener\n    listener.apply( this, args );\n  }\n\n  return this;\n};\n\nproto.allOff = function() {\n  delete this._events;\n  delete this._onceEvents;\n};\n\nreturn EvEmitter;\n\n}));\n"]},"metadata":{},"sourceType":"script"}