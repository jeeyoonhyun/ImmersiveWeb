{"ast":null,"code":"import _classCallCheck from\"/Users/jeeyoonhyun/immersive-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/jeeyoonhyun/immersive-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/jeeyoonhyun/immersive-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/jeeyoonhyun/immersive-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{Link}from'react-router';import'../day1/style.css';import{OrbitControls}from'three/examples/jsm/controls/OrbitControls.js';import*as THREE from\"three\";// The number of columns change by resizing the window\nimport{jsx as _jsx}from\"react/jsx-runtime\";var Day1=/*#__PURE__*/function(_React$Component){_inherits(Day1,_React$Component);var _super=_createSuper(Day1);function Day1(){_classCallCheck(this,Day1);return _super.apply(this,arguments);}_createClass(Day1,[{key:\"componentDidMount\",value:function componentDidMount(){// three.js\n/**\n * Base\n */ // Canvas\nvar canvas=document.querySelector('canvas.webgl');// Scene\nvar scene=new THREE.Scene();//light\nvar lightColor=\"#ffffff\";var intensity=1;var light=new THREE.DirectionalLight(lightColor,intensity);light.position.set(-1,2,4);scene.add(light);/**\n         * Object\n         */ // load font\nvar loader=new THREE.FontLoader();var font=loader.load(// resource URL\n'./assets/day1/anthony.json',// onLoad callback\nfunction(font){var color=0x0;var mat=new THREE.MeshPhysicalMaterial({color:0xffffff,emissive:0x000000,transparent:true,opacity:1,side:THREE.DoubleSide,roughness:0,metalness:0,reflectivity:0,clearcoat:1,clearcoatRoughness:1});// const mat = new THREE.MeshToonMaterial({\n//     color: 0xf,\n// })\nvar message=\"50 days of \\nimmersive web\";// const shapes = font.generateShapes( message, 100 );\n// const geometry = new THREE.ShapeGeometry( shapes );\nvar geometry=new THREE.TextGeometry(message,{font:font,size:72,height:8,curveSegments:1,bevelEnabled:true,bevelThickness:0.15,bevelSize:0.3,bevelSegments:5});geometry.computeBoundingBox();var xMid=-0.5*(geometry.boundingBox.max.x-geometry.boundingBox.min.x);geometry.translate(xMid,0,0);// make shape ( N.B. edge view not visible )\nvar text=new THREE.Mesh(geometry,mat);text.position.y=100;text.position.z=-80;text.rotation.x=-1.3;scene.add(text);},// onProgress callback\nfunction(xhr){console.log(xhr.loaded/xhr.total*100+'% loaded');},// onError callback\nfunction(err){console.log('An error happened');});// water\nscene.background=new THREE.Color(0xffffff);scene.fog=new THREE.FogExp2(0xffffff,0.0009);var worldWidth=128,worldDepth=128;var waterGeometry=new THREE.PlaneGeometry(20000,20000,worldWidth-1,worldDepth-1);waterGeometry.rotateX(-Math.PI/2);var position=waterGeometry.attributes.position;for(var i=0;i<position.count;i++){var y=35*Math.sin(i/2);position.setY(i,y);}// const texture = new THREE.TextureLoader().load('https://live.staticflickr.com/4066/4344198258_e647f9487b_b.jpg');\nvar texture=new THREE.TextureLoader().load('./assets/day1/texture.jpeg');texture.wrapS=texture.wrapT=THREE.RepeatWrapping;texture.repeat.set(5,5);var waterMaterial=new THREE.MeshBasicMaterial({color:0x555555,map:texture});var water=new THREE.Mesh(waterGeometry,waterMaterial);scene.add(water);/**\n         * Sizes\n         */var sizes={width:window.innerWidth,height:window.innerHeight};// Listen to the resize event\nwindow.addEventListener('resize',function(){//update size for resize\nsizes.width=window.innerWidth;sizes.height=window.innerHeight;//update camera\ncamera.aspect=sizes.width/sizes.height;camera.updateProjectionMatrix();//update renderer\nrenderer.setSize(sizes.width,sizes.height);// see https://threejs.org/docs/index.html?q=updat#manual/en/introduction/How-to-update-things\nrenderer.setPixelRatio(Math.min(window.devicePixelRatio,2));// change pixel ratio to reduce jaggies & limit it into 2(more than 2 becomes extremely slow)\n});window.addEventListener('dblclick',function(){var fullscreenElement=document.fullscreenElement||document.webkitFullscreenElement;//for safari\nif(!fullscreenElement){if(canvas.requestFullscreen){canvas.requestFullscreen();// doesn't work on Safari\n}else if(canvas.webkitRequestFullscreen){canvas.webkitRequestFullscreen();//for Safari\n}}else{if(document.exitFullscreen){document.exitFullscreen();//not the canvas, it is document    \n}else if(document.webkitExitFullscreen){document.webkitExitFullscreen();//for Safari\n}}});/**\n         * Camera\n         */ // Base camera\nvar camera=new THREE.PerspectiveCamera(45,window.innerWidth/window.innerHeight,1,10000);camera.position.set(0,100,1000);scene.add(camera);// Controls\nvar controls=new OrbitControls(camera,canvas);controls.enableDamping=true;/**\n         * Renderer\n         */var renderer=new THREE.WebGLRenderer({canvas:canvas});renderer.setSize(sizes.width,sizes.height);/**\n         * Animate\n         */var clock=new THREE.Clock();var tick=function tick(){var delta=clock.getDelta();var time=clock.getElapsedTime()*10;var position=waterGeometry.attributes.position;for(var _i=0;_i<position.count;_i++){var _y=35*Math.sin(_i/5+(time+_i)/7);position.setY(_i,_y);}position.needsUpdate=true;// controls.update( delta );\nvar elapsedTime=clock.getElapsedTime();// Update controls\ncontrols.update();// Render\nrenderer.setClearColor(0xffffff,1);renderer.render(scene,camera);// Call tick again on the next frame\nwindow.requestAnimationFrame(tick);};tick();}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"canvas\",{class:\"webgl\"})});}}]);return Day1;}(React.Component);export default Day1;","map":{"version":3,"sources":["/Users/jeeyoonhyun/immersive-web/src/Pages/Day1.js"],"names":["React","Component","Link","OrbitControls","THREE","Day1","canvas","document","querySelector","scene","Scene","lightColor","intensity","light","DirectionalLight","position","set","add","loader","FontLoader","font","load","color","mat","MeshPhysicalMaterial","emissive","transparent","opacity","side","DoubleSide","roughness","metalness","reflectivity","clearcoat","clearcoatRoughness","message","geometry","TextGeometry","size","height","curveSegments","bevelEnabled","bevelThickness","bevelSize","bevelSegments","computeBoundingBox","xMid","boundingBox","max","x","min","translate","text","Mesh","y","z","rotation","xhr","console","log","loaded","total","err","background","Color","fog","FogExp2","worldWidth","worldDepth","waterGeometry","PlaneGeometry","rotateX","Math","PI","attributes","i","count","sin","setY","texture","TextureLoader","wrapS","wrapT","RepeatWrapping","repeat","waterMaterial","MeshBasicMaterial","map","water","sizes","width","window","innerWidth","innerHeight","addEventListener","camera","aspect","updateProjectionMatrix","renderer","setSize","setPixelRatio","devicePixelRatio","fullscreenElement","webkitFullscreenElement","requestFullscreen","webkitRequestFullscreen","exitFullscreen","webkitExitFullscreen","PerspectiveCamera","controls","enableDamping","WebGLRenderer","clock","Clock","tick","delta","getDelta","time","getElapsedTime","needsUpdate","elapsedTime","update","setClearColor","render","requestAnimationFrame"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router';\nimport '../day1/style.css'\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js'\nimport * as THREE from \"three\";\n\n// The number of columns change by resizing the window\nclass Day1 extends React.Component {\n    componentDidMount() {\n        // three.js\n        /**\n * Base\n */\n        // Canvas\n        const canvas = document.querySelector('canvas.webgl')\n\n        // Scene\n        const scene = new THREE.Scene()\n\n        //light\n        const lightColor = \"#ffffff\";\n        const intensity = 1;\n        const light = new THREE.DirectionalLight(lightColor, intensity);\n        light.position.set(-1, 2, 4);\n        scene.add(light);\n\n\n        /**\n         * Object\n         */\n\n        // load font\n        const loader = new THREE.FontLoader();\n        const font = loader.load(\n            // resource URL\n            './assets/day1/anthony.json',\n\n            // onLoad callback\n            function (font) {\n                const color = 0x0;\n\n                const mat = new THREE.MeshPhysicalMaterial({\n                    color: 0xffffff,\n                    emissive: 0x000000,\n                    transparent: true,\n                    opacity: 1,\n                    side: THREE.DoubleSide,\n                    roughness: 0,\n                    metalness: 0,\n                    reflectivity: 0,\n                    clearcoat: 1,\n                    clearcoatRoughness: 1,\n                });\n                // const mat = new THREE.MeshToonMaterial({\n                //     color: 0xf,\n                // })\n\n                const message = \"50 days of \\nimmersive web\";\n\n                // const shapes = font.generateShapes( message, 100 );\n                // const geometry = new THREE.ShapeGeometry( shapes );\n\n                const geometry = new THREE.TextGeometry(message, {\n                    font: font,\n                    size: 72,\n                    height: 8,\n                    curveSegments: 1,\n                    bevelEnabled: true,\n                    bevelThickness: 0.15,\n                    bevelSize: 0.3,\n                    bevelSegments: 5,\n                });\n\n                geometry.computeBoundingBox();\n\n                const xMid = - 0.5 * (geometry.boundingBox.max.x - geometry.boundingBox.min.x);\n\n                geometry.translate(xMid, 0, 0);\n\n                // make shape ( N.B. edge view not visible )\n\n                const text = new THREE.Mesh(geometry, mat);\n                text.position.y = 100;\n                text.position.z = -80;\n                text.rotation.x = -1.3;\n                scene.add(text);\n            },\n\n            // onProgress callback\n            function (xhr) {\n                console.log((xhr.loaded / xhr.total * 100) + '% loaded');\n            },\n\n            // onError callback\n            function (err) {\n                console.log('An error happened');\n            }\n        );\n\n        // water\n        scene.background = new THREE.Color(0xffffff);\n        scene.fog = new THREE.FogExp2(0xffffff, 0.0009);\n\n        const worldWidth = 128, worldDepth = 128;\n        let waterGeometry = new THREE.PlaneGeometry(20000, 20000, worldWidth - 1, worldDepth - 1);\n        waterGeometry.rotateX(- Math.PI / 2);\n        const position = waterGeometry.attributes.position;\n        for (let i = 0; i < position.count; i++) {\n\n            const y = 35 * Math.sin(i / 2);\n            position.setY(i, y);\n\n        }\n\n        // const texture = new THREE.TextureLoader().load('https://live.staticflickr.com/4066/4344198258_e647f9487b_b.jpg');\n        const texture = new THREE.TextureLoader().load('./assets/day1/texture.jpeg');\n        texture.wrapS = texture.wrapT = THREE.RepeatWrapping;\n        texture.repeat.set(5, 5);\n\n        let waterMaterial = new THREE.MeshBasicMaterial({ color: 0x555555, map: texture });\n        let water = new THREE.Mesh(waterGeometry, waterMaterial);\n        scene.add(water);\n\n        /**\n         * Sizes\n         */\n        const sizes = {\n            width: window.innerWidth,\n            height: window.innerHeight\n        }\n\n        // Listen to the resize event\n        window.addEventListener('resize', () => {\n            //update size for resize\n            sizes.width = window.innerWidth\n            sizes.height = window.innerHeight\n\n            //update camera\n            camera.aspect = sizes.width / sizes.height\n            camera.updateProjectionMatrix();\n\n            //update renderer\n            renderer.setSize(sizes.width, sizes.height) // see https://threejs.org/docs/index.html?q=updat#manual/en/introduction/How-to-update-things\n            renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2)); // change pixel ratio to reduce jaggies & limit it into 2(more than 2 becomes extremely slow)\n        })\n\n        window.addEventListener('dblclick', () => {\n\n            const fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement //for safari\n\n            if (!fullscreenElement) {\n                if (canvas.requestFullscreen) {\n                    canvas.requestFullscreen(); // doesn't work on Safari\n                } else if (canvas.webkitRequestFullscreen) {\n                    canvas.webkitRequestFullscreen(); //for Safari\n                }\n\n            } else {\n                if (document.exitFullscreen) {\n                    document.exitFullscreen(); //not the canvas, it is document    \n                } else if (document.webkitExitFullscreen) {\n                    document.webkitExitFullscreen(); //for Safari\n                }\n\n            }\n        });\n        /**\n         * Camera\n         */\n        // Base camera\n        const camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 1, 10000)\n        camera.position.set(0, 100, 1000);\n        scene.add(camera)\n\n\n        // Controls\n        const controls = new OrbitControls(camera, canvas)\n        controls.enableDamping = true\n\n        /**\n         * Renderer\n         */\n        const renderer = new THREE.WebGLRenderer({\n            canvas: canvas\n        })\n\n        renderer.setSize(sizes.width, sizes.height)\n\n        /**\n         * Animate\n         */\n        const clock = new THREE.Clock()\n\n        const tick = () => {\n            const delta = clock.getDelta();\n            const time = clock.getElapsedTime() * 10;\n\n            const position = waterGeometry.attributes.position;\n\n            for (let i = 0; i < position.count; i++) {\n\n                const y = 35 * Math.sin(i / 5 + (time + i) / 7);\n                position.setY(i, y);\n\n            }\n            position.needsUpdate = true;\n\n            // controls.update( delta );\n\n            const elapsedTime = clock.getElapsedTime()\n\n            // Update controls\n            controls.update()\n\n            // Render\n            renderer.setClearColor(0xffffff, 1);\n            renderer.render(scene, camera)\n\n            // Call tick again on the next frame\n            window.requestAnimationFrame(tick)\n        }\n\n        tick()\n    }\n    render() {\n        return (\n            <div>\n                <canvas class=\"webgl\"></canvas>\n            </div>\n        )\n    }\n}\n\nexport default Day1;"]},"metadata":{},"sourceType":"module"}