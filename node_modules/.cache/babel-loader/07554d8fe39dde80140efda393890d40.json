{"ast":null,"code":"var _jsxFileName = \"/Users/jeeyoonhyun/immersive-web/src/components/Layout.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\nimport Header from './Header';\nimport Footer from './Footer';\nimport '../assets/sass/main.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Layout extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isPreloaded: true,\n      footerVisible: false\n    };\n    this.linkHandler = this.linkHandler.bind(this);\n    this.toggleFooter = this.toggleFooter.bind(this);\n  }\n\n  linkHandler(e, name) {\n    e.preventDefault();\n\n    if (name === 'about') {\n      this.toggleFooter();\n    }\n  }\n\n  toggleFooter() {\n    this.setState({\n      footerVisible: !this.state.footerVisible\n    });\n  }\n\n  componentDidMount() {\n    this.timeoutId = setTimeout(() => {\n      this.setState({\n        isPreloaded: false\n      });\n    }, 100);\n  }\n\n  componentWillUnmount() {\n    if (this.timeoutId) {\n      clearTimeout(this.timeoutId);\n    }\n  }\n\n  render() {\n    const {\n      children\n    } = this.props;\n    const {\n      isPreloaded,\n      footerVisible\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(StaticQuery, {\n      query: graphql`\n          query SiteTitleQuery {\n            site {\n              siteMetadata {\n                title\n              }\n            }\n          }\n        `,\n      render: data => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Helmet, {\n          title: data.site.siteMetadata.title,\n          meta: [{\n            name: 'description',\n            content: 'Multiverse'\n          }, {\n            name: 'keywords',\n            content: 'site, web'\n          }],\n          children: /*#__PURE__*/_jsxDEV(\"html\", {\n            lang: \"en\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `main-body ${footerVisible ? 'content-active' : ''}\n               ${isPreloaded ? 'is-preload' : ''}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(Header, {\n              onAction: this.linkHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"main\",\n              onClick: e => {\n                if (footerVisible) {\n                  e.preventDefault();\n                  e.stopPropagation();\n                  this.toggleFooter();\n                }\n              },\n              children: children\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Footer, {\n              isVisible: footerVisible,\n              onClose: this.toggleFooter\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default Layout;","map":{"version":3,"sources":["/Users/jeeyoonhyun/immersive-web/src/components/Layout.js"],"names":["React","Component","PropTypes","Helmet","StaticQuery","graphql","Header","Footer","Layout","constructor","props","state","isPreloaded","footerVisible","linkHandler","bind","toggleFooter","e","name","preventDefault","setState","componentDidMount","timeoutId","setTimeout","componentWillUnmount","clearTimeout","render","children","data","site","siteMetadata","title","content","stopPropagation","propTypes","node","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\nimport Header from './Header';\nimport Footer from './Footer';\nimport '../assets/sass/main.scss';\n\nclass Layout extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isPreloaded: true,\n      footerVisible: false,\n    };\n\n    this.linkHandler = this.linkHandler.bind(this);\n    this.toggleFooter = this.toggleFooter.bind(this);\n  }\n\n  linkHandler(e, name) {\n    e.preventDefault();\n    if (name === 'about') {\n      this.toggleFooter();\n    }\n  }\n\n  toggleFooter() {\n    this.setState({ footerVisible: !this.state.footerVisible });\n  }\n\n  componentDidMount() {\n    this.timeoutId = setTimeout(() => {\n      this.setState({ isPreloaded: false });\n    }, 100);\n  }\n\n  componentWillUnmount() {\n    if (this.timeoutId) {\n      clearTimeout(this.timeoutId);\n    }\n  }\n\n  render() {\n    const { children } = this.props;\n    const { isPreloaded, footerVisible } = this.state;\n    return (\n      <StaticQuery\n        query={graphql`\n          query SiteTitleQuery {\n            site {\n              siteMetadata {\n                title\n              }\n            }\n          }\n        `}\n        render={data => (\n          <>\n            <Helmet\n              title={data.site.siteMetadata.title}\n              meta={[\n                { name: 'description', content: 'Multiverse' },\n                { name: 'keywords', content: 'site, web' },\n              ]}\n            >\n              <html lang=\"en\" />\n            </Helmet>\n            <div\n              className={`main-body ${footerVisible ? 'content-active' : ''}\n               ${isPreloaded ? 'is-preload' : ''}`}\n            >\n              <div id=\"wrapper\">\n                <Header onAction={this.linkHandler} />\n                <div\n                  id=\"main\"\n                  onClick={e => {\n                    if (footerVisible) {\n                      e.preventDefault();\n                      e.stopPropagation();\n                      this.toggleFooter();\n                    }\n                  }}\n                >\n                  {children}\n                </div>\n                <Footer isVisible={footerVisible} onClose={this.toggleFooter} />\n              </div>\n            </div>\n          </>\n        )}\n      />\n    );\n  }\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n"]},"metadata":{},"sourceType":"module"}