{"ast":null,"code":"var _jsxFileName = \"/Users/jeeyoonhyun/immersive-web/src/components/Gallery.js\";\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport Lightbox from 'react-images';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Gallery extends Component {\n  constructor() {\n    super();\n    this.state = {\n      lightboxIsOpen: false,\n      currentImage: 0\n    };\n    this.closeLightbox = this.closeLightbox.bind(this);\n    this.gotoNext = this.gotoNext.bind(this);\n    this.gotoPrevious = this.gotoPrevious.bind(this);\n    this.gotoImage = this.gotoImage.bind(this);\n    this.handleClickImage = this.handleClickImage.bind(this);\n    this.openLightbox = this.openLightbox.bind(this);\n  }\n\n  openLightbox(index, event) {\n    event.preventDefault();\n    this.setState({\n      currentImage: index,\n      lightboxIsOpen: true\n    });\n  }\n\n  closeLightbox() {\n    this.setState({\n      currentImage: 0,\n      lightboxIsOpen: false\n    });\n  }\n\n  gotoPrevious() {\n    this.setState({\n      currentImage: this.state.currentImage - 1\n    });\n  }\n\n  gotoNext() {\n    this.setState({\n      currentImage: this.state.currentImage + 1\n    });\n  }\n\n  gotoImage(index) {\n    this.setState({\n      currentImage: index\n    });\n  }\n\n  handleClickImage() {\n    if (this.state.currentImage === this.props.images.length - 1) return;\n    this.gotoNext();\n  }\n\n  renderGallery() {\n    const {\n      images\n    } = this.props;\n    if (!images) return;\n    const gallery = images.map((obj, i) => {\n      return /*#__PURE__*/_jsxDEV(\"article\", {\n        className: \"thumb\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            backgroundImage: `url(${obj.src})`,\n            cursor: 'pointer',\n            outline: '0px'\n          },\n          onClick: e => this.openLightbox(i, e),\n          className: \"image\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            style: {\n              display: 'None'\n            },\n            src: obj.thumbnail,\n            alt: \"\",\n            title: obj.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: obj.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: obj.desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, obj.src, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\" \", gallery, \" \"]\n    }, void 0, true);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.renderGallery(), /*#__PURE__*/_jsxDEV(Lightbox, {\n        currentImage: this.state.currentImage,\n        images: this.props.images.map(img => {\n          img.caption = `${img.title} - ${img.desc}`;\n          return img;\n        }),\n        isOpen: this.state.lightboxIsOpen,\n        onClickImage: this.handleClickImage,\n        onClickNext: this.gotoNext,\n        onClickPrev: this.gotoPrevious,\n        onClickThumbnail: this.gotoImage,\n        onClose: this.closeLightbox\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nGallery.displayName = 'Gallery';\nGallery.propTypes = {\n  images: PropTypes.array\n};\nexport default Gallery;","map":{"version":3,"sources":["/Users/jeeyoonhyun/immersive-web/src/components/Gallery.js"],"names":["PropTypes","React","Component","Lightbox","Gallery","constructor","state","lightboxIsOpen","currentImage","closeLightbox","bind","gotoNext","gotoPrevious","gotoImage","handleClickImage","openLightbox","index","event","preventDefault","setState","props","images","length","renderGallery","gallery","map","obj","i","backgroundImage","src","cursor","outline","e","display","thumbnail","title","desc","render","img","caption","displayName","propTypes","array"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport Lightbox from 'react-images';\n\nclass Gallery extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      lightboxIsOpen: false,\n      currentImage: 0,\n    };\n\n    this.closeLightbox = this.closeLightbox.bind(this);\n    this.gotoNext = this.gotoNext.bind(this);\n    this.gotoPrevious = this.gotoPrevious.bind(this);\n    this.gotoImage = this.gotoImage.bind(this);\n    this.handleClickImage = this.handleClickImage.bind(this);\n    this.openLightbox = this.openLightbox.bind(this);\n  }\n  openLightbox(index, event) {\n    event.preventDefault();\n    this.setState({\n      currentImage: index,\n      lightboxIsOpen: true,\n    });\n  }\n  closeLightbox() {\n    this.setState({\n      currentImage: 0,\n      lightboxIsOpen: false,\n    });\n  }\n  gotoPrevious() {\n    this.setState({\n      currentImage: this.state.currentImage - 1,\n    });\n  }\n  gotoNext() {\n    this.setState({\n      currentImage: this.state.currentImage + 1,\n    });\n  }\n  gotoImage(index) {\n    this.setState({\n      currentImage: index,\n    });\n  }\n  handleClickImage() {\n    if (this.state.currentImage === this.props.images.length - 1) return;\n\n    this.gotoNext();\n  }\n  renderGallery() {\n    const { images } = this.props;\n\n    if (!images) return;\n\n    const gallery = images.map((obj, i) => {\n      return (\n        <article className=\"thumb\" key={obj.src}>\n          <span\n            style={{\n              backgroundImage: `url(${obj.src})`,\n              cursor: 'pointer',\n              outline: '0px',\n            }}\n            onClick={e => this.openLightbox(i, e)}\n            className=\"image\"\n          >\n            <img\n              style={{ display: 'None' }}\n              src={obj.thumbnail}\n              alt=\"\"\n              title={obj.title}\n            />\n          </span>\n          <h2>{obj.title}</h2>\n          <p>{obj.desc}</p>\n        </article>\n      );\n    });\n\n    return <> {gallery} </>;\n  }\n  render() {\n    return (\n      <>\n        {this.renderGallery()}\n        <Lightbox\n          currentImage={this.state.currentImage}\n          images={this.props.images.map(img => {\n            img.caption = `${img.title} - ${img.desc}`;\n            return img;\n          })}\n          isOpen={this.state.lightboxIsOpen}\n          onClickImage={this.handleClickImage}\n          onClickNext={this.gotoNext}\n          onClickPrev={this.gotoPrevious}\n          onClickThumbnail={this.gotoImage}\n          onClose={this.closeLightbox}\n        />\n      </>\n    );\n  }\n}\n\nGallery.displayName = 'Gallery';\nGallery.propTypes = {\n  images: PropTypes.array,\n};\n\nexport default Gallery;\n"]},"metadata":{},"sourceType":"module"}