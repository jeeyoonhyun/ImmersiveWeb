{"ast":null,"code":"import _classCallCheck from \"/Users/jeeyoonhyun/immersive-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _assertThisInitialized from \"/Users/jeeyoonhyun/immersive-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/jeeyoonhyun/immersive-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/jeeyoonhyun/immersive-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { EventDispatcher, MOUSE, Quaternion, Spherical, TOUCH, Vector2, Vector3 } from 'three'; // This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nvar _changeEvent = {\n  type: 'change'\n};\nvar _startEvent = {\n  type: 'start'\n};\nvar _endEvent = {\n  type: 'end'\n};\n\nvar OrbitControls = /*#__PURE__*/function (_EventDispatcher) {\n  _inherits(OrbitControls, _EventDispatcher);\n\n  var _super = _createSuper(OrbitControls);\n\n  function OrbitControls(object, domElement) {\n    var _this;\n\n    _classCallCheck(this, OrbitControls);\n\n    _this = _super.call(this);\n    if (domElement === undefined) console.warn('THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.');\n    if (domElement === document) console.error('THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.');\n    _this.object = object;\n    _this.domElement = domElement; // Set to false to disable this control\n\n    _this.enabled = true; // \"target\" sets the location of focus, where the object orbits around\n\n    _this.target = new Vector3(); // How far you can dolly in and out ( PerspectiveCamera only )\n\n    _this.minDistance = 0;\n    _this.maxDistance = Infinity; // How far you can zoom in and out ( OrthographicCamera only )\n\n    _this.minZoom = 0;\n    _this.maxZoom = Infinity; // How far you can orbit vertically, upper and lower limits.\n    // Range is 0 to Math.PI radians.\n\n    _this.minPolarAngle = 0; // radians\n\n    _this.maxPolarAngle = Math.PI; // radians\n    // How far you can orbit horizontally, upper and lower limits.\n    // If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\n    _this.minAzimuthAngle = -Infinity; // radians\n\n    _this.maxAzimuthAngle = Infinity; // radians\n    // Set to true to enable damping (inertia)\n    // If damping is enabled, you must call controls.update() in your animation loop\n\n    _this.enableDamping = false;\n    _this.dampingFactor = 0.05; // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n    // Set to false to disable zooming\n\n    _this.enableZoom = true;\n    _this.zoomSpeed = 1.0; // Set to false to disable rotating\n\n    _this.enableRotate = true;\n    _this.rotateSpeed = 1.0; // Set to false to disable panning\n\n    _this.enablePan = true;\n    _this.panSpeed = 1.0;\n    _this.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\n    _this.keyPanSpeed = 7.0; // pixels moved per arrow key push\n    // Set to true to automatically rotate around the target\n    // If auto-rotate is enabled, you must call controls.update() in your animation loop\n\n    _this.autoRotate = false;\n    _this.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n    // The four arrow keys\n\n    _this.keys = {\n      LEFT: 'ArrowLeft',\n      UP: 'ArrowUp',\n      RIGHT: 'ArrowRight',\n      BOTTOM: 'ArrowDown'\n    }; // Mouse buttons\n\n    _this.mouseButtons = {\n      LEFT: MOUSE.ROTATE,\n      MIDDLE: MOUSE.DOLLY,\n      RIGHT: MOUSE.PAN\n    }; // Touch fingers\n\n    _this.touches = {\n      ONE: TOUCH.ROTATE,\n      TWO: TOUCH.DOLLY_PAN\n    }; // for reset\n\n    _this.target0 = _this.target.clone();\n    _this.position0 = _this.object.position.clone();\n    _this.zoom0 = _this.object.zoom; // the target DOM element for key events\n\n    _this._domElementKeyEvents = null; //\n    // public methods\n    //\n\n    _this.getPolarAngle = function () {\n      return spherical.phi;\n    };\n\n    _this.getAzimuthalAngle = function () {\n      return spherical.theta;\n    };\n\n    _this.listenToKeyEvents = function (domElement) {\n      domElement.addEventListener('keydown', onKeyDown);\n      this._domElementKeyEvents = domElement;\n    };\n\n    _this.saveState = function () {\n      scope.target0.copy(scope.target);\n      scope.position0.copy(scope.object.position);\n      scope.zoom0 = scope.object.zoom;\n    };\n\n    _this.reset = function () {\n      scope.target.copy(scope.target0);\n      scope.object.position.copy(scope.position0);\n      scope.object.zoom = scope.zoom0;\n      scope.object.updateProjectionMatrix();\n      scope.dispatchEvent(_changeEvent);\n      scope.update();\n      state = STATE.NONE;\n    }; // this method is exposed, but perhaps it would be better if we can make it private...\n\n\n    _this.update = function () {\n      var offset = new Vector3(); // so camera.up is the orbit axis\n\n      var quat = new Quaternion().setFromUnitVectors(object.up, new Vector3(0, 1, 0));\n      var quatInverse = quat.clone().invert();\n      var lastPosition = new Vector3();\n      var lastQuaternion = new Quaternion();\n      var twoPI = 2 * Math.PI;\n      return function update() {\n        var position = scope.object.position;\n        offset.copy(position).sub(scope.target); // rotate offset to \"y-axis-is-up\" space\n\n        offset.applyQuaternion(quat); // angle from z-axis around y-axis\n\n        spherical.setFromVector3(offset);\n\n        if (scope.autoRotate && state === STATE.NONE) {\n          rotateLeft(getAutoRotationAngle());\n        }\n\n        if (scope.enableDamping) {\n          spherical.theta += sphericalDelta.theta * scope.dampingFactor;\n          spherical.phi += sphericalDelta.phi * scope.dampingFactor;\n        } else {\n          spherical.theta += sphericalDelta.theta;\n          spherical.phi += sphericalDelta.phi;\n        } // restrict theta to be between desired limits\n\n\n        var min = scope.minAzimuthAngle;\n        var max = scope.maxAzimuthAngle;\n\n        if (isFinite(min) && isFinite(max)) {\n          if (min < -Math.PI) min += twoPI;else if (min > Math.PI) min -= twoPI;\n          if (max < -Math.PI) max += twoPI;else if (max > Math.PI) max -= twoPI;\n\n          if (min <= max) {\n            spherical.theta = Math.max(min, Math.min(max, spherical.theta));\n          } else {\n            spherical.theta = spherical.theta > (min + max) / 2 ? Math.max(min, spherical.theta) : Math.min(max, spherical.theta);\n          }\n        } // restrict phi to be between desired limits\n\n\n        spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));\n        spherical.makeSafe();\n        spherical.radius *= scale; // restrict radius to be between desired limits\n\n        spherical.radius = Math.max(scope.minDistance, Math.min(scope.maxDistance, spherical.radius)); // move target to panned location\n\n        if (scope.enableDamping === true) {\n          scope.target.addScaledVector(panOffset, scope.dampingFactor);\n        } else {\n          scope.target.add(panOffset);\n        }\n\n        offset.setFromSpherical(spherical); // rotate offset back to \"camera-up-vector-is-up\" space\n\n        offset.applyQuaternion(quatInverse);\n        position.copy(scope.target).add(offset);\n        scope.object.lookAt(scope.target);\n\n        if (scope.enableDamping === true) {\n          sphericalDelta.theta *= 1 - scope.dampingFactor;\n          sphericalDelta.phi *= 1 - scope.dampingFactor;\n          panOffset.multiplyScalar(1 - scope.dampingFactor);\n        } else {\n          sphericalDelta.set(0, 0, 0);\n          panOffset.set(0, 0, 0);\n        }\n\n        scale = 1; // update condition is:\n        // min(camera displacement, camera rotation in radians)^2 > EPS\n        // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n        if (zoomChanged || lastPosition.distanceToSquared(scope.object.position) > EPS || 8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS) {\n          scope.dispatchEvent(_changeEvent);\n          lastPosition.copy(scope.object.position);\n          lastQuaternion.copy(scope.object.quaternion);\n          zoomChanged = false;\n          return true;\n        }\n\n        return false;\n      };\n    }();\n\n    _this.dispose = function () {\n      scope.domElement.removeEventListener('contextmenu', onContextMenu);\n      scope.domElement.removeEventListener('pointerdown', onPointerDown);\n      scope.domElement.removeEventListener('wheel', onMouseWheel);\n      scope.domElement.removeEventListener('touchstart', onTouchStart);\n      scope.domElement.removeEventListener('touchend', onTouchEnd);\n      scope.domElement.removeEventListener('touchmove', onTouchMove);\n      scope.domElement.ownerDocument.removeEventListener('pointermove', onPointerMove);\n      scope.domElement.ownerDocument.removeEventListener('pointerup', onPointerUp);\n\n      if (scope._domElementKeyEvents !== null) {\n        scope._domElementKeyEvents.removeEventListener('keydown', onKeyDown);\n      } //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n    }; //\n    // internals\n    //\n\n\n    var scope = _assertThisInitialized(_this);\n\n    var STATE = {\n      NONE: -1,\n      ROTATE: 0,\n      DOLLY: 1,\n      PAN: 2,\n      TOUCH_ROTATE: 3,\n      TOUCH_PAN: 4,\n      TOUCH_DOLLY_PAN: 5,\n      TOUCH_DOLLY_ROTATE: 6\n    };\n    var state = STATE.NONE;\n    var EPS = 0.000001; // current position in spherical coordinates\n\n    var spherical = new Spherical();\n    var sphericalDelta = new Spherical();\n    var scale = 1;\n    var panOffset = new Vector3();\n    var zoomChanged = false;\n    var rotateStart = new Vector2();\n    var rotateEnd = new Vector2();\n    var rotateDelta = new Vector2();\n    var panStart = new Vector2();\n    var panEnd = new Vector2();\n    var panDelta = new Vector2();\n    var dollyStart = new Vector2();\n    var dollyEnd = new Vector2();\n    var dollyDelta = new Vector2();\n\n    function getAutoRotationAngle() {\n      return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n    }\n\n    function getZoomScale() {\n      return Math.pow(0.95, scope.zoomSpeed);\n    }\n\n    function rotateLeft(angle) {\n      sphericalDelta.theta -= angle;\n    }\n\n    function rotateUp(angle) {\n      sphericalDelta.phi -= angle;\n    }\n\n    var panLeft = function () {\n      var v = new Vector3();\n      return function panLeft(distance, objectMatrix) {\n        v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\n\n        v.multiplyScalar(-distance);\n        panOffset.add(v);\n      };\n    }();\n\n    var panUp = function () {\n      var v = new Vector3();\n      return function panUp(distance, objectMatrix) {\n        if (scope.screenSpacePanning === true) {\n          v.setFromMatrixColumn(objectMatrix, 1);\n        } else {\n          v.setFromMatrixColumn(objectMatrix, 0);\n          v.crossVectors(scope.object.up, v);\n        }\n\n        v.multiplyScalar(distance);\n        panOffset.add(v);\n      };\n    }(); // deltaX and deltaY are in pixels; right and down are positive\n\n\n    var pan = function () {\n      var offset = new Vector3();\n      return function pan(deltaX, deltaY) {\n        var element = scope.domElement;\n\n        if (scope.object.isPerspectiveCamera) {\n          // perspective\n          var position = scope.object.position;\n          offset.copy(position).sub(scope.target);\n          var targetDistance = offset.length(); // half of the fov is center to top of screen\n\n          targetDistance *= Math.tan(scope.object.fov / 2 * Math.PI / 180.0); // we use only clientHeight here so aspect ratio does not distort speed\n\n          panLeft(2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix);\n          panUp(2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix);\n        } else if (scope.object.isOrthographicCamera) {\n          // orthographic\n          panLeft(deltaX * (scope.object.right - scope.object.left) / scope.object.zoom / element.clientWidth, scope.object.matrix);\n          panUp(deltaY * (scope.object.top - scope.object.bottom) / scope.object.zoom / element.clientHeight, scope.object.matrix);\n        } else {\n          // camera neither orthographic nor perspective\n          console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');\n          scope.enablePan = false;\n        }\n      };\n    }();\n\n    function dollyOut(dollyScale) {\n      if (scope.object.isPerspectiveCamera) {\n        scale /= dollyScale;\n      } else if (scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom * dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n        scope.enableZoom = false;\n      }\n    }\n\n    function dollyIn(dollyScale) {\n      if (scope.object.isPerspectiveCamera) {\n        scale *= dollyScale;\n      } else if (scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n        scope.enableZoom = false;\n      }\n    } //\n    // event callbacks - update the object state\n    //\n\n\n    function handleMouseDownRotate(event) {\n      rotateStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseDownDolly(event) {\n      dollyStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseDownPan(event) {\n      panStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseMoveRotate(event) {\n      rotateEnd.set(event.clientX, event.clientY);\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      var element = scope.domElement;\n      rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n      rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      rotateStart.copy(rotateEnd);\n      scope.update();\n    }\n\n    function handleMouseMoveDolly(event) {\n      dollyEnd.set(event.clientX, event.clientY);\n      dollyDelta.subVectors(dollyEnd, dollyStart);\n\n      if (dollyDelta.y > 0) {\n        dollyOut(getZoomScale());\n      } else if (dollyDelta.y < 0) {\n        dollyIn(getZoomScale());\n      }\n\n      dollyStart.copy(dollyEnd);\n      scope.update();\n    }\n\n    function handleMouseMovePan(event) {\n      panEnd.set(event.clientX, event.clientY);\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n      scope.update();\n    }\n\n    function handleMouseUp()\n    /*event*/\n    {// no-op\n    }\n\n    function handleMouseWheel(event) {\n      if (event.deltaY < 0) {\n        dollyIn(getZoomScale());\n      } else if (event.deltaY > 0) {\n        dollyOut(getZoomScale());\n      }\n\n      scope.update();\n    }\n\n    function handleKeyDown(event) {\n      var needsUpdate = false;\n\n      switch (event.code) {\n        case scope.keys.UP:\n          pan(0, scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.BOTTOM:\n          pan(0, -scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.LEFT:\n          pan(scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.RIGHT:\n          pan(-scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n      }\n\n      if (needsUpdate) {\n        // prevent the browser from scrolling on cursor keys\n        event.preventDefault();\n        scope.update();\n      }\n    }\n\n    function handleTouchStartRotate(event) {\n      if (event.touches.length == 1) {\n        rotateStart.set(event.touches[0].pageX, event.touches[0].pageY);\n      } else {\n        var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n        var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n        rotateStart.set(x, y);\n      }\n    }\n\n    function handleTouchStartPan(event) {\n      if (event.touches.length == 1) {\n        panStart.set(event.touches[0].pageX, event.touches[0].pageY);\n      } else {\n        var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n        var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n        panStart.set(x, y);\n      }\n    }\n\n    function handleTouchStartDolly(event) {\n      var dx = event.touches[0].pageX - event.touches[1].pageX;\n      var dy = event.touches[0].pageY - event.touches[1].pageY;\n      var distance = Math.sqrt(dx * dx + dy * dy);\n      dollyStart.set(0, distance);\n    }\n\n    function handleTouchStartDollyPan(event) {\n      if (scope.enableZoom) handleTouchStartDolly(event);\n      if (scope.enablePan) handleTouchStartPan(event);\n    }\n\n    function handleTouchStartDollyRotate(event) {\n      if (scope.enableZoom) handleTouchStartDolly(event);\n      if (scope.enableRotate) handleTouchStartRotate(event);\n    }\n\n    function handleTouchMoveRotate(event) {\n      if (event.touches.length == 1) {\n        rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n      } else {\n        var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n        var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n        rotateEnd.set(x, y);\n      }\n\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      var element = scope.domElement;\n      rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n      rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      rotateStart.copy(rotateEnd);\n    }\n\n    function handleTouchMovePan(event) {\n      if (event.touches.length == 1) {\n        panEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n      } else {\n        var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n        var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n        panEnd.set(x, y);\n      }\n\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n    }\n\n    function handleTouchMoveDolly(event) {\n      var dx = event.touches[0].pageX - event.touches[1].pageX;\n      var dy = event.touches[0].pageY - event.touches[1].pageY;\n      var distance = Math.sqrt(dx * dx + dy * dy);\n      dollyEnd.set(0, distance);\n      dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed));\n      dollyOut(dollyDelta.y);\n      dollyStart.copy(dollyEnd);\n    }\n\n    function handleTouchMoveDollyPan(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event);\n      if (scope.enablePan) handleTouchMovePan(event);\n    }\n\n    function handleTouchMoveDollyRotate(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event);\n      if (scope.enableRotate) handleTouchMoveRotate(event);\n    }\n\n    function handleTouchEnd()\n    /*event*/\n    {// no-op\n    } //\n    // event handlers - FSM: listen for events and reset state\n    //\n\n\n    function onPointerDown(event) {\n      if (scope.enabled === false) return;\n\n      switch (event.pointerType) {\n        case 'mouse':\n        case 'pen':\n          onMouseDown(event);\n          break;\n        // TODO touch\n      }\n    }\n\n    function onPointerMove(event) {\n      if (scope.enabled === false) return;\n\n      switch (event.pointerType) {\n        case 'mouse':\n        case 'pen':\n          onMouseMove(event);\n          break;\n        // TODO touch\n      }\n    }\n\n    function onPointerUp(event) {\n      switch (event.pointerType) {\n        case 'mouse':\n        case 'pen':\n          onMouseUp(event);\n          break;\n        // TODO touch\n      }\n    }\n\n    function onMouseDown(event) {\n      // Prevent the browser from scrolling.\n      event.preventDefault(); // Manually set the focus since calling preventDefault above\n      // prevents the browser from setting it automatically.\n\n      scope.domElement.focus ? scope.domElement.focus() : window.focus();\n      var mouseAction;\n\n      switch (event.button) {\n        case 0:\n          mouseAction = scope.mouseButtons.LEFT;\n          break;\n\n        case 1:\n          mouseAction = scope.mouseButtons.MIDDLE;\n          break;\n\n        case 2:\n          mouseAction = scope.mouseButtons.RIGHT;\n          break;\n\n        default:\n          mouseAction = -1;\n      }\n\n      switch (mouseAction) {\n        case MOUSE.DOLLY:\n          if (scope.enableZoom === false) return;\n          handleMouseDownDolly(event);\n          state = STATE.DOLLY;\n          break;\n\n        case MOUSE.ROTATE:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enablePan === false) return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          } else {\n            if (scope.enableRotate === false) return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          }\n\n          break;\n\n        case MOUSE.PAN:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enableRotate === false) return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          } else {\n            if (scope.enablePan === false) return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          }\n\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n\n      if (state !== STATE.NONE) {\n        scope.domElement.ownerDocument.addEventListener('pointermove', onPointerMove);\n        scope.domElement.ownerDocument.addEventListener('pointerup', onPointerUp);\n        scope.dispatchEvent(_startEvent);\n      }\n    }\n\n    function onMouseMove(event) {\n      if (scope.enabled === false) return;\n      event.preventDefault();\n\n      switch (state) {\n        case STATE.ROTATE:\n          if (scope.enableRotate === false) return;\n          handleMouseMoveRotate(event);\n          break;\n\n        case STATE.DOLLY:\n          if (scope.enableZoom === false) return;\n          handleMouseMoveDolly(event);\n          break;\n\n        case STATE.PAN:\n          if (scope.enablePan === false) return;\n          handleMouseMovePan(event);\n          break;\n      }\n    }\n\n    function onMouseUp(event) {\n      scope.domElement.ownerDocument.removeEventListener('pointermove', onPointerMove);\n      scope.domElement.ownerDocument.removeEventListener('pointerup', onPointerUp);\n      if (scope.enabled === false) return;\n      handleMouseUp(event);\n      scope.dispatchEvent(_endEvent);\n      state = STATE.NONE;\n    }\n\n    function onMouseWheel(event) {\n      if (scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE && state !== STATE.ROTATE) return;\n      event.preventDefault();\n      scope.dispatchEvent(_startEvent);\n      handleMouseWheel(event);\n      scope.dispatchEvent(_endEvent);\n    }\n\n    function onKeyDown(event) {\n      if (scope.enabled === false || scope.enablePan === false) return;\n      handleKeyDown(event);\n    }\n\n    function onTouchStart(event) {\n      if (scope.enabled === false) return;\n      event.preventDefault(); // prevent scrolling\n\n      switch (event.touches.length) {\n        case 1:\n          switch (scope.touches.ONE) {\n            case TOUCH.ROTATE:\n              if (scope.enableRotate === false) return;\n              handleTouchStartRotate(event);\n              state = STATE.TOUCH_ROTATE;\n              break;\n\n            case TOUCH.PAN:\n              if (scope.enablePan === false) return;\n              handleTouchStartPan(event);\n              state = STATE.TOUCH_PAN;\n              break;\n\n            default:\n              state = STATE.NONE;\n          }\n\n          break;\n\n        case 2:\n          switch (scope.touches.TWO) {\n            case TOUCH.DOLLY_PAN:\n              if (scope.enableZoom === false && scope.enablePan === false) return;\n              handleTouchStartDollyPan(event);\n              state = STATE.TOUCH_DOLLY_PAN;\n              break;\n\n            case TOUCH.DOLLY_ROTATE:\n              if (scope.enableZoom === false && scope.enableRotate === false) return;\n              handleTouchStartDollyRotate(event);\n              state = STATE.TOUCH_DOLLY_ROTATE;\n              break;\n\n            default:\n              state = STATE.NONE;\n          }\n\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(_startEvent);\n      }\n    }\n\n    function onTouchMove(event) {\n      if (scope.enabled === false) return;\n      event.preventDefault(); // prevent scrolling\n\n      switch (state) {\n        case STATE.TOUCH_ROTATE:\n          if (scope.enableRotate === false) return;\n          handleTouchMoveRotate(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_PAN:\n          if (scope.enablePan === false) return;\n          handleTouchMovePan(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_DOLLY_PAN:\n          if (scope.enableZoom === false && scope.enablePan === false) return;\n          handleTouchMoveDollyPan(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_DOLLY_ROTATE:\n          if (scope.enableZoom === false && scope.enableRotate === false) return;\n          handleTouchMoveDollyRotate(event);\n          scope.update();\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n    }\n\n    function onTouchEnd(event) {\n      if (scope.enabled === false) return;\n      handleTouchEnd(event);\n      scope.dispatchEvent(_endEvent);\n      state = STATE.NONE;\n    }\n\n    function onContextMenu(event) {\n      if (scope.enabled === false) return;\n      event.preventDefault();\n    } //\n\n\n    scope.domElement.addEventListener('contextmenu', onContextMenu);\n    scope.domElement.addEventListener('pointerdown', onPointerDown);\n    scope.domElement.addEventListener('wheel', onMouseWheel, {\n      passive: false\n    });\n    scope.domElement.addEventListener('touchstart', onTouchStart, {\n      passive: false\n    });\n    scope.domElement.addEventListener('touchend', onTouchEnd);\n    scope.domElement.addEventListener('touchmove', onTouchMove, {\n      passive: false\n    }); // force an update at start\n\n    _this.update();\n\n    return _this;\n  }\n\n  return OrbitControls;\n}(EventDispatcher); // This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\n\nvar MapControls = /*#__PURE__*/function (_OrbitControls) {\n  _inherits(MapControls, _OrbitControls);\n\n  var _super2 = _createSuper(MapControls);\n\n  function MapControls(object, domElement) {\n    var _this2;\n\n    _classCallCheck(this, MapControls);\n\n    _this2 = _super2.call(this, object, domElement);\n    _this2.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n    _this2.mouseButtons.LEFT = MOUSE.PAN;\n    _this2.mouseButtons.RIGHT = MOUSE.ROTATE;\n    _this2.touches.ONE = TOUCH.PAN;\n    _this2.touches.TWO = TOUCH.DOLLY_ROTATE;\n    return _this2;\n  }\n\n  return MapControls;\n}(OrbitControls);\n\nexport { OrbitControls, MapControls };","map":{"version":3,"sources":["/Users/jeeyoonhyun/immersive-web/node_modules/three/examples/jsm/controls/OrbitControls.js"],"names":["EventDispatcher","MOUSE","Quaternion","Spherical","TOUCH","Vector2","Vector3","_changeEvent","type","_startEvent","_endEvent","OrbitControls","object","domElement","undefined","console","warn","document","error","enabled","target","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","ROTATE","MIDDLE","DOLLY","PAN","touches","ONE","TWO","DOLLY_PAN","target0","clone","position0","position","zoom0","zoom","_domElementKeyEvents","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","listenToKeyEvents","addEventListener","onKeyDown","saveState","scope","copy","reset","updateProjectionMatrix","dispatchEvent","update","state","STATE","NONE","offset","quat","setFromUnitVectors","up","quatInverse","invert","lastPosition","lastQuaternion","twoPI","sub","applyQuaternion","setFromVector3","rotateLeft","getAutoRotationAngle","sphericalDelta","min","max","isFinite","makeSafe","radius","scale","addScaledVector","panOffset","add","setFromSpherical","lookAt","multiplyScalar","set","zoomChanged","distanceToSquared","EPS","dot","quaternion","dispose","removeEventListener","onContextMenu","onPointerDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","ownerDocument","onPointerMove","onPointerUp","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","pow","angle","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","isPerspectiveCamera","targetDistance","length","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","dollyOut","dollyScale","dollyIn","handleMouseDownRotate","event","clientX","clientY","handleMouseDownDolly","handleMouseDownPan","handleMouseMoveRotate","subVectors","x","y","handleMouseMoveDolly","handleMouseMovePan","handleMouseUp","handleMouseWheel","handleKeyDown","needsUpdate","code","preventDefault","handleTouchStartRotate","pageX","pageY","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchStartDollyPan","handleTouchStartDollyRotate","handleTouchMoveRotate","handleTouchMovePan","handleTouchMoveDolly","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","handleTouchEnd","pointerType","onMouseDown","onMouseMove","onMouseUp","focus","window","mouseAction","button","ctrlKey","metaKey","shiftKey","DOLLY_ROTATE","passive","MapControls"],"mappings":";;;;AAAA,SACCA,eADD,EAECC,KAFD,EAGCC,UAHD,EAICC,SAJD,EAKCC,KALD,EAMCC,OAND,EAOCC,OAPD,QAQO,OARP,C,CAUA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,YAAY,GAAG;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAArB;AACA,IAAMC,WAAW,GAAG;AAAED,EAAAA,IAAI,EAAE;AAAR,CAApB;AACA,IAAME,SAAS,GAAG;AAAEF,EAAAA,IAAI,EAAE;AAAR,CAAlB;;IAEMG,a;;;;;AAEL,yBAAaC,MAAb,EAAqBC,UAArB,EAAkC;AAAA;;AAAA;;AAEjC;AAEA,QAAKA,UAAU,KAAKC,SAApB,EAAgCC,OAAO,CAACC,IAAR,CAAc,0EAAd;AAChC,QAAKH,UAAU,KAAKI,QAApB,EAA+BF,OAAO,CAACG,KAAR,CAAe,0HAAf;AAE/B,UAAKN,MAAL,GAAcA,MAAd;AACA,UAAKC,UAAL,GAAkBA,UAAlB,CARiC,CAUjC;;AACA,UAAKM,OAAL,GAAe,IAAf,CAXiC,CAajC;;AACA,UAAKC,MAAL,GAAc,IAAId,OAAJ,EAAd,CAdiC,CAgBjC;;AACA,UAAKe,WAAL,GAAmB,CAAnB;AACA,UAAKC,WAAL,GAAmBC,QAAnB,CAlBiC,CAoBjC;;AACA,UAAKC,OAAL,GAAe,CAAf;AACA,UAAKC,OAAL,GAAeF,QAAf,CAtBiC,CAwBjC;AACA;;AACA,UAAKG,aAAL,GAAqB,CAArB,CA1BiC,CA0BT;;AACxB,UAAKC,aAAL,GAAqBC,IAAI,CAACC,EAA1B,CA3BiC,CA2BH;AAE9B;AACA;;AACA,UAAKC,eAAL,GAAuB,CAAEP,QAAzB,CA/BiC,CA+BE;;AACnC,UAAKQ,eAAL,GAAuBR,QAAvB,CAhCiC,CAgCA;AAEjC;AACA;;AACA,UAAKS,aAAL,GAAqB,KAArB;AACA,UAAKC,aAAL,GAAqB,IAArB,CArCiC,CAuCjC;AACA;;AACA,UAAKC,UAAL,GAAkB,IAAlB;AACA,UAAKC,SAAL,GAAiB,GAAjB,CA1CiC,CA4CjC;;AACA,UAAKC,YAAL,GAAoB,IAApB;AACA,UAAKC,WAAL,GAAmB,GAAnB,CA9CiC,CAgDjC;;AACA,UAAKC,SAAL,GAAiB,IAAjB;AACA,UAAKC,QAAL,GAAgB,GAAhB;AACA,UAAKC,kBAAL,GAA0B,IAA1B,CAnDiC,CAmDD;;AAChC,UAAKC,WAAL,GAAmB,GAAnB,CApDiC,CAoDT;AAExB;AACA;;AACA,UAAKC,UAAL,GAAkB,KAAlB;AACA,UAAKC,eAAL,GAAuB,GAAvB,CAzDiC,CAyDL;AAE5B;;AACA,UAAKC,IAAL,GAAY;AAAEC,MAAAA,IAAI,EAAE,WAAR;AAAqBC,MAAAA,EAAE,EAAE,SAAzB;AAAoCC,MAAAA,KAAK,EAAE,YAA3C;AAAyDC,MAAAA,MAAM,EAAE;AAAjE,KAAZ,CA5DiC,CA8DjC;;AACA,UAAKC,YAAL,GAAoB;AAAEJ,MAAAA,IAAI,EAAE5C,KAAK,CAACiD,MAAd;AAAsBC,MAAAA,MAAM,EAAElD,KAAK,CAACmD,KAApC;AAA2CL,MAAAA,KAAK,EAAE9C,KAAK,CAACoD;AAAxD,KAApB,CA/DiC,CAiEjC;;AACA,UAAKC,OAAL,GAAe;AAAEC,MAAAA,GAAG,EAAEnD,KAAK,CAAC8C,MAAb;AAAqBM,MAAAA,GAAG,EAAEpD,KAAK,CAACqD;AAAhC,KAAf,CAlEiC,CAoEjC;;AACA,UAAKC,OAAL,GAAe,MAAKtC,MAAL,CAAYuC,KAAZ,EAAf;AACA,UAAKC,SAAL,GAAiB,MAAKhD,MAAL,CAAYiD,QAAZ,CAAqBF,KAArB,EAAjB;AACA,UAAKG,KAAL,GAAa,MAAKlD,MAAL,CAAYmD,IAAzB,CAvEiC,CAyEjC;;AACA,UAAKC,oBAAL,GAA4B,IAA5B,CA1EiC,CA4EjC;AACA;AACA;;AAEA,UAAKC,aAAL,GAAqB,YAAY;AAEhC,aAAOC,SAAS,CAACC,GAAjB;AAEA,KAJD;;AAMA,UAAKC,iBAAL,GAAyB,YAAY;AAEpC,aAAOF,SAAS,CAACG,KAAjB;AAEA,KAJD;;AAMA,UAAKC,iBAAL,GAAyB,UAAWzD,UAAX,EAAwB;AAEhDA,MAAAA,UAAU,CAAC0D,gBAAX,CAA6B,SAA7B,EAAwCC,SAAxC;AACA,WAAKR,oBAAL,GAA4BnD,UAA5B;AAEA,KALD;;AAOA,UAAK4D,SAAL,GAAiB,YAAY;AAE5BC,MAAAA,KAAK,CAAChB,OAAN,CAAciB,IAAd,CAAoBD,KAAK,CAACtD,MAA1B;AACAsD,MAAAA,KAAK,CAACd,SAAN,CAAgBe,IAAhB,CAAsBD,KAAK,CAAC9D,MAAN,CAAaiD,QAAnC;AACAa,MAAAA,KAAK,CAACZ,KAAN,GAAcY,KAAK,CAAC9D,MAAN,CAAamD,IAA3B;AAEA,KAND;;AAQA,UAAKa,KAAL,GAAa,YAAY;AAExBF,MAAAA,KAAK,CAACtD,MAAN,CAAauD,IAAb,CAAmBD,KAAK,CAAChB,OAAzB;AACAgB,MAAAA,KAAK,CAAC9D,MAAN,CAAaiD,QAAb,CAAsBc,IAAtB,CAA4BD,KAAK,CAACd,SAAlC;AACAc,MAAAA,KAAK,CAAC9D,MAAN,CAAamD,IAAb,GAAoBW,KAAK,CAACZ,KAA1B;AAEAY,MAAAA,KAAK,CAAC9D,MAAN,CAAaiE,sBAAb;AACAH,MAAAA,KAAK,CAACI,aAAN,CAAqBvE,YAArB;AAEAmE,MAAAA,KAAK,CAACK,MAAN;AAEAC,MAAAA,KAAK,GAAGC,KAAK,CAACC,IAAd;AAEA,KAbD,CA3GiC,CA0HjC;;;AACA,UAAKH,MAAL,GAAc,YAAY;AAEzB,UAAMI,MAAM,GAAG,IAAI7E,OAAJ,EAAf,CAFyB,CAIzB;;AACA,UAAM8E,IAAI,GAAG,IAAIlF,UAAJ,GAAiBmF,kBAAjB,CAAqCzE,MAAM,CAAC0E,EAA5C,EAAgD,IAAIhF,OAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAAhD,CAAb;AACA,UAAMiF,WAAW,GAAGH,IAAI,CAACzB,KAAL,GAAa6B,MAAb,EAApB;AAEA,UAAMC,YAAY,GAAG,IAAInF,OAAJ,EAArB;AACA,UAAMoF,cAAc,GAAG,IAAIxF,UAAJ,EAAvB;AAEA,UAAMyF,KAAK,GAAG,IAAI/D,IAAI,CAACC,EAAvB;AAEA,aAAO,SAASkD,MAAT,GAAkB;AAExB,YAAMlB,QAAQ,GAAGa,KAAK,CAAC9D,MAAN,CAAaiD,QAA9B;AAEAsB,QAAAA,MAAM,CAACR,IAAP,CAAad,QAAb,EAAwB+B,GAAxB,CAA6BlB,KAAK,CAACtD,MAAnC,EAJwB,CAMxB;;AACA+D,QAAAA,MAAM,CAACU,eAAP,CAAwBT,IAAxB,EAPwB,CASxB;;AACAlB,QAAAA,SAAS,CAAC4B,cAAV,CAA0BX,MAA1B;;AAEA,YAAKT,KAAK,CAAChC,UAAN,IAAoBsC,KAAK,KAAKC,KAAK,CAACC,IAAzC,EAAgD;AAE/Ca,UAAAA,UAAU,CAAEC,oBAAoB,EAAtB,CAAV;AAEA;;AAED,YAAKtB,KAAK,CAAC1C,aAAX,EAA2B;AAE1BkC,UAAAA,SAAS,CAACG,KAAV,IAAmB4B,cAAc,CAAC5B,KAAf,GAAuBK,KAAK,CAACzC,aAAhD;AACAiC,UAAAA,SAAS,CAACC,GAAV,IAAiB8B,cAAc,CAAC9B,GAAf,GAAqBO,KAAK,CAACzC,aAA5C;AAEA,SALD,MAKO;AAENiC,UAAAA,SAAS,CAACG,KAAV,IAAmB4B,cAAc,CAAC5B,KAAlC;AACAH,UAAAA,SAAS,CAACC,GAAV,IAAiB8B,cAAc,CAAC9B,GAAhC;AAEA,SA5BuB,CA8BxB;;;AAEA,YAAI+B,GAAG,GAAGxB,KAAK,CAAC5C,eAAhB;AACA,YAAIqE,GAAG,GAAGzB,KAAK,CAAC3C,eAAhB;;AAEA,YAAKqE,QAAQ,CAAEF,GAAF,CAAR,IAAmBE,QAAQ,CAAED,GAAF,CAAhC,EAA0C;AAEzC,cAAKD,GAAG,GAAG,CAAEtE,IAAI,CAACC,EAAlB,EAAuBqE,GAAG,IAAIP,KAAP,CAAvB,KAA0C,IAAKO,GAAG,GAAGtE,IAAI,CAACC,EAAhB,EAAqBqE,GAAG,IAAIP,KAAP;AAE/D,cAAKQ,GAAG,GAAG,CAAEvE,IAAI,CAACC,EAAlB,EAAuBsE,GAAG,IAAIR,KAAP,CAAvB,KAA0C,IAAKQ,GAAG,GAAGvE,IAAI,CAACC,EAAhB,EAAqBsE,GAAG,IAAIR,KAAP;;AAE/D,cAAKO,GAAG,IAAIC,GAAZ,EAAkB;AAEjBjC,YAAAA,SAAS,CAACG,KAAV,GAAkBzC,IAAI,CAACuE,GAAL,CAAUD,GAAV,EAAetE,IAAI,CAACsE,GAAL,CAAUC,GAAV,EAAejC,SAAS,CAACG,KAAzB,CAAf,CAAlB;AAEA,WAJD,MAIO;AAENH,YAAAA,SAAS,CAACG,KAAV,GAAoBH,SAAS,CAACG,KAAV,GAAkB,CAAE6B,GAAG,GAAGC,GAAR,IAAgB,CAApC,GACjBvE,IAAI,CAACuE,GAAL,CAAUD,GAAV,EAAehC,SAAS,CAACG,KAAzB,CADiB,GAEjBzC,IAAI,CAACsE,GAAL,CAAUC,GAAV,EAAejC,SAAS,CAACG,KAAzB,CAFD;AAIA;AAED,SArDuB,CAuDxB;;;AACAH,QAAAA,SAAS,CAACC,GAAV,GAAgBvC,IAAI,CAACuE,GAAL,CAAUzB,KAAK,CAAChD,aAAhB,EAA+BE,IAAI,CAACsE,GAAL,CAAUxB,KAAK,CAAC/C,aAAhB,EAA+BuC,SAAS,CAACC,GAAzC,CAA/B,CAAhB;AAEAD,QAAAA,SAAS,CAACmC,QAAV;AAGAnC,QAAAA,SAAS,CAACoC,MAAV,IAAoBC,KAApB,CA7DwB,CA+DxB;;AACArC,QAAAA,SAAS,CAACoC,MAAV,GAAmB1E,IAAI,CAACuE,GAAL,CAAUzB,KAAK,CAACrD,WAAhB,EAA6BO,IAAI,CAACsE,GAAL,CAAUxB,KAAK,CAACpD,WAAhB,EAA6B4C,SAAS,CAACoC,MAAvC,CAA7B,CAAnB,CAhEwB,CAkExB;;AAEA,YAAK5B,KAAK,CAAC1C,aAAN,KAAwB,IAA7B,EAAoC;AAEnC0C,UAAAA,KAAK,CAACtD,MAAN,CAAaoF,eAAb,CAA8BC,SAA9B,EAAyC/B,KAAK,CAACzC,aAA/C;AAEA,SAJD,MAIO;AAENyC,UAAAA,KAAK,CAACtD,MAAN,CAAasF,GAAb,CAAkBD,SAAlB;AAEA;;AAEDtB,QAAAA,MAAM,CAACwB,gBAAP,CAAyBzC,SAAzB,EA9EwB,CAgFxB;;AACAiB,QAAAA,MAAM,CAACU,eAAP,CAAwBN,WAAxB;AAEA1B,QAAAA,QAAQ,CAACc,IAAT,CAAeD,KAAK,CAACtD,MAArB,EAA8BsF,GAA9B,CAAmCvB,MAAnC;AAEAT,QAAAA,KAAK,CAAC9D,MAAN,CAAagG,MAAb,CAAqBlC,KAAK,CAACtD,MAA3B;;AAEA,YAAKsD,KAAK,CAAC1C,aAAN,KAAwB,IAA7B,EAAoC;AAEnCiE,UAAAA,cAAc,CAAC5B,KAAf,IAA0B,IAAIK,KAAK,CAACzC,aAApC;AACAgE,UAAAA,cAAc,CAAC9B,GAAf,IAAwB,IAAIO,KAAK,CAACzC,aAAlC;AAEAwE,UAAAA,SAAS,CAACI,cAAV,CAA0B,IAAInC,KAAK,CAACzC,aAApC;AAEA,SAPD,MAOO;AAENgE,UAAAA,cAAc,CAACa,GAAf,CAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B;AAEAL,UAAAA,SAAS,CAACK,GAAV,CAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB;AAEA;;AAEDP,QAAAA,KAAK,GAAG,CAAR,CAtGwB,CAwGxB;AACA;AACA;;AAEA,YAAKQ,WAAW,IACftB,YAAY,CAACuB,iBAAb,CAAgCtC,KAAK,CAAC9D,MAAN,CAAaiD,QAA7C,IAA0DoD,GADtD,IAEJ,KAAM,IAAIvB,cAAc,CAACwB,GAAf,CAAoBxC,KAAK,CAAC9D,MAAN,CAAauG,UAAjC,CAAV,IAA4DF,GAF7D,EAEmE;AAElEvC,UAAAA,KAAK,CAACI,aAAN,CAAqBvE,YAArB;AAEAkF,UAAAA,YAAY,CAACd,IAAb,CAAmBD,KAAK,CAAC9D,MAAN,CAAaiD,QAAhC;AACA6B,UAAAA,cAAc,CAACf,IAAf,CAAqBD,KAAK,CAAC9D,MAAN,CAAauG,UAAlC;AACAJ,UAAAA,WAAW,GAAG,KAAd;AAEA,iBAAO,IAAP;AAEA;;AAED,eAAO,KAAP;AAEA,OA5HD;AA8HA,KA3Ia,EAAd;;AA6IA,UAAKK,OAAL,GAAe,YAAY;AAE1B1C,MAAAA,KAAK,CAAC7D,UAAN,CAAiBwG,mBAAjB,CAAsC,aAAtC,EAAqDC,aAArD;AAEA5C,MAAAA,KAAK,CAAC7D,UAAN,CAAiBwG,mBAAjB,CAAsC,aAAtC,EAAqDE,aAArD;AACA7C,MAAAA,KAAK,CAAC7D,UAAN,CAAiBwG,mBAAjB,CAAsC,OAAtC,EAA+CG,YAA/C;AAEA9C,MAAAA,KAAK,CAAC7D,UAAN,CAAiBwG,mBAAjB,CAAsC,YAAtC,EAAoDI,YAApD;AACA/C,MAAAA,KAAK,CAAC7D,UAAN,CAAiBwG,mBAAjB,CAAsC,UAAtC,EAAkDK,UAAlD;AACAhD,MAAAA,KAAK,CAAC7D,UAAN,CAAiBwG,mBAAjB,CAAsC,WAAtC,EAAmDM,WAAnD;AAEAjD,MAAAA,KAAK,CAAC7D,UAAN,CAAiB+G,aAAjB,CAA+BP,mBAA/B,CAAoD,aAApD,EAAmEQ,aAAnE;AACAnD,MAAAA,KAAK,CAAC7D,UAAN,CAAiB+G,aAAjB,CAA+BP,mBAA/B,CAAoD,WAApD,EAAiES,WAAjE;;AAGA,UAAKpD,KAAK,CAACV,oBAAN,KAA+B,IAApC,EAA2C;AAE1CU,QAAAA,KAAK,CAACV,oBAAN,CAA2BqD,mBAA3B,CAAgD,SAAhD,EAA2D7C,SAA3D;AAEA,OAnByB,CAqB1B;;AAEA,KAvBD,CAxQiC,CAiSjC;AACA;AACA;;;AAEA,QAAME,KAAK,gCAAX;;AAEA,QAAMO,KAAK,GAAG;AACbC,MAAAA,IAAI,EAAE,CAAE,CADK;AAEbhC,MAAAA,MAAM,EAAE,CAFK;AAGbE,MAAAA,KAAK,EAAE,CAHM;AAIbC,MAAAA,GAAG,EAAE,CAJQ;AAKb0E,MAAAA,YAAY,EAAE,CALD;AAMbC,MAAAA,SAAS,EAAE,CANE;AAObC,MAAAA,eAAe,EAAE,CAPJ;AAQbC,MAAAA,kBAAkB,EAAE;AARP,KAAd;AAWA,QAAIlD,KAAK,GAAGC,KAAK,CAACC,IAAlB;AAEA,QAAM+B,GAAG,GAAG,QAAZ,CApTiC,CAsTjC;;AACA,QAAM/C,SAAS,GAAG,IAAI/D,SAAJ,EAAlB;AACA,QAAM8F,cAAc,GAAG,IAAI9F,SAAJ,EAAvB;AAEA,QAAIoG,KAAK,GAAG,CAAZ;AACA,QAAME,SAAS,GAAG,IAAInG,OAAJ,EAAlB;AACA,QAAIyG,WAAW,GAAG,KAAlB;AAEA,QAAMoB,WAAW,GAAG,IAAI9H,OAAJ,EAApB;AACA,QAAM+H,SAAS,GAAG,IAAI/H,OAAJ,EAAlB;AACA,QAAMgI,WAAW,GAAG,IAAIhI,OAAJ,EAApB;AAEA,QAAMiI,QAAQ,GAAG,IAAIjI,OAAJ,EAAjB;AACA,QAAMkI,MAAM,GAAG,IAAIlI,OAAJ,EAAf;AACA,QAAMmI,QAAQ,GAAG,IAAInI,OAAJ,EAAjB;AAEA,QAAMoI,UAAU,GAAG,IAAIpI,OAAJ,EAAnB;AACA,QAAMqI,QAAQ,GAAG,IAAIrI,OAAJ,EAAjB;AACA,QAAMsI,UAAU,GAAG,IAAItI,OAAJ,EAAnB;;AAEA,aAAS2F,oBAAT,GAAgC;AAE/B,aAAO,IAAIpE,IAAI,CAACC,EAAT,GAAc,EAAd,GAAmB,EAAnB,GAAwB6C,KAAK,CAAC/B,eAArC;AAEA;;AAED,aAASiG,YAAT,GAAwB;AAEvB,aAAOhH,IAAI,CAACiH,GAAL,CAAU,IAAV,EAAgBnE,KAAK,CAACvC,SAAtB,CAAP;AAEA;;AAED,aAAS4D,UAAT,CAAqB+C,KAArB,EAA6B;AAE5B7C,MAAAA,cAAc,CAAC5B,KAAf,IAAwByE,KAAxB;AAEA;;AAED,aAASC,QAAT,CAAmBD,KAAnB,EAA2B;AAE1B7C,MAAAA,cAAc,CAAC9B,GAAf,IAAsB2E,KAAtB;AAEA;;AAED,QAAME,OAAO,GAAG,YAAY;AAE3B,UAAMC,CAAC,GAAG,IAAI3I,OAAJ,EAAV;AAEA,aAAO,SAAS0I,OAAT,CAAkBE,QAAlB,EAA4BC,YAA5B,EAA2C;AAEjDF,QAAAA,CAAC,CAACG,mBAAF,CAAuBD,YAAvB,EAAqC,CAArC,EAFiD,CAEP;;AAC1CF,QAAAA,CAAC,CAACpC,cAAF,CAAkB,CAAEqC,QAApB;AAEAzC,QAAAA,SAAS,CAACC,GAAV,CAAeuC,CAAf;AAEA,OAPD;AASA,KAbe,EAAhB;;AAeA,QAAMI,KAAK,GAAG,YAAY;AAEzB,UAAMJ,CAAC,GAAG,IAAI3I,OAAJ,EAAV;AAEA,aAAO,SAAS+I,KAAT,CAAgBH,QAAhB,EAA0BC,YAA1B,EAAyC;AAE/C,YAAKzE,KAAK,CAAClC,kBAAN,KAA6B,IAAlC,EAAyC;AAExCyG,UAAAA,CAAC,CAACG,mBAAF,CAAuBD,YAAvB,EAAqC,CAArC;AAEA,SAJD,MAIO;AAENF,UAAAA,CAAC,CAACG,mBAAF,CAAuBD,YAAvB,EAAqC,CAArC;AACAF,UAAAA,CAAC,CAACK,YAAF,CAAgB5E,KAAK,CAAC9D,MAAN,CAAa0E,EAA7B,EAAiC2D,CAAjC;AAEA;;AAEDA,QAAAA,CAAC,CAACpC,cAAF,CAAkBqC,QAAlB;AAEAzC,QAAAA,SAAS,CAACC,GAAV,CAAeuC,CAAf;AAEA,OAjBD;AAmBA,KAvBa,EAAd,CAjXiC,CA0YjC;;;AACA,QAAMM,GAAG,GAAG,YAAY;AAEvB,UAAMpE,MAAM,GAAG,IAAI7E,OAAJ,EAAf;AAEA,aAAO,SAASiJ,GAAT,CAAcC,MAAd,EAAsBC,MAAtB,EAA+B;AAErC,YAAMC,OAAO,GAAGhF,KAAK,CAAC7D,UAAtB;;AAEA,YAAK6D,KAAK,CAAC9D,MAAN,CAAa+I,mBAAlB,EAAwC;AAEvC;AACA,cAAM9F,QAAQ,GAAGa,KAAK,CAAC9D,MAAN,CAAaiD,QAA9B;AACAsB,UAAAA,MAAM,CAACR,IAAP,CAAad,QAAb,EAAwB+B,GAAxB,CAA6BlB,KAAK,CAACtD,MAAnC;AACA,cAAIwI,cAAc,GAAGzE,MAAM,CAAC0E,MAAP,EAArB,CALuC,CAOvC;;AACAD,UAAAA,cAAc,IAAIhI,IAAI,CAACkI,GAAL,CAAYpF,KAAK,CAAC9D,MAAN,CAAamJ,GAAb,GAAmB,CAArB,GAA2BnI,IAAI,CAACC,EAAhC,GAAqC,KAA/C,CAAlB,CARuC,CAUvC;;AACAmH,UAAAA,OAAO,CAAE,IAAIQ,MAAJ,GAAaI,cAAb,GAA8BF,OAAO,CAACM,YAAxC,EAAsDtF,KAAK,CAAC9D,MAAN,CAAaqJ,MAAnE,CAAP;AACAZ,UAAAA,KAAK,CAAE,IAAII,MAAJ,GAAaG,cAAb,GAA8BF,OAAO,CAACM,YAAxC,EAAsDtF,KAAK,CAAC9D,MAAN,CAAaqJ,MAAnE,CAAL;AAEA,SAdD,MAcO,IAAKvF,KAAK,CAAC9D,MAAN,CAAasJ,oBAAlB,EAAyC;AAE/C;AACAlB,UAAAA,OAAO,CAAEQ,MAAM,IAAK9E,KAAK,CAAC9D,MAAN,CAAauJ,KAAb,GAAqBzF,KAAK,CAAC9D,MAAN,CAAawJ,IAAvC,CAAN,GAAsD1F,KAAK,CAAC9D,MAAN,CAAamD,IAAnE,GAA0E2F,OAAO,CAACW,WAApF,EAAiG3F,KAAK,CAAC9D,MAAN,CAAaqJ,MAA9G,CAAP;AACAZ,UAAAA,KAAK,CAAEI,MAAM,IAAK/E,KAAK,CAAC9D,MAAN,CAAa0J,GAAb,GAAmB5F,KAAK,CAAC9D,MAAN,CAAa2J,MAArC,CAAN,GAAsD7F,KAAK,CAAC9D,MAAN,CAAamD,IAAnE,GAA0E2F,OAAO,CAACM,YAApF,EAAkGtF,KAAK,CAAC9D,MAAN,CAAaqJ,MAA/G,CAAL;AAEA,SANM,MAMA;AAEN;AACAlJ,UAAAA,OAAO,CAACC,IAAR,CAAc,8EAAd;AACA0D,UAAAA,KAAK,CAACpC,SAAN,GAAkB,KAAlB;AAEA;AAED,OAhCD;AAkCA,KAtCW,EAAZ;;AAwCA,aAASkI,QAAT,CAAmBC,UAAnB,EAAgC;AAE/B,UAAK/F,KAAK,CAAC9D,MAAN,CAAa+I,mBAAlB,EAAwC;AAEvCpD,QAAAA,KAAK,IAAIkE,UAAT;AAEA,OAJD,MAIO,IAAK/F,KAAK,CAAC9D,MAAN,CAAasJ,oBAAlB,EAAyC;AAE/CxF,QAAAA,KAAK,CAAC9D,MAAN,CAAamD,IAAb,GAAoBnC,IAAI,CAACuE,GAAL,CAAUzB,KAAK,CAAClD,OAAhB,EAAyBI,IAAI,CAACsE,GAAL,CAAUxB,KAAK,CAACjD,OAAhB,EAAyBiD,KAAK,CAAC9D,MAAN,CAAamD,IAAb,GAAoB0G,UAA7C,CAAzB,CAApB;AACA/F,QAAAA,KAAK,CAAC9D,MAAN,CAAaiE,sBAAb;AACAkC,QAAAA,WAAW,GAAG,IAAd;AAEA,OANM,MAMA;AAENhG,QAAAA,OAAO,CAACC,IAAR,CAAc,qFAAd;AACA0D,QAAAA,KAAK,CAACxC,UAAN,GAAmB,KAAnB;AAEA;AAED;;AAED,aAASwI,OAAT,CAAkBD,UAAlB,EAA+B;AAE9B,UAAK/F,KAAK,CAAC9D,MAAN,CAAa+I,mBAAlB,EAAwC;AAEvCpD,QAAAA,KAAK,IAAIkE,UAAT;AAEA,OAJD,MAIO,IAAK/F,KAAK,CAAC9D,MAAN,CAAasJ,oBAAlB,EAAyC;AAE/CxF,QAAAA,KAAK,CAAC9D,MAAN,CAAamD,IAAb,GAAoBnC,IAAI,CAACuE,GAAL,CAAUzB,KAAK,CAAClD,OAAhB,EAAyBI,IAAI,CAACsE,GAAL,CAAUxB,KAAK,CAACjD,OAAhB,EAAyBiD,KAAK,CAAC9D,MAAN,CAAamD,IAAb,GAAoB0G,UAA7C,CAAzB,CAApB;AACA/F,QAAAA,KAAK,CAAC9D,MAAN,CAAaiE,sBAAb;AACAkC,QAAAA,WAAW,GAAG,IAAd;AAEA,OANM,MAMA;AAENhG,QAAAA,OAAO,CAACC,IAAR,CAAc,qFAAd;AACA0D,QAAAA,KAAK,CAACxC,UAAN,GAAmB,KAAnB;AAEA;AAED,KA3dgC,CA6djC;AACA;AACA;;;AAEA,aAASyI,qBAAT,CAAgCC,KAAhC,EAAwC;AAEvCzC,MAAAA,WAAW,CAACrB,GAAZ,CAAiB8D,KAAK,CAACC,OAAvB,EAAgCD,KAAK,CAACE,OAAtC;AAEA;;AAED,aAASC,oBAAT,CAA+BH,KAA/B,EAAuC;AAEtCnC,MAAAA,UAAU,CAAC3B,GAAX,CAAgB8D,KAAK,CAACC,OAAtB,EAA+BD,KAAK,CAACE,OAArC;AAEA;;AAED,aAASE,kBAAT,CAA6BJ,KAA7B,EAAqC;AAEpCtC,MAAAA,QAAQ,CAACxB,GAAT,CAAc8D,KAAK,CAACC,OAApB,EAA6BD,KAAK,CAACE,OAAnC;AAEA;;AAED,aAASG,qBAAT,CAAgCL,KAAhC,EAAwC;AAEvCxC,MAAAA,SAAS,CAACtB,GAAV,CAAe8D,KAAK,CAACC,OAArB,EAA8BD,KAAK,CAACE,OAApC;AAEAzC,MAAAA,WAAW,CAAC6C,UAAZ,CAAwB9C,SAAxB,EAAmCD,WAAnC,EAAiDtB,cAAjD,CAAiEnC,KAAK,CAACrC,WAAvE;AAEA,UAAMqH,OAAO,GAAGhF,KAAK,CAAC7D,UAAtB;AAEAkF,MAAAA,UAAU,CAAE,IAAInE,IAAI,CAACC,EAAT,GAAcwG,WAAW,CAAC8C,CAA1B,GAA8BzB,OAAO,CAACM,YAAxC,CAAV,CARuC,CAQ2B;;AAElEjB,MAAAA,QAAQ,CAAE,IAAInH,IAAI,CAACC,EAAT,GAAcwG,WAAW,CAAC+C,CAA1B,GAA8B1B,OAAO,CAACM,YAAxC,CAAR;AAEA7B,MAAAA,WAAW,CAACxD,IAAZ,CAAkByD,SAAlB;AAEA1D,MAAAA,KAAK,CAACK,MAAN;AAEA;;AAED,aAASsG,oBAAT,CAA+BT,KAA/B,EAAuC;AAEtClC,MAAAA,QAAQ,CAAC5B,GAAT,CAAc8D,KAAK,CAACC,OAApB,EAA6BD,KAAK,CAACE,OAAnC;AAEAnC,MAAAA,UAAU,CAACuC,UAAX,CAAuBxC,QAAvB,EAAiCD,UAAjC;;AAEA,UAAKE,UAAU,CAACyC,CAAX,GAAe,CAApB,EAAwB;AAEvBZ,QAAAA,QAAQ,CAAE5B,YAAY,EAAd,CAAR;AAEA,OAJD,MAIO,IAAKD,UAAU,CAACyC,CAAX,GAAe,CAApB,EAAwB;AAE9BV,QAAAA,OAAO,CAAE9B,YAAY,EAAd,CAAP;AAEA;;AAEDH,MAAAA,UAAU,CAAC9D,IAAX,CAAiB+D,QAAjB;AAEAhE,MAAAA,KAAK,CAACK,MAAN;AAEA;;AAED,aAASuG,kBAAT,CAA6BV,KAA7B,EAAqC;AAEpCrC,MAAAA,MAAM,CAACzB,GAAP,CAAY8D,KAAK,CAACC,OAAlB,EAA2BD,KAAK,CAACE,OAAjC;AAEAtC,MAAAA,QAAQ,CAAC0C,UAAT,CAAqB3C,MAArB,EAA6BD,QAA7B,EAAwCzB,cAAxC,CAAwDnC,KAAK,CAACnC,QAA9D;AAEAgH,MAAAA,GAAG,CAAEf,QAAQ,CAAC2C,CAAX,EAAc3C,QAAQ,CAAC4C,CAAvB,CAAH;AAEA9C,MAAAA,QAAQ,CAAC3D,IAAT,CAAe4D,MAAf;AAEA7D,MAAAA,KAAK,CAACK,MAAN;AAEA;;AAED,aAASwG,aAAT;AAAwB;AAAY,KAEnC;AAEA;;AAED,aAASC,gBAAT,CAA2BZ,KAA3B,EAAmC;AAElC,UAAKA,KAAK,CAACnB,MAAN,GAAe,CAApB,EAAwB;AAEvBiB,QAAAA,OAAO,CAAE9B,YAAY,EAAd,CAAP;AAEA,OAJD,MAIO,IAAKgC,KAAK,CAACnB,MAAN,GAAe,CAApB,EAAwB;AAE9Be,QAAAA,QAAQ,CAAE5B,YAAY,EAAd,CAAR;AAEA;;AAEDlE,MAAAA,KAAK,CAACK,MAAN;AAEA;;AAED,aAAS0G,aAAT,CAAwBb,KAAxB,EAAgC;AAE/B,UAAIc,WAAW,GAAG,KAAlB;;AAEA,cAASd,KAAK,CAACe,IAAf;AAEC,aAAKjH,KAAK,CAAC9B,IAAN,CAAWE,EAAhB;AACCyG,UAAAA,GAAG,CAAE,CAAF,EAAK7E,KAAK,CAACjC,WAAX,CAAH;AACAiJ,UAAAA,WAAW,GAAG,IAAd;AACA;;AAED,aAAKhH,KAAK,CAAC9B,IAAN,CAAWI,MAAhB;AACCuG,UAAAA,GAAG,CAAE,CAAF,EAAK,CAAE7E,KAAK,CAACjC,WAAb,CAAH;AACAiJ,UAAAA,WAAW,GAAG,IAAd;AACA;;AAED,aAAKhH,KAAK,CAAC9B,IAAN,CAAWC,IAAhB;AACC0G,UAAAA,GAAG,CAAE7E,KAAK,CAACjC,WAAR,EAAqB,CAArB,CAAH;AACAiJ,UAAAA,WAAW,GAAG,IAAd;AACA;;AAED,aAAKhH,KAAK,CAAC9B,IAAN,CAAWG,KAAhB;AACCwG,UAAAA,GAAG,CAAE,CAAE7E,KAAK,CAACjC,WAAV,EAAuB,CAAvB,CAAH;AACAiJ,UAAAA,WAAW,GAAG,IAAd;AACA;AApBF;;AAwBA,UAAKA,WAAL,EAAmB;AAElB;AACAd,QAAAA,KAAK,CAACgB,cAAN;AAEAlH,QAAAA,KAAK,CAACK,MAAN;AAEA;AAGD;;AAED,aAAS8G,sBAAT,CAAiCjB,KAAjC,EAAyC;AAExC,UAAKA,KAAK,CAACtH,OAAN,CAAcuG,MAAd,IAAwB,CAA7B,EAAiC;AAEhC1B,QAAAA,WAAW,CAACrB,GAAZ,CAAiB8D,KAAK,CAACtH,OAAN,CAAe,CAAf,EAAmBwI,KAApC,EAA2ClB,KAAK,CAACtH,OAAN,CAAe,CAAf,EAAmByI,KAA9D;AAEA,OAJD,MAIO;AAEN,YAAMZ,CAAC,GAAG,OAAQP,KAAK,CAACtH,OAAN,CAAe,CAAf,EAAmBwI,KAAnB,GAA2BlB,KAAK,CAACtH,OAAN,CAAe,CAAf,EAAmBwI,KAAtD,CAAV;AACA,YAAMV,CAAC,GAAG,OAAQR,KAAK,CAACtH,OAAN,CAAe,CAAf,EAAmByI,KAAnB,GAA2BnB,KAAK,CAACtH,OAAN,CAAe,CAAf,EAAmByI,KAAtD,CAAV;AAEA5D,QAAAA,WAAW,CAACrB,GAAZ,CAAiBqE,CAAjB,EAAoBC,CAApB;AAEA;AAED;;AAED,aAASY,mBAAT,CAA8BpB,KAA9B,EAAsC;AAErC,UAAKA,KAAK,CAACtH,OAAN,CAAcuG,MAAd,IAAwB,CAA7B,EAAiC;AAEhCvB,QAAAA,QAAQ,CAACxB,GAAT,CAAc8D,KAAK,CAACtH,OAAN,CAAe,CAAf,EAAmBwI,KAAjC,EAAwClB,KAAK,CAACtH,OAAN,CAAe,CAAf,EAAmByI,KAA3D;AAEA,OAJD,MAIO;AAEN,YAAMZ,CAAC,GAAG,OAAQP,KAAK,CAACtH,OAAN,CAAe,CAAf,EAAmBwI,KAAnB,GAA2BlB,KAAK,CAACtH,OAAN,CAAe,CAAf,EAAmBwI,KAAtD,CAAV;AACA,YAAMV,CAAC,GAAG,OAAQR,KAAK,CAACtH,OAAN,CAAe,CAAf,EAAmByI,KAAnB,GAA2BnB,KAAK,CAACtH,OAAN,CAAe,CAAf,EAAmByI,KAAtD,CAAV;AAEAzD,QAAAA,QAAQ,CAACxB,GAAT,CAAcqE,CAAd,EAAiBC,CAAjB;AAEA;AAED;;AAED,aAASa,qBAAT,CAAgCrB,KAAhC,EAAwC;AAEvC,UAAMsB,EAAE,GAAGtB,KAAK,CAACtH,OAAN,CAAe,CAAf,EAAmBwI,KAAnB,GAA2BlB,KAAK,CAACtH,OAAN,CAAe,CAAf,EAAmBwI,KAAzD;AACA,UAAMK,EAAE,GAAGvB,KAAK,CAACtH,OAAN,CAAe,CAAf,EAAmByI,KAAnB,GAA2BnB,KAAK,CAACtH,OAAN,CAAe,CAAf,EAAmByI,KAAzD;AAEA,UAAM7C,QAAQ,GAAGtH,IAAI,CAACwK,IAAL,CAAWF,EAAE,GAAGA,EAAL,GAAUC,EAAE,GAAGA,EAA1B,CAAjB;AAEA1D,MAAAA,UAAU,CAAC3B,GAAX,CAAgB,CAAhB,EAAmBoC,QAAnB;AAEA;;AAED,aAASmD,wBAAT,CAAmCzB,KAAnC,EAA2C;AAE1C,UAAKlG,KAAK,CAACxC,UAAX,EAAwB+J,qBAAqB,CAAErB,KAAF,CAArB;AAExB,UAAKlG,KAAK,CAACpC,SAAX,EAAuB0J,mBAAmB,CAAEpB,KAAF,CAAnB;AAEvB;;AAED,aAAS0B,2BAAT,CAAsC1B,KAAtC,EAA8C;AAE7C,UAAKlG,KAAK,CAACxC,UAAX,EAAwB+J,qBAAqB,CAAErB,KAAF,CAArB;AAExB,UAAKlG,KAAK,CAACtC,YAAX,EAA0ByJ,sBAAsB,CAAEjB,KAAF,CAAtB;AAE1B;;AAED,aAAS2B,qBAAT,CAAgC3B,KAAhC,EAAwC;AAEvC,UAAKA,KAAK,CAACtH,OAAN,CAAcuG,MAAd,IAAwB,CAA7B,EAAiC;AAEhCzB,QAAAA,SAAS,CAACtB,GAAV,CAAe8D,KAAK,CAACtH,OAAN,CAAe,CAAf,EAAmBwI,KAAlC,EAAyClB,KAAK,CAACtH,OAAN,CAAe,CAAf,EAAmByI,KAA5D;AAEA,OAJD,MAIO;AAEN,YAAMZ,CAAC,GAAG,OAAQP,KAAK,CAACtH,OAAN,CAAe,CAAf,EAAmBwI,KAAnB,GAA2BlB,KAAK,CAACtH,OAAN,CAAe,CAAf,EAAmBwI,KAAtD,CAAV;AACA,YAAMV,CAAC,GAAG,OAAQR,KAAK,CAACtH,OAAN,CAAe,CAAf,EAAmByI,KAAnB,GAA2BnB,KAAK,CAACtH,OAAN,CAAe,CAAf,EAAmByI,KAAtD,CAAV;AAEA3D,QAAAA,SAAS,CAACtB,GAAV,CAAeqE,CAAf,EAAkBC,CAAlB;AAEA;;AAED/C,MAAAA,WAAW,CAAC6C,UAAZ,CAAwB9C,SAAxB,EAAmCD,WAAnC,EAAiDtB,cAAjD,CAAiEnC,KAAK,CAACrC,WAAvE;AAEA,UAAMqH,OAAO,GAAGhF,KAAK,CAAC7D,UAAtB;AAEAkF,MAAAA,UAAU,CAAE,IAAInE,IAAI,CAACC,EAAT,GAAcwG,WAAW,CAAC8C,CAA1B,GAA8BzB,OAAO,CAACM,YAAxC,CAAV,CAnBuC,CAmB2B;;AAElEjB,MAAAA,QAAQ,CAAE,IAAInH,IAAI,CAACC,EAAT,GAAcwG,WAAW,CAAC+C,CAA1B,GAA8B1B,OAAO,CAACM,YAAxC,CAAR;AAEA7B,MAAAA,WAAW,CAACxD,IAAZ,CAAkByD,SAAlB;AAEA;;AAED,aAASoE,kBAAT,CAA6B5B,KAA7B,EAAqC;AAEpC,UAAKA,KAAK,CAACtH,OAAN,CAAcuG,MAAd,IAAwB,CAA7B,EAAiC;AAEhCtB,QAAAA,MAAM,CAACzB,GAAP,CAAY8D,KAAK,CAACtH,OAAN,CAAe,CAAf,EAAmBwI,KAA/B,EAAsClB,KAAK,CAACtH,OAAN,CAAe,CAAf,EAAmByI,KAAzD;AAEA,OAJD,MAIO;AAEN,YAAMZ,CAAC,GAAG,OAAQP,KAAK,CAACtH,OAAN,CAAe,CAAf,EAAmBwI,KAAnB,GAA2BlB,KAAK,CAACtH,OAAN,CAAe,CAAf,EAAmBwI,KAAtD,CAAV;AACA,YAAMV,CAAC,GAAG,OAAQR,KAAK,CAACtH,OAAN,CAAe,CAAf,EAAmByI,KAAnB,GAA2BnB,KAAK,CAACtH,OAAN,CAAe,CAAf,EAAmByI,KAAtD,CAAV;AAEAxD,QAAAA,MAAM,CAACzB,GAAP,CAAYqE,CAAZ,EAAeC,CAAf;AAEA;;AAED5C,MAAAA,QAAQ,CAAC0C,UAAT,CAAqB3C,MAArB,EAA6BD,QAA7B,EAAwCzB,cAAxC,CAAwDnC,KAAK,CAACnC,QAA9D;AAEAgH,MAAAA,GAAG,CAAEf,QAAQ,CAAC2C,CAAX,EAAc3C,QAAQ,CAAC4C,CAAvB,CAAH;AAEA9C,MAAAA,QAAQ,CAAC3D,IAAT,CAAe4D,MAAf;AAEA;;AAED,aAASkE,oBAAT,CAA+B7B,KAA/B,EAAuC;AAEtC,UAAMsB,EAAE,GAAGtB,KAAK,CAACtH,OAAN,CAAe,CAAf,EAAmBwI,KAAnB,GAA2BlB,KAAK,CAACtH,OAAN,CAAe,CAAf,EAAmBwI,KAAzD;AACA,UAAMK,EAAE,GAAGvB,KAAK,CAACtH,OAAN,CAAe,CAAf,EAAmByI,KAAnB,GAA2BnB,KAAK,CAACtH,OAAN,CAAe,CAAf,EAAmByI,KAAzD;AAEA,UAAM7C,QAAQ,GAAGtH,IAAI,CAACwK,IAAL,CAAWF,EAAE,GAAGA,EAAL,GAAUC,EAAE,GAAGA,EAA1B,CAAjB;AAEAzD,MAAAA,QAAQ,CAAC5B,GAAT,CAAc,CAAd,EAAiBoC,QAAjB;AAEAP,MAAAA,UAAU,CAAC7B,GAAX,CAAgB,CAAhB,EAAmBlF,IAAI,CAACiH,GAAL,CAAUH,QAAQ,CAAC0C,CAAT,GAAa3C,UAAU,CAAC2C,CAAlC,EAAqC1G,KAAK,CAACvC,SAA3C,CAAnB;AAEAqI,MAAAA,QAAQ,CAAE7B,UAAU,CAACyC,CAAb,CAAR;AAEA3C,MAAAA,UAAU,CAAC9D,IAAX,CAAiB+D,QAAjB;AAEA;;AAED,aAASgE,uBAAT,CAAkC9B,KAAlC,EAA0C;AAEzC,UAAKlG,KAAK,CAACxC,UAAX,EAAwBuK,oBAAoB,CAAE7B,KAAF,CAApB;AAExB,UAAKlG,KAAK,CAACpC,SAAX,EAAuBkK,kBAAkB,CAAE5B,KAAF,CAAlB;AAEvB;;AAED,aAAS+B,0BAAT,CAAqC/B,KAArC,EAA6C;AAE5C,UAAKlG,KAAK,CAACxC,UAAX,EAAwBuK,oBAAoB,CAAE7B,KAAF,CAApB;AAExB,UAAKlG,KAAK,CAACtC,YAAX,EAA0BmK,qBAAqB,CAAE3B,KAAF,CAArB;AAE1B;;AAED,aAASgC,cAAT;AAAyB;AAAY,KAEpC;AAEA,KA3vBgC,CA6vBjC;AACA;AACA;;;AAEA,aAASrF,aAAT,CAAwBqD,KAAxB,EAAgC;AAE/B,UAAKlG,KAAK,CAACvD,OAAN,KAAkB,KAAvB,EAA+B;;AAE/B,cAASyJ,KAAK,CAACiC,WAAf;AAEC,aAAK,OAAL;AACA,aAAK,KAAL;AACCC,UAAAA,WAAW,CAAElC,KAAF,CAAX;AACA;AAED;AAPD;AAWA;;AAED,aAAS/C,aAAT,CAAwB+C,KAAxB,EAAgC;AAE/B,UAAKlG,KAAK,CAACvD,OAAN,KAAkB,KAAvB,EAA+B;;AAE/B,cAASyJ,KAAK,CAACiC,WAAf;AAEC,aAAK,OAAL;AACA,aAAK,KAAL;AACCE,UAAAA,WAAW,CAAEnC,KAAF,CAAX;AACA;AAED;AAPD;AAWA;;AAED,aAAS9C,WAAT,CAAsB8C,KAAtB,EAA8B;AAE7B,cAASA,KAAK,CAACiC,WAAf;AAEC,aAAK,OAAL;AACA,aAAK,KAAL;AACCG,UAAAA,SAAS,CAAEpC,KAAF,CAAT;AACA;AAED;AAPD;AAWA;;AAED,aAASkC,WAAT,CAAsBlC,KAAtB,EAA8B;AAE7B;AACAA,MAAAA,KAAK,CAACgB,cAAN,GAH6B,CAK7B;AACA;;AAEAlH,MAAAA,KAAK,CAAC7D,UAAN,CAAiBoM,KAAjB,GAAyBvI,KAAK,CAAC7D,UAAN,CAAiBoM,KAAjB,EAAzB,GAAoDC,MAAM,CAACD,KAAP,EAApD;AAEA,UAAIE,WAAJ;;AAEA,cAASvC,KAAK,CAACwC,MAAf;AAEC,aAAK,CAAL;AAECD,UAAAA,WAAW,GAAGzI,KAAK,CAACzB,YAAN,CAAmBJ,IAAjC;AACA;;AAED,aAAK,CAAL;AAECsK,UAAAA,WAAW,GAAGzI,KAAK,CAACzB,YAAN,CAAmBE,MAAjC;AACA;;AAED,aAAK,CAAL;AAECgK,UAAAA,WAAW,GAAGzI,KAAK,CAACzB,YAAN,CAAmBF,KAAjC;AACA;;AAED;AAECoK,UAAAA,WAAW,GAAG,CAAE,CAAhB;AAnBF;;AAuBA,cAASA,WAAT;AAEC,aAAKlN,KAAK,CAACmD,KAAX;AAEC,cAAKsB,KAAK,CAACxC,UAAN,KAAqB,KAA1B,EAAkC;AAElC6I,UAAAA,oBAAoB,CAAEH,KAAF,CAApB;AAEA5F,UAAAA,KAAK,GAAGC,KAAK,CAAC7B,KAAd;AAEA;;AAED,aAAKnD,KAAK,CAACiD,MAAX;AAEC,cAAK0H,KAAK,CAACyC,OAAN,IAAiBzC,KAAK,CAAC0C,OAAvB,IAAkC1C,KAAK,CAAC2C,QAA7C,EAAwD;AAEvD,gBAAK7I,KAAK,CAACpC,SAAN,KAAoB,KAAzB,EAAiC;AAEjC0I,YAAAA,kBAAkB,CAAEJ,KAAF,CAAlB;AAEA5F,YAAAA,KAAK,GAAGC,KAAK,CAAC5B,GAAd;AAEA,WARD,MAQO;AAEN,gBAAKqB,KAAK,CAACtC,YAAN,KAAuB,KAA5B,EAAoC;AAEpCuI,YAAAA,qBAAqB,CAAEC,KAAF,CAArB;AAEA5F,YAAAA,KAAK,GAAGC,KAAK,CAAC/B,MAAd;AAEA;;AAED;;AAED,aAAKjD,KAAK,CAACoD,GAAX;AAEC,cAAKuH,KAAK,CAACyC,OAAN,IAAiBzC,KAAK,CAAC0C,OAAvB,IAAkC1C,KAAK,CAAC2C,QAA7C,EAAwD;AAEvD,gBAAK7I,KAAK,CAACtC,YAAN,KAAuB,KAA5B,EAAoC;AAEpCuI,YAAAA,qBAAqB,CAAEC,KAAF,CAArB;AAEA5F,YAAAA,KAAK,GAAGC,KAAK,CAAC/B,MAAd;AAEA,WARD,MAQO;AAEN,gBAAKwB,KAAK,CAACpC,SAAN,KAAoB,KAAzB,EAAiC;AAEjC0I,YAAAA,kBAAkB,CAAEJ,KAAF,CAAlB;AAEA5F,YAAAA,KAAK,GAAGC,KAAK,CAAC5B,GAAd;AAEA;;AAED;;AAED;AAEC2B,UAAAA,KAAK,GAAGC,KAAK,CAACC,IAAd;AA1DF;;AA8DA,UAAKF,KAAK,KAAKC,KAAK,CAACC,IAArB,EAA4B;AAE3BR,QAAAA,KAAK,CAAC7D,UAAN,CAAiB+G,aAAjB,CAA+BrD,gBAA/B,CAAiD,aAAjD,EAAgEsD,aAAhE;AACAnD,QAAAA,KAAK,CAAC7D,UAAN,CAAiB+G,aAAjB,CAA+BrD,gBAA/B,CAAiD,WAAjD,EAA8DuD,WAA9D;AAEApD,QAAAA,KAAK,CAACI,aAAN,CAAqBrE,WAArB;AAEA;AAED;;AAED,aAASsM,WAAT,CAAsBnC,KAAtB,EAA8B;AAE7B,UAAKlG,KAAK,CAACvD,OAAN,KAAkB,KAAvB,EAA+B;AAE/ByJ,MAAAA,KAAK,CAACgB,cAAN;;AAEA,cAAS5G,KAAT;AAEC,aAAKC,KAAK,CAAC/B,MAAX;AAEC,cAAKwB,KAAK,CAACtC,YAAN,KAAuB,KAA5B,EAAoC;AAEpC6I,UAAAA,qBAAqB,CAAEL,KAAF,CAArB;AAEA;;AAED,aAAK3F,KAAK,CAAC7B,KAAX;AAEC,cAAKsB,KAAK,CAACxC,UAAN,KAAqB,KAA1B,EAAkC;AAElCmJ,UAAAA,oBAAoB,CAAET,KAAF,CAApB;AAEA;;AAED,aAAK3F,KAAK,CAAC5B,GAAX;AAEC,cAAKqB,KAAK,CAACpC,SAAN,KAAoB,KAAzB,EAAiC;AAEjCgJ,UAAAA,kBAAkB,CAAEV,KAAF,CAAlB;AAEA;AAxBF;AA4BA;;AAED,aAASoC,SAAT,CAAoBpC,KAApB,EAA4B;AAE3BlG,MAAAA,KAAK,CAAC7D,UAAN,CAAiB+G,aAAjB,CAA+BP,mBAA/B,CAAoD,aAApD,EAAmEQ,aAAnE;AACAnD,MAAAA,KAAK,CAAC7D,UAAN,CAAiB+G,aAAjB,CAA+BP,mBAA/B,CAAoD,WAApD,EAAiES,WAAjE;AAEA,UAAKpD,KAAK,CAACvD,OAAN,KAAkB,KAAvB,EAA+B;AAE/BoK,MAAAA,aAAa,CAAEX,KAAF,CAAb;AAEAlG,MAAAA,KAAK,CAACI,aAAN,CAAqBpE,SAArB;AAEAsE,MAAAA,KAAK,GAAGC,KAAK,CAACC,IAAd;AAEA;;AAED,aAASsC,YAAT,CAAuBoD,KAAvB,EAA+B;AAE9B,UAAKlG,KAAK,CAACvD,OAAN,KAAkB,KAAlB,IAA2BuD,KAAK,CAACxC,UAAN,KAAqB,KAAhD,IAA2D8C,KAAK,KAAKC,KAAK,CAACC,IAAhB,IAAwBF,KAAK,KAAKC,KAAK,CAAC/B,MAAxG,EAAmH;AAEnH0H,MAAAA,KAAK,CAACgB,cAAN;AAEAlH,MAAAA,KAAK,CAACI,aAAN,CAAqBrE,WAArB;AAEA+K,MAAAA,gBAAgB,CAAEZ,KAAF,CAAhB;AAEAlG,MAAAA,KAAK,CAACI,aAAN,CAAqBpE,SAArB;AAEA;;AAED,aAAS8D,SAAT,CAAoBoG,KAApB,EAA4B;AAE3B,UAAKlG,KAAK,CAACvD,OAAN,KAAkB,KAAlB,IAA2BuD,KAAK,CAACpC,SAAN,KAAoB,KAApD,EAA4D;AAE5DmJ,MAAAA,aAAa,CAAEb,KAAF,CAAb;AAEA;;AAED,aAASnD,YAAT,CAAuBmD,KAAvB,EAA+B;AAE9B,UAAKlG,KAAK,CAACvD,OAAN,KAAkB,KAAvB,EAA+B;AAE/ByJ,MAAAA,KAAK,CAACgB,cAAN,GAJ8B,CAIN;;AAExB,cAAShB,KAAK,CAACtH,OAAN,CAAcuG,MAAvB;AAEC,aAAK,CAAL;AAEC,kBAASnF,KAAK,CAACpB,OAAN,CAAcC,GAAvB;AAEC,iBAAKnD,KAAK,CAAC8C,MAAX;AAEC,kBAAKwB,KAAK,CAACtC,YAAN,KAAuB,KAA5B,EAAoC;AAEpCyJ,cAAAA,sBAAsB,CAAEjB,KAAF,CAAtB;AAEA5F,cAAAA,KAAK,GAAGC,KAAK,CAAC8C,YAAd;AAEA;;AAED,iBAAK3H,KAAK,CAACiD,GAAX;AAEC,kBAAKqB,KAAK,CAACpC,SAAN,KAAoB,KAAzB,EAAiC;AAEjC0J,cAAAA,mBAAmB,CAAEpB,KAAF,CAAnB;AAEA5F,cAAAA,KAAK,GAAGC,KAAK,CAAC+C,SAAd;AAEA;;AAED;AAEChD,cAAAA,KAAK,GAAGC,KAAK,CAACC,IAAd;AAxBF;;AA4BA;;AAED,aAAK,CAAL;AAEC,kBAASR,KAAK,CAACpB,OAAN,CAAcE,GAAvB;AAEC,iBAAKpD,KAAK,CAACqD,SAAX;AAEC,kBAAKiB,KAAK,CAACxC,UAAN,KAAqB,KAArB,IAA8BwC,KAAK,CAACpC,SAAN,KAAoB,KAAvD,EAA+D;AAE/D+J,cAAAA,wBAAwB,CAAEzB,KAAF,CAAxB;AAEA5F,cAAAA,KAAK,GAAGC,KAAK,CAACgD,eAAd;AAEA;;AAED,iBAAK7H,KAAK,CAACoN,YAAX;AAEC,kBAAK9I,KAAK,CAACxC,UAAN,KAAqB,KAArB,IAA8BwC,KAAK,CAACtC,YAAN,KAAuB,KAA1D,EAAkE;AAElEkK,cAAAA,2BAA2B,CAAE1B,KAAF,CAA3B;AAEA5F,cAAAA,KAAK,GAAGC,KAAK,CAACiD,kBAAd;AAEA;;AAED;AAEClD,cAAAA,KAAK,GAAGC,KAAK,CAACC,IAAd;AAxBF;;AA4BA;;AAED;AAECF,UAAAA,KAAK,GAAGC,KAAK,CAACC,IAAd;AApEF;;AAwEA,UAAKF,KAAK,KAAKC,KAAK,CAACC,IAArB,EAA4B;AAE3BR,QAAAA,KAAK,CAACI,aAAN,CAAqBrE,WAArB;AAEA;AAED;;AAED,aAASkH,WAAT,CAAsBiD,KAAtB,EAA8B;AAE7B,UAAKlG,KAAK,CAACvD,OAAN,KAAkB,KAAvB,EAA+B;AAE/ByJ,MAAAA,KAAK,CAACgB,cAAN,GAJ6B,CAIL;;AAExB,cAAS5G,KAAT;AAEC,aAAKC,KAAK,CAAC8C,YAAX;AAEC,cAAKrD,KAAK,CAACtC,YAAN,KAAuB,KAA5B,EAAoC;AAEpCmK,UAAAA,qBAAqB,CAAE3B,KAAF,CAArB;AAEAlG,UAAAA,KAAK,CAACK,MAAN;AAEA;;AAED,aAAKE,KAAK,CAAC+C,SAAX;AAEC,cAAKtD,KAAK,CAACpC,SAAN,KAAoB,KAAzB,EAAiC;AAEjCkK,UAAAA,kBAAkB,CAAE5B,KAAF,CAAlB;AAEAlG,UAAAA,KAAK,CAACK,MAAN;AAEA;;AAED,aAAKE,KAAK,CAACgD,eAAX;AAEC,cAAKvD,KAAK,CAACxC,UAAN,KAAqB,KAArB,IAA8BwC,KAAK,CAACpC,SAAN,KAAoB,KAAvD,EAA+D;AAE/DoK,UAAAA,uBAAuB,CAAE9B,KAAF,CAAvB;AAEAlG,UAAAA,KAAK,CAACK,MAAN;AAEA;;AAED,aAAKE,KAAK,CAACiD,kBAAX;AAEC,cAAKxD,KAAK,CAACxC,UAAN,KAAqB,KAArB,IAA8BwC,KAAK,CAACtC,YAAN,KAAuB,KAA1D,EAAkE;AAElEuK,UAAAA,0BAA0B,CAAE/B,KAAF,CAA1B;AAEAlG,UAAAA,KAAK,CAACK,MAAN;AAEA;;AAED;AAECC,UAAAA,KAAK,GAAGC,KAAK,CAACC,IAAd;AA5CF;AAgDA;;AAED,aAASwC,UAAT,CAAqBkD,KAArB,EAA6B;AAE5B,UAAKlG,KAAK,CAACvD,OAAN,KAAkB,KAAvB,EAA+B;AAE/ByL,MAAAA,cAAc,CAAEhC,KAAF,CAAd;AAEAlG,MAAAA,KAAK,CAACI,aAAN,CAAqBpE,SAArB;AAEAsE,MAAAA,KAAK,GAAGC,KAAK,CAACC,IAAd;AAEA;;AAED,aAASoC,aAAT,CAAwBsD,KAAxB,EAAgC;AAE/B,UAAKlG,KAAK,CAACvD,OAAN,KAAkB,KAAvB,EAA+B;AAE/ByJ,MAAAA,KAAK,CAACgB,cAAN;AAEA,KAvoCgC,CAyoCjC;;;AAEAlH,IAAAA,KAAK,CAAC7D,UAAN,CAAiB0D,gBAAjB,CAAmC,aAAnC,EAAkD+C,aAAlD;AAEA5C,IAAAA,KAAK,CAAC7D,UAAN,CAAiB0D,gBAAjB,CAAmC,aAAnC,EAAkDgD,aAAlD;AACA7C,IAAAA,KAAK,CAAC7D,UAAN,CAAiB0D,gBAAjB,CAAmC,OAAnC,EAA4CiD,YAA5C,EAA0D;AAAEiG,MAAAA,OAAO,EAAE;AAAX,KAA1D;AAEA/I,IAAAA,KAAK,CAAC7D,UAAN,CAAiB0D,gBAAjB,CAAmC,YAAnC,EAAiDkD,YAAjD,EAA+D;AAAEgG,MAAAA,OAAO,EAAE;AAAX,KAA/D;AACA/I,IAAAA,KAAK,CAAC7D,UAAN,CAAiB0D,gBAAjB,CAAmC,UAAnC,EAA+CmD,UAA/C;AACAhD,IAAAA,KAAK,CAAC7D,UAAN,CAAiB0D,gBAAjB,CAAmC,WAAnC,EAAgDoD,WAAhD,EAA6D;AAAE8F,MAAAA,OAAO,EAAE;AAAX,KAA7D,EAlpCiC,CAopCjC;;AAEA,UAAK1I,MAAL;;AAtpCiC;AAwpCjC;;;EA1pC0B/E,e,GA+pC5B;AACA;AACA;AACA;AACA;AACA;AACA;;;IAEM0N,W;;;;;AAEL,uBAAa9M,MAAb,EAAqBC,UAArB,EAAkC;AAAA;;AAAA;;AAEjC,gCAAOD,MAAP,EAAeC,UAAf;AAEA,WAAK2B,kBAAL,GAA0B,KAA1B,CAJiC,CAIA;;AAEjC,WAAKS,YAAL,CAAkBJ,IAAlB,GAAyB5C,KAAK,CAACoD,GAA/B;AACA,WAAKJ,YAAL,CAAkBF,KAAlB,GAA0B9C,KAAK,CAACiD,MAAhC;AAEA,WAAKI,OAAL,CAAaC,GAAb,GAAmBnD,KAAK,CAACiD,GAAzB;AACA,WAAKC,OAAL,CAAaE,GAAb,GAAmBpD,KAAK,CAACoN,YAAzB;AAViC;AAYjC;;;EAdwB7M,a;;AAkB1B,SAASA,aAAT,EAAwB+M,WAAxB","sourcesContent":["import {\n\tEventDispatcher,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3\n} from 'three';\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: 'change' };\nconst _startEvent = { type: 'start' };\nconst _endEvent = { type: 'end' };\n\nclass OrbitControls extends EventDispatcher {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper();\n\n\t\tif ( domElement === undefined ) console.warn( 'THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.' );\n\t\tif ( domElement === document ) console.error( 'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.' );\n\n\t\tthis.object = object;\n\t\tthis.domElement = domElement;\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\tthis.target = new Vector3();\n\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.05;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.panSpeed = 1.0;\n\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t\t// Touch fingers\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t\t// for reset\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t//\n\t\t// public methods\n\t\t//\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn spherical.phi;\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn spherical.theta;\n\n\t\t};\n\n\t\tthis.listenToKeyEvents = function ( domElement ) {\n\n\t\t\tdomElement.addEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = domElement;\n\n\t\t};\n\n\t\tthis.saveState = function () {\n\n\t\t\tscope.target0.copy( scope.target );\n\t\t\tscope.position0.copy( scope.object.position );\n\t\t\tscope.zoom0 = scope.object.zoom;\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tscope.target.copy( scope.target0 );\n\t\t\tscope.object.position.copy( scope.position0 );\n\t\t\tscope.object.zoom = scope.zoom0;\n\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\tscope.update();\n\n\t\t\tstate = STATE.NONE;\n\n\t\t};\n\n\t\t// this method is exposed, but perhaps it would be better if we can make it private...\n\t\tthis.update = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\t// so camera.up is the orbit axis\n\t\t\tconst quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\t\tconst quatInverse = quat.clone().invert();\n\n\t\t\tconst lastPosition = new Vector3();\n\t\t\tconst lastQuaternion = new Quaternion();\n\n\t\t\tconst twoPI = 2 * Math.PI;\n\n\t\t\treturn function update() {\n\n\t\t\t\tconst position = scope.object.position;\n\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t\t// angle from z-axis around y-axis\n\t\t\t\tspherical.setFromVector3( offset );\n\n\t\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t\t}\n\n\t\t\t\t// restrict theta to be between desired limits\n\n\t\t\t\tlet min = scope.minAzimuthAngle;\n\t\t\t\tlet max = scope.maxAzimuthAngle;\n\n\t\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\n\n\t\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\n\n\t\t\t\t\tif ( min <= max ) {\n\n\t\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\t\t\tMath.max( min, spherical.theta ) :\n\t\t\t\t\t\t\tMath.min( max, spherical.theta );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\t\tspherical.makeSafe();\n\n\n\t\t\t\tspherical.radius *= scale;\n\n\t\t\t\t// restrict radius to be between desired limits\n\t\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t\t// move target to panned location\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t\t}\n\n\t\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t\tscale = 1;\n\n\t\t\t\t// update condition is:\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\t\tzoomChanged = false;\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t};\n\n\t\t}();\n\n\t\tthis.dispose = function () {\n\n\t\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu );\n\n\t\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown );\n\t\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel );\n\n\t\t\tscope.domElement.removeEventListener( 'touchstart', onTouchStart );\n\t\t\tscope.domElement.removeEventListener( 'touchend', onTouchEnd );\n\t\t\tscope.domElement.removeEventListener( 'touchmove', onTouchMove );\n\n\t\t\tscope.domElement.ownerDocument.removeEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.ownerDocument.removeEventListener( 'pointerup', onPointerUp );\n\n\n\t\t\tif ( scope._domElementKeyEvents !== null ) {\n\n\t\t\t\tscope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\n\t\t\t}\n\n\t\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t\t};\n\n\t\t//\n\t\t// internals\n\t\t//\n\n\t\tconst scope = this;\n\n\t\tconst STATE = {\n\t\t\tNONE: - 1,\n\t\t\tROTATE: 0,\n\t\t\tDOLLY: 1,\n\t\t\tPAN: 2,\n\t\t\tTOUCH_ROTATE: 3,\n\t\t\tTOUCH_PAN: 4,\n\t\t\tTOUCH_DOLLY_PAN: 5,\n\t\t\tTOUCH_DOLLY_ROTATE: 6\n\t\t};\n\n\t\tlet state = STATE.NONE;\n\n\t\tconst EPS = 0.000001;\n\n\t\t// current position in spherical coordinates\n\t\tconst spherical = new Spherical();\n\t\tconst sphericalDelta = new Spherical();\n\n\t\tlet scale = 1;\n\t\tconst panOffset = new Vector3();\n\t\tlet zoomChanged = false;\n\n\t\tconst rotateStart = new Vector2();\n\t\tconst rotateEnd = new Vector2();\n\t\tconst rotateDelta = new Vector2();\n\n\t\tconst panStart = new Vector2();\n\t\tconst panEnd = new Vector2();\n\t\tconst panDelta = new Vector2();\n\n\t\tconst dollyStart = new Vector2();\n\t\tconst dollyEnd = new Vector2();\n\t\tconst dollyDelta = new Vector2();\n\n\t\tfunction getAutoRotationAngle() {\n\n\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t\t}\n\n\t\tfunction getZoomScale() {\n\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t\t}\n\n\t\tfunction rotateLeft( angle ) {\n\n\t\t\tsphericalDelta.theta -= angle;\n\n\t\t}\n\n\t\tfunction rotateUp( angle ) {\n\n\t\t\tsphericalDelta.phi -= angle;\n\n\t\t}\n\n\t\tconst panLeft = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\t\tv.multiplyScalar( - distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\tconst panUp = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t\t}\n\n\t\t\t\tv.multiplyScalar( distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// deltaX and deltaY are in pixels; right and down are positive\n\t\tconst pan = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\t\tconst element = scope.domElement;\n\n\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t// perspective\n\t\t\t\t\tconst position = scope.object.position;\n\t\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\t\tlet targetDistance = offset.length();\n\n\t\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t// orthographic\n\t\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\t\tscope.enablePan = false;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}();\n\n\t\tfunction dollyOut( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale /= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction dollyIn( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale *= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\t\t// event callbacks - update the object state\n\t\t//\n\n\t\tfunction handleMouseDownRotate( event ) {\n\n\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownDolly( event ) {\n\n\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownPan( event ) {\n\n\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseMoveRotate( event ) {\n\n\t\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMoveDolly( event ) {\n\n\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMovePan( event ) {\n\n\t\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseUp( /*event*/ ) {\n\n\t\t\t// no-op\n\n\t\t}\n\n\t\tfunction handleMouseWheel( event ) {\n\n\t\t\tif ( event.deltaY < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleKeyDown( event ) {\n\n\t\t\tlet needsUpdate = false;\n\n\t\t\tswitch ( event.code ) {\n\n\t\t\t\tcase scope.keys.UP:\n\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.LEFT:\n\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.RIGHT:\n\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tscope.update();\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tfunction handleTouchStartRotate( event ) {\n\n\t\t\tif ( event.touches.length == 1 ) {\n\n\t\t\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\t\trotateStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartPan( event ) {\n\n\t\t\tif ( event.touches.length == 1 ) {\n\n\t\t\t\tpanStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\t\tpanStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartDolly( event ) {\n\n\t\t\tconst dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\tconst dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyPan( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly( event );\n\n\t\t\tif ( scope.enablePan ) handleTouchStartPan( event );\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyRotate( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly( event );\n\n\t\t\tif ( scope.enableRotate ) handleTouchStartRotate( event );\n\n\t\t}\n\n\t\tfunction handleTouchMoveRotate( event ) {\n\n\t\t\tif ( event.touches.length == 1 ) {\n\n\t\t\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\t\trotateEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMovePan( event ) {\n\n\t\t\tif ( event.touches.length == 1 ) {\n\n\t\t\t\tpanEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\t\tpanEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDolly( event ) {\n\n\t\t\tconst dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\tconst dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\t\tdollyOut( dollyDelta.y );\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t\t}\n\n\t\tfunction handleTouchEnd( /*event*/ ) {\n\n\t\t\t// no-op\n\n\t\t}\n\n\t\t//\n\t\t// event handlers - FSM: listen for events and reset state\n\t\t//\n\n\t\tfunction onPointerDown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tswitch ( event.pointerType ) {\n\n\t\t\t\tcase 'mouse':\n\t\t\t\tcase 'pen':\n\t\t\t\t\tonMouseDown( event );\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO touch\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tswitch ( event.pointerType ) {\n\n\t\t\t\tcase 'mouse':\n\t\t\t\tcase 'pen':\n\t\t\t\t\tonMouseMove( event );\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO touch\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerUp( event ) {\n\n\t\t\tswitch ( event.pointerType ) {\n\n\t\t\t\tcase 'mouse':\n\t\t\t\tcase 'pen':\n\t\t\t\t\tonMouseUp( event );\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO touch\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseDown( event ) {\n\n\t\t\t// Prevent the browser from scrolling.\n\t\t\tevent.preventDefault();\n\n\t\t\t// Manually set the focus since calling preventDefault above\n\t\t\t// prevents the browser from setting it automatically.\n\n\t\t\tscope.domElement.focus ? scope.domElement.focus() : window.focus();\n\n\t\t\tlet mouseAction;\n\n\t\t\tswitch ( event.button ) {\n\n\t\t\t\tcase 0:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tmouseAction = - 1;\n\n\t\t\t}\n\n\t\t\tswitch ( mouseAction ) {\n\n\t\t\t\tcase MOUSE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.ROTATE:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.PAN:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.domElement.ownerDocument.addEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.ownerDocument.addEventListener( 'pointerup', onPointerUp );\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseUp( event ) {\n\n\t\t\tscope.domElement.ownerDocument.removeEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.ownerDocument.removeEventListener( 'pointerup', onPointerUp );\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\thandleMouseUp( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onMouseWheel( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || ( state !== STATE.NONE && state !== STATE.ROTATE ) ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\thandleMouseWheel( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t}\n\n\t\tfunction onKeyDown( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enablePan === false ) return;\n\n\t\t\thandleKeyDown( event );\n\n\t\t}\n\n\t\tfunction onTouchStart( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault(); // prevent scrolling\n\n\t\t\tswitch ( event.touches.length ) {\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartRotate( event );\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartPan( event );\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyPan( event );\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyRotate( event );\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault(); // prevent scrolling\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchEnd( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\thandleTouchEnd( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onContextMenu( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t}\n\n\t\t//\n\n\t\tscope.domElement.addEventListener( 'contextmenu', onContextMenu );\n\n\t\tscope.domElement.addEventListener( 'pointerdown', onPointerDown );\n\t\tscope.domElement.addEventListener( 'wheel', onMouseWheel, { passive: false } );\n\n\t\tscope.domElement.addEventListener( 'touchstart', onTouchStart, { passive: false } );\n\t\tscope.domElement.addEventListener( 'touchend', onTouchEnd );\n\t\tscope.domElement.addEventListener( 'touchmove', onTouchMove, { passive: false } );\n\n\t\t// force an update at start\n\n\t\tthis.update();\n\n\t}\n\n}\n\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nclass MapControls extends OrbitControls {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper( object, domElement );\n\n\t\tthis.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n\t\tthis.mouseButtons.LEFT = MOUSE.PAN;\n\t\tthis.mouseButtons.RIGHT = MOUSE.ROTATE;\n\n\t\tthis.touches.ONE = TOUCH.PAN;\n\t\tthis.touches.TWO = TOUCH.DOLLY_ROTATE;\n\n\t}\n\n}\n\nexport { OrbitControls, MapControls };\n"]},"metadata":{},"sourceType":"module"}