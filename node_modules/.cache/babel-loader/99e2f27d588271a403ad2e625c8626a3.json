{"ast":null,"code":"\"use strict\";\n\nvar utils = module.exports = {};\n/**\n * Loops through the collection and calls the callback for each element. if the callback returns truthy, the loop is broken and returns the same value.\n * @public\n * @param {*} collection The collection to loop through. Needs to have a length property set and have indices set from 0 to length - 1.\n * @param {function} callback The callback to be called for each element. The element will be given as a parameter to the callback. If this callback returns truthy, the loop is broken and the same value is returned.\n * @returns {*} The value that a callback has returned (if truthy). Otherwise nothing.\n */\n\nutils.forEach = function (collection, callback) {\n  for (var i = 0; i < collection.length; i++) {\n    var result = callback(collection[i]);\n\n    if (result) {\n      return result;\n    }\n  }\n};","map":{"version":3,"sources":["/Users/jeeyoonhyun/immersive-web/node_modules/element-resize-detector/src/collection-utils.js"],"names":["utils","module","exports","forEach","collection","callback","i","length","result"],"mappings":"AAAA;;AAEA,IAAIA,KAAK,GAAGC,MAAM,CAACC,OAAP,GAAiB,EAA7B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAF,KAAK,CAACG,OAAN,GAAgB,UAASC,UAAT,EAAqBC,QAArB,EAA+B;AAC3C,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,UAAU,CAACG,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACvC,QAAIE,MAAM,GAAGH,QAAQ,CAACD,UAAU,CAACE,CAAD,CAAX,CAArB;;AACA,QAAGE,MAAH,EAAW;AACP,aAAOA,MAAP;AACH;AACJ;AACJ,CAPD","sourcesContent":["\"use strict\";\n\nvar utils = module.exports = {};\n\n/**\n * Loops through the collection and calls the callback for each element. if the callback returns truthy, the loop is broken and returns the same value.\n * @public\n * @param {*} collection The collection to loop through. Needs to have a length property set and have indices set from 0 to length - 1.\n * @param {function} callback The callback to be called for each element. The element will be given as a parameter to the callback. If this callback returns truthy, the loop is broken and the same value is returned.\n * @returns {*} The value that a callback has returned (if truthy). Otherwise nothing.\n */\nutils.forEach = function(collection, callback) {\n    for(var i = 0; i < collection.length; i++) {\n        var result = callback(collection[i]);\n        if(result) {\n            return result;\n        }\n    }\n};\n"]},"metadata":{},"sourceType":"script"}