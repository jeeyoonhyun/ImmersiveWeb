[{"/Users/jeeyoonhyun/immersive-web/src/index.js":"1","/Users/jeeyoonhyun/immersive-web/src/reportWebVitals.js":"2","/Users/jeeyoonhyun/immersive-web/src/App.js":"3","/Users/jeeyoonhyun/immersive-web/src/components/Gallery.js":"4","/Users/jeeyoonhyun/immersive-web/src/components/Thumbnail.js":"5","/Users/jeeyoonhyun/immersive-web/src/Pages/Home.js":"6","/Users/jeeyoonhyun/immersive-web/src/Pages/About.js":"7","/Users/jeeyoonhyun/immersive-web/src/Pages/Page.js":"8","/Users/jeeyoonhyun/immersive-web/src/Pages/Error.js":"9","/Users/jeeyoonhyun/immersive-web/src/Pages/day1.js":"10","/Users/jeeyoonhyun/immersive-web/src/components/Header.js":"11","/Users/jeeyoonhyun/immersive-web/src/day1/script.js":"12","/Users/jeeyoonhyun/immersive-web/src/Pages/Day1.js":"13","/Users/jeeyoonhyun/immersive-web/src/Pages/Day2.js":"14","/Users/jeeyoonhyun/immersive-web/src/Pages/Day3.js":"15"},{"size":559,"mtime":1624446954199,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1624415389650,"results":"18","hashOfConfig":"17"},{"size":819,"mtime":1624482840269,"results":"19","hashOfConfig":"17"},{"size":992,"mtime":1624486518981,"results":"20","hashOfConfig":"17"},{"size":1057,"mtime":1624483638352,"results":"21","hashOfConfig":"17"},{"size":245,"mtime":1624483405694,"results":"22","hashOfConfig":"17"},{"size":648,"mtime":1624469805972,"results":"23","hashOfConfig":"17"},{"size":343,"mtime":1624469836007,"results":"24","hashOfConfig":"17"},{"size":355,"mtime":1624469817304,"results":"25","hashOfConfig":"17"},{"size":7252,"mtime":1624482713628,"results":"26","hashOfConfig":"17"},{"size":828,"mtime":1624472575363,"results":"27","hashOfConfig":"17"},{"size":5561,"mtime":1624415819784,"results":"28","hashOfConfig":"17"},{"size":7252,"mtime":1624482745222,"results":"29","hashOfConfig":"17"},{"size":5960,"mtime":1624482727044,"results":"30","hashOfConfig":"17"},{"size":7280,"mtime":1624483322379,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"l5xcpu",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"35"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"35"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"35"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"35"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"35"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jeeyoonhyun/immersive-web/src/index.js",["69","70"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["71","72"],"/Users/jeeyoonhyun/immersive-web/src/reportWebVitals.js",[],"/Users/jeeyoonhyun/immersive-web/src/App.js",["73","74"],"/Users/jeeyoonhyun/immersive-web/src/components/Gallery.js",["75"],"/Users/jeeyoonhyun/immersive-web/src/components/Thumbnail.js",["76"],"/Users/jeeyoonhyun/immersive-web/src/Pages/Home.js",["77"],"/Users/jeeyoonhyun/immersive-web/src/Pages/About.js",["78"],"import React, { Component } from 'react';\nimport Header from '../components/Header.js'\n\n// The number of columns change by resizing the window\nclass About extends React.Component {\n    render() {\n        return (\n            <div>\n                <section>\n                    <h2>About this project</h2>\n                    <p>\n                    <strong>50 days of Immersive Web</strong> is a personal project making 50 web experiments for 50 days\n                    </p>\n                    <h2>Follow me on</h2>\n                </section>\n                \n                <Header />\n            </div>\n        )\n    }\n}\n\nexport default About;","/Users/jeeyoonhyun/immersive-web/src/Pages/Page.js",["79"],"import React, { Component } from 'react';\nimport Header from '../components/Header.js'\n\n// The number of columns change by resizing the window\nclass Page extends React.Component {\n    render() {\n        return (\n            <div>\n                <p>Page</p>\n                <Header />\n            </div>\n        )\n    }\n}\n\nexport default Page;","/Users/jeeyoonhyun/immersive-web/src/Pages/Error.js",["80"],"import React, { Component } from 'react';\nimport Header from '../components/Header.js'\n\n// The number of columns change by resizing the window\nclass Error extends React.Component {\n    render() {\n        return (\n            <div>\n                <p>Page not found</p>\n                <Header />\n            </div>\n        )\n    }\n}\n\nexport default Error;","/Users/jeeyoonhyun/immersive-web/src/Pages/day1.js",["81","82","83","84","85","86"],"/Users/jeeyoonhyun/immersive-web/src/components/Header.js",[],"/Users/jeeyoonhyun/immersive-web/src/day1/script.js",["87","88","89","90"],"/Users/jeeyoonhyun/immersive-web/src/Pages/Day1.js",["91","92","93","94","95","96"],"import React, { Component } from 'react';\nimport { Link } from 'react-router';\nimport '../day1/style.css'\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js'\nimport * as THREE from \"three\";\n\n// The number of columns change by resizing the window\nclass Day1 extends React.Component {\n    componentDidMount() {\n        // three.js\n        /**\n * Base\n */\n        // Canvas\n        const canvas = document.querySelector('canvas.webgl')\n\n        // Scene\n        const scene = new THREE.Scene()\n\n        //light\n        const lightColor = \"#ffffff\";\n        const intensity = 1;\n        const light = new THREE.DirectionalLight(lightColor, intensity);\n        light.position.set(-1, 2, 4);\n        scene.add(light);\n\n\n        /**\n         * Object\n         */\n\n        // load font\n        const loader = new THREE.FontLoader();\n        const font = loader.load(\n            // resource URL\n            './assets/day1/anthony.json',\n\n            // onLoad callback\n            function (font) {\n                const color = 0x0;\n\n                const mat = new THREE.MeshPhysicalMaterial({\n                    color: 0xffffff,\n                    emissive: 0x000000,\n                    transparent: true,\n                    opacity: 1,\n                    side: THREE.DoubleSide,\n                    roughness: 0,\n                    metalness: 0,\n                    reflectivity: 0,\n                    clearcoat: 1,\n                    clearcoatRoughness: 1,\n                });\n                // const mat = new THREE.MeshToonMaterial({\n                //     color: 0xf,\n                // })\n\n                const message = \"50 days of \\nimmersive web\";\n\n                // const shapes = font.generateShapes( message, 100 );\n                // const geometry = new THREE.ShapeGeometry( shapes );\n\n                const geometry = new THREE.TextGeometry(message, {\n                    font: font,\n                    size: 72,\n                    height: 8,\n                    curveSegments: 1,\n                    bevelEnabled: true,\n                    bevelThickness: 0.15,\n                    bevelSize: 0.3,\n                    bevelSegments: 5,\n                });\n\n                geometry.computeBoundingBox();\n\n                const xMid = - 0.5 * (geometry.boundingBox.max.x - geometry.boundingBox.min.x);\n\n                geometry.translate(xMid, 0, 0);\n\n                // make shape ( N.B. edge view not visible )\n\n                const text = new THREE.Mesh(geometry, mat);\n                text.position.y = 100;\n                text.position.z = -80;\n                text.rotation.x = -1.3;\n                scene.add(text);\n            },\n\n            // onProgress callback\n            function (xhr) {\n                console.log((xhr.loaded / xhr.total * 100) + '% loaded');\n            },\n\n            // onError callback\n            function (err) {\n                console.log('An error happened');\n            }\n        );\n\n        // water\n        scene.background = new THREE.Color(0xffffff);\n        scene.fog = new THREE.FogExp2(0xffffff, 0.0009);\n\n        const worldWidth = 128, worldDepth = 128;\n        let waterGeometry = new THREE.PlaneGeometry(20000, 20000, worldWidth - 1, worldDepth - 1);\n        waterGeometry.rotateX(- Math.PI / 2);\n        const position = waterGeometry.attributes.position;\n        for (let i = 0; i < position.count; i++) {\n\n            const y = 35 * Math.sin(i / 2);\n            position.setY(i, y);\n\n        }\n\n        // const texture = new THREE.TextureLoader().load('https://live.staticflickr.com/4066/4344198258_e647f9487b_b.jpg');\n        const texture = new THREE.TextureLoader().load('./assets/day1/texture.jpeg');\n        texture.wrapS = texture.wrapT = THREE.RepeatWrapping;\n        texture.repeat.set(5, 5);\n\n        let waterMaterial = new THREE.MeshBasicMaterial({ color: 0x555555, map: texture });\n        let water = new THREE.Mesh(waterGeometry, waterMaterial);\n        scene.add(water);\n\n        /**\n         * Sizes\n         */\n        const sizes = {\n            width: window.innerWidth,\n            height: window.innerHeight\n        }\n\n        // Listen to the resize event\n        window.addEventListener('resize', () => {\n            //update size for resize\n            sizes.width = window.innerWidth\n            sizes.height = window.innerHeight\n\n            //update camera\n            camera.aspect = sizes.width / sizes.height\n            camera.updateProjectionMatrix();\n\n            //update renderer\n            renderer.setSize(sizes.width, sizes.height) // see https://threejs.org/docs/index.html?q=updat#manual/en/introduction/How-to-update-things\n            renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2)); // change pixel ratio to reduce jaggies & limit it into 2(more than 2 becomes extremely slow)\n        })\n\n        window.addEventListener('dblclick', () => {\n\n            const fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement //for safari\n\n            if (!fullscreenElement) {\n                if (canvas.requestFullscreen) {\n                    canvas.requestFullscreen(); // doesn't work on Safari\n                } else if (canvas.webkitRequestFullscreen) {\n                    canvas.webkitRequestFullscreen(); //for Safari\n                }\n\n            } else {\n                if (document.exitFullscreen) {\n                    document.exitFullscreen(); //not the canvas, it is document    \n                } else if (document.webkitExitFullscreen) {\n                    document.webkitExitFullscreen(); //for Safari\n                }\n\n            }\n        });\n        /**\n         * Camera\n         */\n        // Base camera\n        const camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 1, 10000)\n        camera.position.set(0, 100, 1000);\n        scene.add(camera)\n\n\n        // Controls\n        const controls = new OrbitControls(camera, canvas)\n        controls.enableDamping = true\n\n        /**\n         * Renderer\n         */\n        const renderer = new THREE.WebGLRenderer({\n            canvas: canvas\n        })\n\n        renderer.setSize(sizes.width, sizes.height)\n\n        /**\n         * Animate\n         */\n        const clock = new THREE.Clock()\n\n        const tick = () => {\n            const delta = clock.getDelta();\n            const time = clock.getElapsedTime() * 10;\n\n            const position = waterGeometry.attributes.position;\n\n            for (let i = 0; i < position.count; i++) {\n\n                const y = 35 * Math.sin(i / 5 + (time + i) / 7);\n                position.setY(i, y);\n\n            }\n            position.needsUpdate = true;\n\n            // controls.update( delta );\n\n            const elapsedTime = clock.getElapsedTime()\n\n            // Update controls\n            controls.update()\n\n            // Render\n            renderer.setClearColor(0xffffff, 1);\n            renderer.render(scene, camera)\n\n            // Call tick again on the next frame\n            window.requestAnimationFrame(tick)\n        }\n\n        tick()\n    }\n    render() {\n        return (\n            <div>\n                <canvas class=\"webgl\"></canvas>\n            </div>\n        )\n    }\n}\n\nexport default Day1;","/Users/jeeyoonhyun/immersive-web/src/Pages/Day2.js",["97","98","99"],"import React, { Component } from 'react';\nimport { Link } from 'react-router';\nimport '../day2/style.css'\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js'\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer.js';\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass.js';\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass.js';\nimport * as THREE from \"three\";\n\n// The number of columns change by resizing the window\nclass Day2 extends React.Component {\n    componentDidMount() {\n        //    insert three.js code\n        /**\n     * Base\n     */\n        // Canvas\n        const canvas = document.querySelector('canvas.webgl')\n\n        // Scene\n        const scene = new THREE.Scene()\n\n        /**\n         * Object\n         */\n\n        let mesh;\n        let geometry;\n        const group = new THREE.Group();\n        // const geometry = new THREE.TorusKnotGeometry( 1, 0.02, 8, 16 );\n        const material = new THREE.MeshBasicMaterial({ color: 0xffffff });\n        mesh = new THREE.Mesh(geometry, material);\n        scene.add(mesh);\n\n        for (let i = 0; i < 10; i++) {\n            geometry = new THREE.TorusKnotGeometry(0.5, 0.02, 8, 16, 10 + Math.floor(Math.random() * 10), 10 + Math.floor(Math.random() * 10));\n            mesh = new THREE.Mesh(geometry, material);\n            mesh.position.set(Math.floor(Math.random() * 3), Math.floor(Math.random() * 3), Math.floor(Math.random() * 3));\n            group.add(mesh);\n        }\n\n        scene.add(group);\n        group.position.set(0, 0, -1);\n        let params = {\n            exposure: 1,\n            bloomStrength: 1.5,\n            bloomThreshold: 0.1,\n            bloomRadius: 0\n        };\n\n        /**\n         * Sizes\n         */\n        const sizes = {\n            width: window.innerWidth,\n            height: window.innerHeight\n        }\n\n        /**\n         * Camera\n         */\n        // Base camera\n        const camera = new THREE.PerspectiveCamera(30, sizes.width / sizes.height, 1, 50)\n        camera.position.set(1, -3, 0);\n        scene.add(camera);\n        camera.lookAt(group);\n\n        // Controls\n        const controls = new OrbitControls(camera, canvas)\n        controls.enableDamping = true\n\n        // lights\n        scene.add(new THREE.AmbientLight(0x404040));\n        const pointLight = new THREE.PointLight(0xffffff, 1);\n        camera.add(pointLight);\n\n        /**\n         * Renderer\n         */\n        const renderer = new THREE.WebGLRenderer({\n            canvas: canvas,\n            antialias: true\n        })\n        renderer.toneMapping = THREE.ReinhardToneMapping;\n        renderer.setSize(sizes.width, sizes.height)\n\n        // RenderPass\n\n        const renderScene = new RenderPass(scene, camera);\n\n        const bloomPass = new UnrealBloomPass(new THREE.Vector2(sizes.innerWidth, sizes.innerHeight), 1.5, 0.4, 0.85);\n        bloomPass.threshold = params.bloomThreshold;\n        bloomPass.strength = params.bloomStrength;\n        bloomPass.radius = params.bloomRadius;\n\n        let composer = new EffectComposer(renderer);\n        composer.addPass(renderScene);\n        composer.addPass(bloomPass);\n\n        /**\n         * Animate\n         */\n        const clock = new THREE.Clock()\n        const scaleKF = new THREE.VectorKeyframeTrack('.scale', [0, 1, 2], [1, 1, 1, 2, 2, 2, 1, 1, 1]);\n        const clip = new THREE.AnimationClip('Action', 3, [scaleKF]);\n\n        // setup the THREE.AnimationMixer\n        let mixer = new THREE.AnimationMixer(mesh);\n\n        // create a ClipAction and set it to play\n        const clipAction = mixer.clipAction(clip);\n\n        //resize\n        // Listen to the resize event\n        window.addEventListener('resize', () => {\n            //update size for resize\n            sizes.width = window.innerWidth\n            sizes.height = window.innerHeight\n\n            //update camera\n            camera.aspect = sizes.width / sizes.height\n            camera.updateProjectionMatrix();\n\n            //update renderer\n            renderer.setSize(sizes.width, sizes.height) // see https://threejs.org/docs/index.html?q=updat#manual/en/introduction/How-to-update-things\n            renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2)); // change pixel ratio to reduce jaggies & limit it into 2(more than 2 becomes extremely slow)\n        })\n\n        window.addEventListener('dblclick', () => {\n\n            const fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement //for safari\n\n            if (!fullscreenElement) {\n                if (canvas.requestFullscreen) {\n                    canvas.requestFullscreen(); // doesn't work on Safari\n                } else if (canvas.webkitRequestFullscreen) {\n                    canvas.webkitRequestFullscreen(); //for Safari\n                }\n\n            } else {\n                if (document.exitFullscreen) {\n                    document.exitFullscreen(); //not the canvas, it is document    \n                } else if (document.webkitExitFullscreen) {\n                    document.webkitExitFullscreen(); //for Safari\n                }\n\n            }\n        });\n\n        const tick = () => {\n            const delta = clock.getDelta();\n            const time = clock.getElapsedTime() * 10;\n\n            params.bloomStrength = 5 * Math.sin(time);\n            params.needsUpdate = true;\n\n            group.rotation.x += 0.01;\n            group.rotation.y += 0.01;\n\n            // Update controls\n            controls.update()\n\n            // Render\n            renderer.render(scene, camera)\n\n            // Call tick again on the next frame\n            window.requestAnimationFrame(tick)\n\n            composer.render();\n            clipAction.play();\n        }\n\n        tick()\n    }\n    render() {\n        return (\n            <div>\n                <canvas class=\"webgl\"></canvas>\n            </div>\n        )\n    }\n}\n\nexport default Day2;","/Users/jeeyoonhyun/immersive-web/src/Pages/Day3.js",["100","101","102","103","104"],{"ruleId":"105","severity":1,"message":"106","line":6,"column":25,"nodeType":"107","messageId":"108","endLine":6,"endColumn":30},{"ruleId":"105","severity":1,"message":"109","line":6,"column":32,"nodeType":"107","messageId":"108","endLine":6,"endColumn":38},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"105","severity":1,"message":"114","line":1,"column":8,"nodeType":"107","messageId":"108","endLine":1,"endColumn":12},{"ruleId":"105","severity":1,"message":"115","line":3,"column":10,"nodeType":"107","messageId":"108","endLine":3,"endColumn":23},{"ruleId":"105","severity":1,"message":"116","line":1,"column":17,"nodeType":"107","messageId":"108","endLine":1,"endColumn":26},{"ruleId":"105","severity":1,"message":"116","line":1,"column":17,"nodeType":"107","messageId":"108","endLine":1,"endColumn":26},{"ruleId":"105","severity":1,"message":"117","line":2,"column":8,"nodeType":"107","messageId":"108","endLine":2,"endColumn":14},{"ruleId":"105","severity":1,"message":"116","line":1,"column":17,"nodeType":"107","messageId":"108","endLine":1,"endColumn":26},{"ruleId":"105","severity":1,"message":"116","line":1,"column":17,"nodeType":"107","messageId":"108","endLine":1,"endColumn":26},{"ruleId":"105","severity":1,"message":"116","line":1,"column":17,"nodeType":"107","messageId":"108","endLine":1,"endColumn":26},{"ruleId":"105","severity":1,"message":"116","line":1,"column":17,"nodeType":"107","messageId":"108","endLine":1,"endColumn":26},{"ruleId":"105","severity":1,"message":"118","line":2,"column":10,"nodeType":"107","messageId":"108","endLine":2,"endColumn":14},{"ruleId":"105","severity":1,"message":"119","line":34,"column":15,"nodeType":"107","messageId":"108","endLine":34,"endColumn":19},{"ruleId":"105","severity":1,"message":"120","line":40,"column":23,"nodeType":"107","messageId":"108","endLine":40,"endColumn":28},{"ruleId":"105","severity":1,"message":"121","line":195,"column":19,"nodeType":"107","messageId":"108","endLine":195,"endColumn":24},{"ruleId":"105","severity":1,"message":"122","line":210,"column":19,"nodeType":"107","messageId":"108","endLine":210,"endColumn":30},{"ruleId":"105","severity":1,"message":"119","line":28,"column":7,"nodeType":"107","messageId":"108","endLine":28,"endColumn":11},{"ruleId":"105","severity":1,"message":"120","line":34,"column":15,"nodeType":"107","messageId":"108","endLine":34,"endColumn":20},{"ruleId":"105","severity":1,"message":"121","line":189,"column":11,"nodeType":"107","messageId":"108","endLine":189,"endColumn":16},{"ruleId":"105","severity":1,"message":"122","line":204,"column":11,"nodeType":"107","messageId":"108","endLine":204,"endColumn":22},{"ruleId":"105","severity":1,"message":"116","line":1,"column":17,"nodeType":"107","messageId":"108","endLine":1,"endColumn":26},{"ruleId":"105","severity":1,"message":"118","line":2,"column":10,"nodeType":"107","messageId":"108","endLine":2,"endColumn":14},{"ruleId":"105","severity":1,"message":"119","line":34,"column":15,"nodeType":"107","messageId":"108","endLine":34,"endColumn":19},{"ruleId":"105","severity":1,"message":"120","line":40,"column":23,"nodeType":"107","messageId":"108","endLine":40,"endColumn":28},{"ruleId":"105","severity":1,"message":"121","line":195,"column":19,"nodeType":"107","messageId":"108","endLine":195,"endColumn":24},{"ruleId":"105","severity":1,"message":"122","line":210,"column":19,"nodeType":"107","messageId":"108","endLine":210,"endColumn":30},{"ruleId":"105","severity":1,"message":"116","line":1,"column":17,"nodeType":"107","messageId":"108","endLine":1,"endColumn":26},{"ruleId":"105","severity":1,"message":"118","line":2,"column":10,"nodeType":"107","messageId":"108","endLine":2,"endColumn":14},{"ruleId":"105","severity":1,"message":"121","line":151,"column":19,"nodeType":"107","messageId":"108","endLine":151,"endColumn":24},{"ruleId":"105","severity":1,"message":"116","line":1,"column":17,"nodeType":"107","messageId":"108","endLine":1,"endColumn":26},{"ruleId":"105","severity":1,"message":"118","line":2,"column":10,"nodeType":"107","messageId":"108","endLine":2,"endColumn":14},{"ruleId":"105","severity":1,"message":"123","line":4,"column":10,"nodeType":"107","messageId":"108","endLine":4,"endColumn":26},{"ruleId":"105","severity":1,"message":"122","line":258,"column":11,"nodeType":"107","messageId":"108","endLine":258,"endColumn":22},{"ruleId":"124","severity":1,"message":"125","line":284,"column":21,"nodeType":"126","endLine":284,"endColumn":79},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","no-native-reassign",["127"],"no-negated-in-lhs",["128"],"'logo' is defined but never used.","'BrowserRouter' is defined but never used.","'Component' is defined but never used.","'Header' is defined but never used.","'Link' is defined but never used.","'font' is assigned a value but never used.","'color' is assigned a value but never used.","'delta' is assigned a value but never used.","'elapsedTime' is assigned a value but never used.","'DirectionalLight' is defined but never used.","jsx-a11y/no-redundant-roles","The element button has an implicit role of button. Defining this explicitly is redundant and should be avoided.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]